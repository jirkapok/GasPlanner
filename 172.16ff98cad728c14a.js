"use strict";(self.webpackChunkplanner=self.webpackChunkplanner||[]).push([[172],{991:(et,Q,I)=>{I.d(Q,{e:()=>v});var g=I(103);class v{static toTanks(a){const u=[];return a.forEach(p=>{const S=new g.VQ(p.size,p.startPressure,0);S.id=p.id,S.gas.fO2=p.gas.fO2,S.gas.fHe=p.gas.fHe,u.push(S)}),g.bz.renumberIds(u),u}static loadWorkingPressure(a,u){for(let p=0;p<u.length;p++)u[p].workingPressureBars=a[p].workPressure}static fromTanks(a){const u=[];return a.forEach(p=>{const S=p.tank,P={id:S.id,size:S.size,workPressure:p.workingPressureBars,startPressure:S.startPressure,gas:v.fromGas(S.gas)};u.push(P)}),u}static toConsumed(a){const u=[];for(let p=0;p<a.length;p++){const S=a[p];u.push({id:S.id,consumed:S.consumed,reserve:S.reserve})}return u}static toSegments(a,u){const p=[];for(let S=0;S<a.length;S++){const P=a[S],M=v.toGas(P.gas),A=new g.XX(P.startDepth,P.endDepth,M,P.duration);P.tankId>0&&P.tankId<=u.length&&(A.tank=u[P.tankId-1]),p.push(A)}return p}static fromSegments(a){const u=[];return a.forEach(p=>{const P={startDepth:p.startDepth,endDepth:p.endDepth,duration:p.duration,tankId:p.tank?p.tank.id:0,gas:v.fromGas(p.gas)};u.push(P)}),u}static toProfile(a,u){const p=v.toSegments(a.segments,u);return g.Z1.fromProfile(p,a.ceilings)}static fromProfile(a){return{segments:v.fromSegments(a.segments),ceilings:a.ceilings,errors:v.fromEvents(a.errors)}}static toEvents(a){const u=new g.zW;return a.forEach(p=>{const S=g.ju.create(p.type,p.timeStamp,p.depth);S.message=p.message,p.gas&&(S.gas=v.toGas(p.gas)),u.add(S)}),u}static fromEvents(a){const u=[];return a.forEach(p=>{const S={timeStamp:p.timeStamp,depth:p.depth,type:p.type,message:p.message};p.gas&&(S.gas=v.fromGas(p.gas)),u.push(S)}),u}static fromDiver(a){return{rmv:a.rmv,maxPpO2:a.maxPpO2,maxDecoPpO2:a.maxDecoPpO2}}static toDiver(a){const u=new g.rr(a.rmv,a.maxPpO2);return u.maxDecoPpO2=a.maxDecoPpO2,u}static fromOptions(a){return{gfLow:a.gfLow,gfHigh:a.gfHigh,maxPpO2:a.maxPpO2,maxDecoPpO2:a.maxDecoPpO2,salinity:a.salinity,altitude:a.altitude,roundStopsToMinutes:a.roundStopsToMinutes,gasSwitchDuration:a.gasSwitchDuration,safetyStop:a.safetyStop,lastStopDepth:a.lastStopDepth,decoStopDistance:a.decoStopDistance,minimumAutoStopDepth:a.minimumAutoStopDepth,maxEND:a.maxEND,oxygenNarcotic:a.oxygenNarcotic,ascentSpeed6m:a.ascentSpeed6m,ascentSpeed50percTo6m:a.ascentSpeed50percTo6m,ascentSpeed50perc:a.ascentSpeed50perc,descentSpeed:a.descentSpeed,problemSolvingDuration:a.problemSolvingDuration}}static toOptions(a){const u=new g.Ei(a.gfLow,a.gfHigh,a.maxPpO2,a.maxDecoPpO2,a.salinity);return u.altitude=a.altitude,u.roundStopsToMinutes=a.roundStopsToMinutes,u.gasSwitchDuration=a.gasSwitchDuration,u.safetyStop=a.safetyStop,u.lastStopDepth=a.lastStopDepth,u.decoStopDistance=a.decoStopDistance,u.minimumAutoStopDepth=a.minimumAutoStopDepth,u.maxEND=a.maxEND,u.oxygenNarcotic=a.oxygenNarcotic,u.ascentSpeed6m=a.ascentSpeed6m,u.ascentSpeed50percTo6m=a.ascentSpeed50percTo6m,u.ascentSpeed50perc=a.ascentSpeed50perc,u.descentSpeed=a.descentSpeed,u.problemSolvingDuration=a.problemSolvingDuration,u}static fromDensity(a){return{gas:v.fromGas(a.gas),depth:a.depth,density:a.density}}static toDensity(a){const u=v.toGas(a.gas);return new g.kf(u,a.depth,a.density)}static toGas(a){return new g.RP(a.fO2,a.fHe)}static fromGas(a){return{fO2:a.fO2,fHe:a.fHe}}}},172:(et,Q,I)=>{I.d(Q,{P:()=>f});var g=I(103),v=I(991);class f{static calculateDecompression(u){const p=v.e.toTanks(u.tanks),S=v.e.toSegments(u.plan,p),P=g.wC.fromCollection(S),M=g.Vw.fromTanks(p),A=new g.dD,C=v.e.toOptions(u.options),h=A.calculateDecompression(C,M,P),G=v.e.fromProfile(h),m=g.uv.fromProfile({maxDensity:u.eventOptions.maxDensity,startAscentIndex:P.startAscentIndex,profile:h.segments,ceilings:h.ceilings,profileOptions:C});return{profile:G,events:v.e.fromEvents(m.items)}}static diveInfo(u){const p=v.e.toTanks(u.tanks),S=g.Vw.fromTanks(p),P=v.e.toSegments(u.plan,p),M=g.wC.fromCollection(P),A=new g.dD,C=v.e.toOptions(u.options),h=A.noDecoLimitMultiLevel(M,S,C),G=new g.FQ(u.options).create(),R=new g.Uz(G).calculateForProfile(P),m=new g.rQ(G).calculateForProfile(P),T=new g.E1(G).forProfile(P);return{noDeco:h,otu:R,cns:m,density:v.e.fromDensity(T)}}static calculateConsumption(u){const p=new g.FQ(u.options).create(),S=new g.Cb(p),P=v.e.toTanks(u.tanks),M=v.e.toSegments(u.profile,P),A=v.e.toSegments(u.plan,P),C=g.wC.fromCollection(A),h=new g.rr(u.diver.rmv,u.options.maxPpO2),G=v.e.toOptions(u.options),R=S.calculateMaxBottomTime(C,P,h,G),m=S.emergencyAscent(M,G,P);let T=g.wC.duration(m);return T=g.qp.toMinutes(T),S.consumeFromTanks2(M,m,G,P,h),{maxTime:R,timeToSurface:T,tanks:v.e.toConsumed(P)}}}},103:(et,Q,I)=>{I.d(Q,{Cb:()=>pt,E1:()=>ot,Ei:()=>G,FQ:()=>M,RP:()=>O,Uz:()=>Dt,VQ:()=>J,Vw:()=>W,XX:()=>k,Z1:()=>V,bz:()=>X,dD:()=>j,ju:()=>T,kf:()=>Y,qp:()=>w,rQ:()=>lt,rr:()=>ft,uv:()=>tt,wC:()=>N,zW:()=>st});class g{constructor(t,e,s,r,n,i){this._n2HalfTime=t,this._n2A=e,this._n2B=s,this._heHalfTime=r,this._heA=n,this._heB=i}get n2HalfTime(){return this._n2HalfTime}get n2A(){return this._n2A}get n2B(){return this._n2B}get heHalfTime(){return this._heHalfTime}get heA(){return this._heA}get heB(){return this._heB}}class v{}v.Buhlmann_ZHL16C=[new g(5,1.1696,.5578,1.88,1.6189,.477),new g(8,1,.6514,3.02,1.383,.5747),new g(12.5,.8618,.7222,4.72,1.1919,.6527),new g(18.5,.7562,.7826,6.99,1.0458,.7223),new g(27,.62,.8125,10.21,.922,.7582),new g(38.3,.5043,.8434,14.48,.8205,.7957),new g(54.3,.441,.8693,20.53,.7305,.8279),new g(77,.4,.891,29.11,.6502,.8553),new g(109,.375,.9092,41.2,.595,.8757),new g(146,.35,.9222,55.19,.5545,.8903),new g(187,.3295,.9319,70.69,.5333,.8997),new g(239,.3065,.9403,90.34,.5189,.9073),new g(305,.2835,.9477,115.29,.5181,.9122),new g(390,.261,.9544,147.42,.5176,.9171),new g(498,.248,.9602,188.24,.5172,.9217),new g(635,.2327,.9653,240.03,.5119,.9267)];class f{static fix(t){return Number(t.toFixed(10))}static roundTwoDecimals(t){return f.round(t,2)}static round(t,e=0){return f.adapt(Math.round,t,e)}static floorTwoDecimals(t){return f.floor(t,2)}static floor(t,e=0){return f.adapt(Math.floor,t,e)}static ceilTwoDecimals(t){return f.ceil(t,2)}static ceil(t,e=0){return f.adapt(Math.ceil,t,e)}static ceilDistance(t,e){return f.adaptDistance(Math.ceil,t,e)}static roundDistance(t,e){return f.adaptDistance(Math.round,t,e)}static floorDistance(t,e){return f.adaptDistance(Math.floor,t,e)}static adapt(t,e,s){const r=Math.pow(10,s);return t(e*r)/r}static adaptDistance(t,e,s){return t(e/s)*s}}var a=(()=>((a=a||{})[a.fresh=1]="fresh",a[a.brackish=2]="brackish",a[a.salt=3]="salt",a))();let u=(()=>{class o{}return o.fresh=1e3,o.brackish=1020,o.salt=1030,o})(),p=(()=>{class o{}return o.standard=9.80665,o})(),S=(()=>{class o{static pascalToBar(e){return e/o.coefficient}static barToPascal(e){return e*o.coefficient}}return o.coefficient=1e5,o})(),P=(()=>{class o{static atAltitude(e){return S.barToPascal(this.standard)*Math.pow(288.15/(288.15+-.0065*e),.0289644*p.standard/-.05404308)}}return o.standard=1.01325,o})();class M{constructor(t){this.options=t}create(){switch(this.options.salinity){case a.salt:return A.forSaltWater(this.options.altitude);case a.brackish:return A.forBrackishWater(this.options.altitude);default:return A.forFreshWater(this.options.altitude)}}}class A{constructor(t,e){this.density=t,this._gravity=p.standard;const s=P.atAltitude(e);this._surfacePressure=S.pascalToBar(s)}get surfacePressure(){return this._surfacePressure}static forSaltWater(t=0){return new A(u.salt,t)}static forBrackishWater(t=0){return new A(u.brackish,t)}static forFreshWater(t=0){return new A(u.fresh,t)}static simple(){const t=new A(u.fresh,0);return t._surfacePressure=1,t._gravity=10,t}toBar(t){return S.pascalToBar(t*(this.density*this._gravity))+this._surfacePressure}fromBar(t){if(t<this._surfacePressure)throw new Error("Lower pressure than altitude isn`t convertible to depth.");const e=this.density*this._gravity;return S.barToPascal(t-this._surfacePressure)/e}}var C=(()=>((C=C||{})[C.never=1]="never",C[C.auto=2]="auto",C[C.always=3]="always",C))();class h{static setMediumConservatism(t){t.gfLow=h.gfLow,t.gfHigh=h.gfHigh}static useGeneralRecommended(t){t.safetyStop=h.safetyStopRecre,t.roundStopsToMinutes=h.roundStopsToMinutes,t.gasSwitchDuration=h.gasSwitchDuration,t.oxygenNarcotic=h.oxygenNarcotic}}h.altitude=0,h.saltWater=a.salt,h.roundStopsToMinutes=!1,h.gasSwitchDuration=2,h.problemSolvingDuration=1,h.lastStopDepth=3,h.lastStopDepthRecre=5,h.safetyStopRecre=C.auto,h.decoStopDistance=3,h.minimumAutoStopDepth=10,h.addSafetyStop=!0,h.maxEND=30,h.oxygenNarcotic=!0,h.ascentSpeed6m=3,h.ascentSpeed50percTo6m=6,h.ascentSpeed50perc=9,h.descentSpeed=18,h.gfLow=.4,h.gfHigh=.85,h.maxPpO2=1.4,h.maxDecoPpO2=1.6;class G{constructor(t=h.gfLow,e=h.gfHigh,s=h.maxPpO2,r=h.maxDecoPpO2,n=h.saltWater){this.gfLow=t,this.gfHigh=e,this.maxPpO2=s,this.maxDecoPpO2=r,this.salinity=n,this.altitude=h.altitude,this.roundStopsToMinutes=h.roundStopsToMinutes,this.gasSwitchDuration=h.gasSwitchDuration,this.safetyStop=h.safetyStopRecre,this.lastStopDepth=h.lastStopDepth,this.decoStopDistance=h.decoStopDistance,this.minimumAutoStopDepth=h.minimumAutoStopDepth,this.maxEND=h.maxEND,this.oxygenNarcotic=!0,this.ascentSpeed6m=h.ascentSpeed6m,this.ascentSpeed50percTo6m=h.ascentSpeed50percTo6m,this.ascentSpeed50perc=h.ascentSpeed50perc,this.descentSpeed=h.descentSpeed,this.problemSolvingDuration=h.problemSolvingDuration,this.gfLow=t||h.gfLow,this.gfHigh=e||h.gfHigh,this.maxPpO2=s||h.maxPpO2,this.maxDecoPpO2=r||h.maxDecoPpO2,this.salinity=n||h.saltWater}loadFrom(t){this.gfLow=t.gfLow||this.gfLow,this.gfHigh=t.gfHigh||this.gfHigh,this.maxPpO2=t.maxPpO2||this.maxPpO2,this.maxDecoPpO2=t.maxDecoPpO2||this.maxDecoPpO2,this.oxygenNarcotic=!!t.oxygenNarcotic,this.salinity=t.salinity||this.salinity,this.altitude=t.altitude||0===t.altitude?t.altitude:this.altitude,this.roundStopsToMinutes=!!t.roundStopsToMinutes,this.gasSwitchDuration=t.gasSwitchDuration||this.gasSwitchDuration,this.problemSolvingDuration=t.problemSolvingDuration||this.problemSolvingDuration,this.lastStopDepth=t.lastStopDepth||this.lastStopDepth,this.decoStopDistance=t.decoStopDistance||this.decoStopDistance,this.minimumAutoStopDepth=t.minimumAutoStopDepth||this.minimumAutoStopDepth,this.safetyStop=t.safetyStop||this.safetyStop,this.maxEND=t.maxEND||this.maxEND,this.ascentSpeed6m=t.ascentSpeed6m||this.ascentSpeed6m,this.ascentSpeed50percTo6m=t.ascentSpeed50percTo6m||this.ascentSpeed50percTo6m,this.ascentSpeed50perc=t.ascentSpeed50perc||this.ascentSpeed50perc,this.descentSpeed=t.descentSpeed||this.descentSpeed}}class R{constructor(t,e){this.depthConverter=t,this.options=e}toDecoStop(t){const e=this.depthConverter.fromBar(t);return f.roundDistance(e,this.options.decoStopDistance)}nextStop(t){if(t<=this.options.lastStopDepth)return 0;const e=f.floorDistance(t,this.options.decoStopDistance);if(e!==t)return e;const s=t-this.options.decoStopDistance;return s<=this.options.lastStopDepth?this.options.lastStopDepth:s}addSafetyStop(t,e){return(this.options.safetyStop===C.always||this.options.safetyStop===C.auto&&e>this.options.minimumAutoStopDepth)&&t===this.options.lastStopDepth}}var m=(()=>((m=m||{})[m.noAction=0]="noAction",m[m.error=1]="error",m[m.gasSwitch=2]="gasSwitch",m[m.noDecoEnd=3]="noDecoEnd",m[m.lowPpO2=4]="lowPpO2",m[m.highPpO2=5]="highPpO2",m[m.highAscentSpeed=6]="highAscentSpeed",m[m.highDescentSpeed=7]="highDescentSpeed",m[m.brokenCeiling=8]="brokenCeiling",m[m.maxEndExceeded=9]="maxEndExceeded",m[m.switchToHigherN2=10]="switchToHigherN2",m[m.highGasDensity=11]="highGasDensity",m[m.safetyStop=12]="safetyStop",m))();class T{constructor(t,e,s,r,n){this.timeStamp=t,this.depth=e,this.type=s,this.message=r,this.gas=n}static create(t,e,s,r){return new T(e,s,t,"",r)}static createError(t){return new T(0,0,m.error,t)}}class E{static createError(t){return T.createError(t)}static createSafetyStopStart(t,e){return T.create(m.safetyStop,t,e)}static createNoDecoEnd(t,e){return T.create(m.noDecoEnd,t,e)}static createGasSwitch(t,e,s){return T.create(m.gasSwitch,t,e,s)}static createLowPpO2(t,e){return T.create(m.lowPpO2,t,e)}static createHighPpO2(t,e){return T.create(m.highPpO2,t,e)}static createHighAscentSpeed(t,e){return T.create(m.highAscentSpeed,t,e)}static createHighDescentSpeed(t,e){return T.create(m.highDescentSpeed,t,e)}static createBrokenCeiling(t,e){return T.create(m.brokenCeiling,t,e)}static createMaxEndExceeded(t,e,s){return T.create(m.maxEndExceeded,t,e,s)}static createSwitchToHigherN2(t,e,s){return T.create(m.switchToHigherN2,t,e,s)}static createHighDensity(t,e,s){return T.create(m.highGasDensity,t,e,s)}}class st{constructor(){this.items=[]}add(t){this.items.push(t)}}class ct{constructor(t,e){this.time=t,this.depth=e}get notAtSurface(){return this.depth>0}static isDecoDive(t){for(const e of t)if(e.notAtSurface)return!0;return!1}}class V{constructor(t,e,s){this.seg=t,this.ceil=e,this.err=s}get segments(){return this.seg}get ceilings(){return this.ceil}get errors(){return this.err}static fromErrors(t,e){return new V(t,[],e)}static fromProfile(t,e){return new V(t,e,[])}}class ht{static validate(t,e,s){const r=[];if(!t.hasBottomGas){const n=E.createError("At least one bottom gas has to be defined.");return r.push(n),r}return r}}class ut{constructor(t,e){this.gases=t,this.depthConverter=A.simple(),this.depthLevels=new R(this.depthConverter,e)}bestGas(t){const e=this.depthConverter.toBar(t.currentDepth),s=this.depthConverter.toBar(t.maxEnd);let r=t.currentGas;return this.gases.all.forEach(n=>{const i=n.mod(t.maxDecoPpO2),c=this.depthLevels.toDecoStop(i),d=n.end(e,t.oxygenNarcotic);t.currentDepth<=c&&d<=s&&(!r||r.fO2<n.fO2)&&(r=n)}),r}}class W{constructor(){this.bottomGases=[]}get all(){return this.bottomGases.slice()}get hasBottomGas(){return this.bottomGases.length>=1}static fromTanks(t){const e=new W;return t.forEach(s=>{e.add(s.gas)}),e}add(t){this.bottomGases.push(t)}isRegistered(t){return this.bottomGases.includes(t)}}class L{static partialPressure(t,e){return t*e}static mod(t,e){return t/e}static bestMix(t,e,s){const n=t/s.toBar(e);return n>1?1:n}static ead(t,e,s=l.o2InAir){const n=1-s;return L.end(e,1-t)/n}static end(t,e,s=0){return t*this.narcoticIndex(s,e)}static mnd(t,e,s=0){return t/this.narcoticIndex(s,e)}static ceiling(t,e){const n=.18/t*e;return n<e?e:n}static narcoticIndex(t,e=0){return e+t}}class O{constructor(t,e){if(this._fO2=t,this._fHe=e,this.contentExceeds100percent())throw new Error("O2 + He can't exceed 100 %")}get fN2(){return 1-this._fO2-this._fHe}get fO2(){return this._fO2}get fHe(){return this._fHe}get name(){return l.nameFor(this.fO2,this.fHe)}set fO2(t){this._fO2=t>1?1:t,this.contentExceeds100percent()&&(this._fHe=this.countRemaining(this._fO2))}set fHe(t){this._fHe=t>.99?.99:t,this.contentExceeds100percent()&&(this._fO2=this.countRemaining(this._fHe))}copy(){return new O(this._fO2,this._fHe)}mod(t){return L.mod(t,this._fO2)}end(t,e){return L.end(t,this.fN2,e?this._fO2:0)}mnd(t,e){return L.mnd(t,this.fN2,e?this._fO2:0)}ceiling(t){return L.ceiling(this._fO2,t)}compositionEquals(t){return!!t&&this._fO2===t._fO2&&this._fHe===t._fHe}contentCode(){return f.round(1e4*this._fO2*1e4)+f.round(1e4*this._fHe)}contentExceeds100percent(){return this._fO2+this._fHe>1}countRemaining(t){return f.round(1-t,5)}}class l{static nitroxNames(){return l.allNames().slice(0,6)}static allNames(){return Array.from(l.map.keys())}static nameFor(t,e=0){const r=f.round(100*t),n=f.round(100*e);return r<=0?"":n<=0?r>=100?l.oxygenName:21===r?l.airName:"EAN"+r.toString():`${r>=21?"Helitrox":"Trimix"} ${r.toString()}/${n.toString()}`}static byName(t){if(l.map.has(t))return l.map.get(t)??null;const e=l.namesRegEx.exec(t);if(e){if(e[1]){const s=Number(e[1])/100;if(s>0)return new O(s,0)}if(e[2]&&e[3]){const s=Number(e[2])/100,r=Number(e[3])/100;if(s>0&&r>0)return new O(s,r)}}return null}}l.o2InAir=.209,l.nitroxInAir=1-l.o2InAir,l.oxygen=new O(1,0),l.ean50=new O(.5,0),l.ean38=new O(.38,0),l.ean36=new O(.36,0),l.ean32=new O(.32,0),l.trimix3525=new O(.35,.25),l.trimix2525=new O(.25,.25),l.air=new O(l.o2InAir,0),l.trimix2135=new O(.21,.35),l.trimix1845=new O(.18,.45),l.trimix1555=new O(.15,.55),l.trimix1260=new O(.12,.6),l.trimix1070=new O(.1,.7),l.airName="Air",l.oxygenName="Oxygen",l.namesRegEx=/[EAN](?<fO2>\d{2})|(?<fO2b>\d{2})\/(?<fHe>\d{2})/i,l.map=new Map([[l.airName,l.air],["EAN32",l.ean32],["EAN36",l.ean36],["EAN38",l.ean38],["EAN50",l.ean50],[l.oxygenName,l.oxygen],["Helitrox 35/25",l.trimix3525],["Helitrox 25/25",l.trimix2525],["Helitrox 21/35",l.trimix2135],["Trimix 18/45",l.trimix1845],["Trimix 15/55",l.trimix1555],["Trimix 12/60",l.trimix1260],["Trimix 10/70",l.trimix1070]]);class $ extends g{constructor(t,e){super(t.n2HalfTime,t.n2A,t.n2B,t.heHalfTime,t.heA,t.heB),this._pN2=0,this._pHe=0,this._pTotal=0,this._a=0,this._b=0,this._pN2=L.partialPressure(e,.79)-.0627,this._pHe=0,this._pTotal=this.pN2+this.pHe}get pN2(){return this._pN2}get pHe(){return this._pHe}get pTotal(){return this._pTotal}get a(){return this._a}get b(){return this._b}copy(){const t=new $(this,1);return t._pN2=this._pN2,t._pHe=this._pHe,t._pTotal=this._pTotal,t._a=this._a,t._b=this._b,t}ceiling(t){return(this.pTotal-this.a*t)/(t/this.b+1-t)}load(t,e){this._pN2=this.loadGas(t,e.fN2,this.pN2,this.n2HalfTime),this._pHe=this.loadGas(t,e.fHe,this.pHe,this.heHalfTime);const s=this.pTotal;return this._pTotal=this.pN2+this.pHe,this._a=(this.n2A*this.pN2+this.heA*this.pHe)/this.pTotal,this._b=(this.n2B*this.pN2+this.heB*this.pHe)/this.pTotal,this.pTotal-s}loadGas(t,e,s,r){return this.schreinerEquation(s,t.startPressure*e,t.duration,r,t.speed*e)}schreinerEquation(t,e,s,r,n){const c=.01155245301/r;return e+n*(s-1/c)-(e-t-n/c)*Math.exp(-c*s)}}class z{constructor(){this.compartments=[]}static createFromOther(t){const e=new z;return e.compartments=z.copy(t),e}static createFromSurfacePressure(t){const e=new z;for(let s=0;s<v.Buhlmann_ZHL16C.length;s++){const n=new $(v.Buhlmann_ZHL16C[s],t);e.compartments.push(n)}return e}static copy(t){const e=[];for(let s=0;s<t.length;s++){const r=t[s].copy();e.push(r)}return e}ceiling(t){let e=0;for(let s=0;s<this.compartments.length;s++){const r=this.compartments[s].ceiling(t);r>e&&(e=r)}return e}load(t,e){let s=0;for(let r=0;r<this.compartments.length;r++)s+=this.compartments[r].load(t,e);return s}}class w{static toSeconds(t){return t*w.oneMinute}static toMinutes(t){return t/w.oneMinute}static toDate(t){return new Date(1970,1,1,0,0,t,0)}static secondsFromDate(t){const e=new Date(t);let s=e.getSeconds();return s+=e.getMinutes()*w.oneMinute,s+=e.getHours()*Math.pow(w.oneMinute,2),s}}w.oneSecond=1,w.oneMinute=60,w.oneDay=1440*w.oneMinute,w.safetyStopDuration=3*w.oneMinute;class F{static speed(t,e){return F.speedByXChange(e.start,e.end,t.end-t.start)}static speedByXChange(t,e,s){return(e-t)/s}static yValueAt(t,e,s){return t+e*s}static xValueAtAbsolute(t,e,s){const r=this.speed(t,e);return t.start+F.xValueAt(e.start,r,s)}static xValueAt(t,e,s){return 0===e?0:(s-t)/e}}class U{static validate(t,e){const s=[];if(!t.any()){const r=E.createError("There needs to be at least one segment at depth.");s.push(r)}return t.withAll(r=>{U.validateRegisteredGas(s,e,r)}),s}static validateRegisteredGas(t,e,s){if(!e.isRegistered(s.gas)){const n=E.createError(`Segment ${s.startDepth}-${s.endDepth} has gas not registered in gases.`);t.push(n)}}}class k{constructor(t,e,s,r){this.startDepth=t,this.endDepth=e,this._gas=s,this.duration=r}get gas(){return this._gas}get tank(){return this._tank}get speed(){return k.speed(this.startDepth,this.endDepth,this.duration)}get averageDepth(){return(this.startDepth+this.endDepth)/2}set tank(t){this._tank=t,t&&(this._gas=t.gas)}static from(t){const e=new k(t.startDepth,t.endDepth,t._gas,t.duration);return e.tank=t.tank,e}static speed(t,e,s){return F.speedByXChange(t,e,s)}static depthAt(t,e,s){return F.yValueAt(t,e,s)}static timeAt(t,e,s){return F.xValueAt(t,e,s)}contentEquals(t){return this.speed===t.speed&&this._gas===t._gas}depthAt(t){return k.depthAt(this.startDepth,this.speed,t)}mergeFrom(t){this.duration+=t.duration,this.endDepth=t.endDepth}}class N{constructor(){this.segments=[],this._maxDepth=0}get startAscentIndex(){return this.deepestPart().length}get startAscentTime(){const t=this.deepestPart();return N.duration(t)}get length(){return this.segments.length}get items(){return this.segments.slice()}get maxDepth(){return this._maxDepth}get currentDepth(){return this.any()?this.last().endDepth:0}get duration(){return N.duration(this.segments)}static from(t){return N.fromCollection(t.segments)}static fromCollection(t){const e=new N;return t.forEach(s=>{const r=k.from(s);e.segments.push(r),e.updateMaxDepth(r)}),e}static duration(t){let e=0;for(const s of t)e+=s.duration;return e}static averageDepth(t){if(t.length<=0)return 0;let e=0,s=0;return t.forEach(r=>{if(r.duration>0){const n=r.averageDepth*r.duration+s*e;s+=r.duration,e=n/s}}),e}add(t,e,s,r){const n=new k(t,e,s,r);return this.segments.push(n),this.updateMaxDepth(n),n}addFlat(t,e,s){return this.add(t,t,e,s)}addChangeTo(t,e,s){return this.add(this.currentDepth,t,e,s)}mergeFlat(t=0){if(t<0)return this.items;const e=[];for(let s=this.segments.length-1;s>t;s--){const r=this.segments[s-1],n=this.segments[s];r.contentEquals(n)&&(r.mergeFrom(n),e.push(n))}return this.segments=this.segments.filter(s=>!e.includes(s)),this.items}remove(t){this.segments=this.segments.filter(e=>e!==t),this.fixStartDepths()}cutDown(t){this.segments=this.segments.slice(0,this.segments.length-t),this.fixStartDepths()}withAll(t){for(let e=0;e<this.segments.length;e++)t(this.segments[e])}any(){return 0!==this.segments.length}last(){return this.segments[this.segments.length-1]}copy(){return N.from(this)}fixStartDepths(){this.any()&&(this.segments[0].startDepth=0);for(let t=0;t<this.segments.length-1;t++){const s=this.segments[t+1];s.startDepth=this.segments[t].endDepth,this.updateMaxDepth(s)}}deepestPart(){for(let t=this.segments.length-1;t>=0;t--)if(this.segments[t].endDepth===this.maxDepth)return this.items.slice(0,t+1);return[]}updateMaxDepth(t){t.endDepth>this._maxDepth&&(this._maxDepth=t.endDepth)}}class dt{constructor(t,e,s){this.depthConverter=t,this.options=e,this.tissues=s,this.lowestCeiling=0,this.lowestCeiling=this.depthConverter.surfacePressure+1}ceiling(){let t=this.tolerated();return t<this.depthConverter.surfacePressure&&(t=this.depthConverter.surfacePressure),this.depthConverter.fromBar(t)}toleratedTissues(t,e,s,r){const n=this.tissues.compartments;let i=0;for(let c=0;c<n.length;c++){const d=n[c];let D=i;(t/d.b+d.a-t)*s+t<(e/d.b+d.a-e)*r+e&&(D=(-d.a*d.b*(s*e-r*t)-(1-d.b)*(s-r)*e*t+d.b*(e-t)*d.pTotal)/(-d.a*d.b*(s-r)+(1-d.b)*(r*e-s*t)+d.b*(e-t))),D>=i&&(i=D)}return i}tolerated(){const t=this.options.gfLow,e=this.options.gfHigh,s=this.depthConverter.surfacePressure,r=this.tissues.ceiling(t);return r>this.lowestCeiling&&(this.lowestCeiling=r),this.toleratedTissues(s,this.lowestCeiling,e,t)}}let nt=(()=>{class o{constructor(e){this.options=e,this.averageDepth=0}markAverageDepth(e){const s=e.deepestPart();this.averageDepth=N.averageDepth(s)}ascent(e){return e>o.sixMeters?e>this.averageDepth/2?this.options.ascentSpeed50perc:this.options.ascentSpeed50percTo6m:this.options.ascentSpeed6m}}return o.sixMeters=6,o})(),it=(()=>{class o{constructor(){}search(e){if(e.maxValue<e.initialValue)throw Error("Max value cant be smaller than initial value");if(e.estimationStep>e.maxValue-e.initialValue)throw Error("Step cant be larger than range");const s=this.findInitialLimit(e);return this.searchInsideInterval(e,s)}searchInsideInterval(e,s){for(;s.right-s.left>o.minimalStep;){let r=s.left+(s.right-s.left)/2;r=Math.round(r),e.doWork(r),e.meetsCondition()?s.left=r:s.right=r}return s.left}findInitialLimit(e){let s=e.initialValue;for(e.doWork(s);e.meetsCondition()&&s<=e.maxValue;)s+=e.estimationStep,e.doWork(s);let r=s-e.estimationStep;return r=r<e.initialValue?e.initialValue:r,{left:r,right:s>e.maxValue?e.maxValue:s}}}return o.minimalStep=1,o})();class at{constructor(t,e,s,r){this.gases=t,this.segments=e,this.options=s,this.depthConverter=r,this.ceilings=[],this.runTime=0,this.tissues=z.createFromSurfacePressure(r.surfacePressure),this.gradients=new dt(r,s,this.tissues);const n=e.last();this.currentGas=n.gas,this.bestGasOptions={currentDepth:this.currentDepth,maxDecoPpO2:this.options.maxDecoPpO2,oxygenNarcotic:this.options.oxygenNarcotic,maxEnd:this.options.maxEND,currentGas:this.currentGas},this.speeds=new nt(this.options),this.levels=new R(r,s),this.gasSource=new ut(t,s)}get ascentSpeed(){return this.speeds.ascent(this.currentDepth)}get currentDepth(){return this.segments.currentDepth}get ambientPressure(){return this.depthConverter.toBar(this.currentDepth)}get addSafetyStop(){return this.levels.addSafetyStop(this.currentDepth,this.segments.maxDepth)}get decoStopDuration(){return this.options.roundStopsToMinutes?w.oneMinute:w.oneSecond}get isAtSurface(){return 0===this.segments.last().endDepth}markAverageDepth(){this.speeds.markAverageDepth(this.segments)}addCeiling(){const t=this.ceiling(),e=new ct(this.runTime,t);this.ceilings.push(e)}ceiling(){return this.gradients.ceiling()}bestDecoGas(){return this.bestGasOptions.currentDepth=this.currentDepth,this.bestGasOptions.currentGas=this.currentGas,this.gasSource.bestGas(this.bestGasOptions)}createMemento(){return{runTime:this.runTime,tissues:z.copy(this.tissues.compartments),ceilings:this.ceilings.length,segments:this.segments.length,lowestCeiling:this.gradients.lowestCeiling}}restore(t){this.tissues.compartments=z.copy(t.tissues),this.gradients.lowestCeiling=t.lowestCeiling,this.runTime=t.runTime,this.ceilings=this.ceilings.slice(0,t.ceilings),this.segments.cutDown(this.segments.length-t.segments)}nextStop(t){return this.levels.nextStop(t)}shouldSwitchTo(t){return t&&!this.currentGas.compositionEquals(t)}addGasSwitchSegment(){return this.addStopSegment(this.options.gasSwitchDuration*w.oneMinute)}addDecoStopSegment(){return this.addStopSegment(0)}addSafetyStopSegment(){return this.addStopSegment(w.safetyStopDuration)}addAscentSegment(t,e){return this.segments.add(this.currentDepth,t,this.currentGas,e)}addStopSegment(t){return this.segments.add(this.currentDepth,this.currentDepth,this.currentGas,t)}}class j{noDecoLimit(t,e,s){const r=new W;r.add(e);const n=new N,i=this.duration(t,s.descentSpeed);return n.add(0,t,e,i),this.noDecoLimitMultiLevel(n,r,s)}noDecoLimitMultiLevel(t,e,s){const r=new M(s).create(),n=new at(e,t,s,r);return this.swimNoDecoLimit(t,e,n,s)}calculateDecompression(t,e,s){const r=new M(t).create(),n=s.copy(),i=this.validate(n,e,t,r);if(i.length>0){const y=n.mergeFlat(s.length);return V.fromErrors(y,i)}const c=new at(e,n,t,r);this.swimPlan(c),c.markAverageDepth();let d=c.nextStop(c.currentDepth);for(;d>=0&&!c.isAtSurface;)this.tryGasSwitch(c),this.stayAtDecoStop(c,d),this.stayAtSafetyStop(c),this.ascentToNextStop(c,d),d=c.nextStop(d);const D=c.segments.mergeFlat(s.length);return V.fromProfile(D,c.ceilings)}tryGasSwitch(t){const e=t.bestDecoGas();if(t.shouldSwitchTo(e)){t.currentGas=e;const s=t.addGasSwitchSegment();this.swim(t,s)}}stayAtDecoStop(t,e){if(this.needsDecoStop(t,e)){const s=t.createMemento(),r={estimationStep:20*w.oneMinute,initialValue:0,maxValue:w.oneDay,doWork:d=>this.swimDecoStop(t,s,d),meetsCondition:()=>this.needsDecoStop(t,e)},i=(new it).search(r)+w.oneSecond,c=f.ceilDistance(i,t.decoStopDuration);this.swimDecoStop(t,s,c)}}swimDecoStop(t,e,s){t.restore(e);const r=t.addDecoStopSegment();r.duration=s,this.swim(t,r)}needsDecoStop(t,e){if(e>=t.ceiling())return!1;const s=t.createMemento();this.ascentToNextStop(t,e);const r=e<t.ceiling();return t.restore(s),r}stayAtSafetyStop(t){if(t.addSafetyStop){const e=t.addSafetyStopSegment();this.swim(t,e)}}ascentToNextStop(t,e){const r=this.duration(t.currentDepth-e,t.ascentSpeed),n=t.addAscentSegment(e,r);this.swim(t,n)}validate(t,e,s,r){const n=U.validate(t,e);if(n.length>0)return n;const i=ht.validate(e,s,r.surfacePressure);return i.length>0?i:[]}duration(t,e){return t/w.toMinutes(e)}swimPlan(t){t.addCeiling(),t.segments.withAll(e=>{this.swim(t,e)})}swim(t,e){let s=e.startDepth;const r=w.oneSecond;for(let n=0;n<e.duration;n+=r){const i=k.depthAt(s,e.speed,r),c=new k(s,i,e.gas,r);this.swimPart(t,c),s=c.endDepth}}swimPart(t,e){const s=this.toLoadSegment(t.depthConverter,e);t.tissues.load(s,e.gas),t.runTime+=e.duration,t.addCeiling()}swimNoDecoLimit(t,e,s,r){if(this.validate(t,e,r,s.depthConverter).length>0)return 0;this.swimPlan(s);const i=this.currentNdl(s.ceilings);return i!==Number.POSITIVE_INFINITY?i:this.predictNoDecoLimit(t,s)}predictNoDecoLimit(t,e){const s=t.last(),r=s.endDepth,n=new k(r,r,s.gas,w.oneMinute),i=this.toLoadSegment(e.depthConverter,n);let c=1;for(;e.ceiling()<=0&&c>0;)c=e.tissues.load(i,s.gas),e.runTime+=w.oneMinute;return 0===c||0===r?Number.POSITIVE_INFINITY:this.floorNdl(e.runTime)}floorNdl(t){let e=w.toMinutes(t);return e=f.floor(e),e-1}currentNdl(t){for(let e=0;e<t.length;e+=w.oneMinute){const s=t[e];if(s.notAtSurface)return this.floorNdl(s.time)}return Number.POSITIVE_INFINITY}toLoadSegment(t,e){const s=t.toBar(e.speed)-t.surfacePressure;return{startPressure:t.toBar(e.startDepth),duration:e.duration,speed:s}}}class X{static haveReserve(t){for(let e=0;e<t.length;e++)if(!t[e].hasReserve)return!1;return!0}static resetConsumption(t){t.forEach(e=>{e.consumed=0,e.reserve=0})}static removeTank(t,e){const s=t.filter(r=>r!==e);return X.renumberIds(s),s}static renumberIds(t){for(let e=0;e<t.length;e++)t[e].id=e+1}}class J{constructor(t,e,s){this.size=t,this.startPressure=e,this.id=0,this.consumed=0,this.reserve=0,this._gas=l.air.copy(),this.o2=s}get gas(){return this._gas}get o2(){return _.getO2(this.gas.fO2,this.gas.fHe)}get he(){return f.roundTwoDecimals(100*this.gas.fHe)}get volume(){return this.size*this.startPressure}get name(){return this._gas.name}get endPressure(){const t=this.startPressure-this.consumed;return t>0?t:0}get percentsRemaining(){return this.endPressure/this.startPressure*100}get percentsReserve(){const t=this.reserve/this.startPressure*100;return t>100?100:t}get hasReserve(){return this.endPressure>=this.reserve}set o2(t){this._gas.fO2=_.setO2(t,this.gas.fHe)}set he(t){this.gas.fHe=t/100}static createDefault(){return new J(15,200,100*l.o2InAir)}assignStandardGas(t){const e=l.byName(t);e&&(this._gas.fO2=e.fO2,this._gas.fHe=e.fHe)}loadFrom(t){this.size=t.size,this.startPressure=t.startPressure,this.consumed=t.consumed,this.reserve=t.reserve,this.gas.fO2=t._gas.fO2,this.gas.fHe=t._gas.fHe}}class _{static getO2(t,e){const s=100*t;return this.isInAirRange(s,e)?_.pinnedO2:f.roundTwoDecimals(s)}static setO2(t,e){return this.isInAirRange(t,e)?l.o2InAir:t/100}static isInAirRange(t,e){return _.o2InAirPercent<=t&&t<=_.pinnedO2&&0===e}}_.pinnedO2=21,_.o2InAirPercent=100*l.o2InAir;class q{constructor(t,e,s,r){this.duration=t,this.startTime=0,this.endTime=0,this.averageDepth=0,this._startDepth=0,this._endDepth=0,this.endTime=f.roundTwoDecimals(t),this._endDepth=e,this._startDepth=s,this.averageDepth=r}get startDepth(){return this._startDepth}get endDepth(){return this._endDepth}static fromSegment(t){return new q(t.duration,t.endDepth,t.startDepth,t.averageDepth)}}let pt=(()=>{class o{constructor(e){this.depthConverter=e}static calculateDecompression(e,s,r){const n=W.fromTanks(s),i=new j,c=e.copy();return i.calculateDecompression(r,n,c)}consumeFromTanks(e,s,r,n){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");const i=this.emergencyAscent(e,s,r);this.consumeFromTanks2(e,i,s,r,n)}consumeFromTanks2(e,s,r,n,i){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");X.resetConsumption(n);const c=this.consumeByTanks(e,i.rmv);this.consumeByGases(e,n,i.rmv,c),this.updateReserve(s,n,i.stressRmv)}emergencyAscent(e,s,r){const i=N.fromCollection(e).deepestPart(),c=N.fromCollection(i),d=W.fromTanks(r),H=(new j).calculateDecompression(s,d,c).segments,B=H.slice(i.length,H.length);return this.addSolvingSegment(B,s.problemSolvingDuration),B}calculateMaxBottomTime(e,s,r,n){const i=this.createTestProfile(e),c=i.last(),d={estimationStep:40*w.oneMinute,initialValue:0,maxValue:w.oneDay,doWork:B=>{c.duration=B,this.consumeFromProfile(i,s,r,n)},meetsCondition:()=>X.haveReserve(s)},y=(new it).search(d);if(0===y)return 0;const H=w.toMinutes(e.duration+y);return f.floor(H)}consumeFromProfile(e,s,r,n){const i=o.calculateDecompression(e,s,n);this.consumeFromTanks(i.segments,n,s,r)}createTestProfile(e){const s=e.copy(),r=e.last();return s.addFlat(r.endDepth,r.gas,0),s}updateReserve(e,s,r){const n=this.toBeConsumed(e,r,i=>!0);for(let i=0;i<=s.length-1;i++){const c=s[i],d=c.gas.contentCode();let D=n.get(d)||0;D=this.addReserveToTank(c,D),n.set(d,D)}s[0].reserve<o.minimumRockBottom&&(s[0].reserve=o.minimumRockBottom)}addReserveToTank(e,s){const r=f.ceil(s/e.size),n=r+e.reserve>e.startPressure?e.startPressure-e.reserve:r;return e.reserve+=n,this.extractRemaining(s,n,e.size)}addSolvingSegment(e,s){if(0===e.length)return;const n=e[0].startDepth,i=new k(n,n,e[0].gas,s*w.oneMinute);e.unshift(i)}consumeByGases(e,s,r,n){const i=this.toBeConsumedYet(e,r,n,c=>!c.tank);for(let c=s.length-1;c>=0;c--){const d=s[c],D=d.gas.contentCode();let y=i.get(D)||0;y=this.consumeFromTank(d,y),i.set(D,y)}}consumeByTanks(e,s){const r=new Map,n=w.toMinutes(s);return e.forEach(i=>{if(i.tank){const c=i.tank,d=i.gas.contentCode(),D=q.fromSegment(i),y=this.consumedBySegment(D,n),H=this.consumeFromTank(c,y);let B=r.get(d)||0;B+=H,r.set(d,B)}}),r}consumeFromTank(e,s){const r=f.ceil(s/e.size),n=r>e.endPressure?e.endPressure:r;return e.consumed+=n,this.extractRemaining(s,n,e.size)}extractRemaining(e,s,r){return(e-=s*r)<0?0:e}toBeConsumed(e,s,r){return this.toBeConsumedYet(e,s,new Map,r)}toBeConsumedYet(e,s,r,n){const i=w.toMinutes(s);for(let c=0;c<e.length;c++){const d=e[c];if(n(d)){const y=d.gas.contentCode(),H=q.fromSegment(d),B=this.consumedBySegment(H,i);let Z=r.get(y)||0;Z+=B,r.set(y,Z)}}return r}consumedBySegment(e,s){const r=this.depthConverter.toBar(e.averageDepth);return e.duration*r*s}}return o.minimumRockBottom=30,o})();class lt{constructor(t){this.depthConverter=t,this.minimumPpO2=.5}calculateForProfile(t){let e=0;return t.forEach(s=>{const n=this.calculate(s.gas.fO2,s.startDepth,s.endDepth,s.duration);e+=n}),e}calculate(t,e,s,r){const c=t*this.depthConverter.toBar((e+s)/2);if(c<=this.minimumPpO2)return 0;const d=this.exponentByPpO2(c);return r*Math.exp(d)*100}exponentByPpO2(t){return t<=1.5?1.93873*t-11.7853:9.80829*t-23.6349}}let K=(()=>{class o{}return o.imperialTankSize=124.1,o.imperialTankWorkPressure=3442,o.imperialStageSize=80.1,o.imperialStageWorkPressure=3e3,o.mertricTankSize=15,o.metricStageSize=11.1,o})();class mt{get available(){return[this.primary,this.stage,{name:"2xLP85",size:165,workingPressure:2640},{name:"S40",size:41.3,workingPressure:3e3},{name:"LP85",size:82.5,workingPressure:2640},{name:"HP80",size:84.4,workingPressure:3442},{name:"HP100",size:106.7,workingPressure:3442}]}get primary(){return{name:"HP117",size:K.imperialTankSize,workingPressure:K.imperialTankWorkPressure}}get stage(){return{name:"S80",size:K.imperialStageSize,workingPressure:K.imperialStageWorkPressure}}}class x{get tanks(){return new mt}get lastSpeedLevel(){return 20}get autoStopLevel(){return 33}get stopsDistance(){return x.depthDistance}get recreationalOptions(){return{ascentSpeed50perc:x.recreSpeed,ascentSpeed50percTo6m:x.recreSpeed,ascentSpeed6m:x.recreSpeed,descentSpeed:x.descentSpeed,lastStopDepth:x.lastStopDepth,maxEND:x.maxEnd}}get recommendedOptions(){return{ascentSpeed50perc:x.recreSpeed,ascentSpeed50percTo6m:2*x.depthDistance,ascentSpeed6m:x.depthDistance,descentSpeed:x.descentSpeed,lastStopDepth:x.depthDistance,maxEND:x.maxEnd}}}x.lastStopDepth=15,x.depthDistance=10,x.descentSpeed=6*x.depthDistance,x.recreSpeed=3*x.depthDistance,x.maxEnd=10*x.depthDistance;let ft=(()=>{class o{constructor(e=o.defaultSac,s=h.maxPpO2){this.rmv=e,this.maxPpO2=s,this.maxDecoPpO2=h.maxDecoPpO2}get stressRmv(){return 3*this.rmv}static gasSac(e,s){return e/s}gasSac(e){return o.gasSac(this.rmv,e.size)}loadFrom(e){this.rmv=e.rmv,this.maxPpO2=e.maxPpO2,this.maxDecoPpO2=e.maxDecoPpO2}}return o.defaultSac=20,o})();class Y{constructor(t,e,s){this.gas=t,this.depth=e,this.density=s}static createDefault(){return new Y(l.air,0,0)}applyHigher(t,e,s){s>this.density&&(this.gas=t,this.density=s,this.depth=e)}}let St=(()=>{class o{constructor(){this.helium=.179,this.nitrogen=1.251,this.oxygen=1.428}forGas(e){return this.forContent(e.fO2,e.fHe)}forContent(e,s){return this.nitrogen*(1-e-s)+this.oxygen*e+this.helium*s}}return o.recommendedMaximum=5.7,o})();class ot{constructor(t){this.depthConverter=t,this.density=new St}forProfile(t){const e=Y.createDefault();return t.forEach(s=>{const r=s.gas,n=this.density.forGas(r);this.applyHigher(e,r,s.startDepth,n),this.applyHigher(e,r,s.endDepth,n)}),e}atDepth(t,e){const s=this.density.forGas(t);return this.fromAtaDensity(s,e)}applyHigher(t,e,s,r){const n=this.fromAtaDensity(r,s);t.applyHigher(e,s,n)}fromAtaDensity(t,e){return t*this.depthConverter.toBar(e)}}let Dt=(()=>{class o{constructor(e){this.depthConverter=e,this.minPressure=.5}calculateForProfile(e){let s=0;return e.forEach(r=>{const i=this.calculate(r.duration,r.gas.fO2,r.startDepth,r.endDepth);s+=i}),s}calculate(e,s,r,n){let i=w.toMinutes(e),D=this.depthConverter.toBar(r)*s,y=this.depthConverter.toBar(n)*s;if(D<=this.minPressure&&y<=this.minPressure)return 0;D<=this.minPressure?(i=i*(y-this.minPressure)/(y-D),D=.501):y<=this.minPressure&&(i=i*(D-this.minPressure)/(D-y),y=.501);const H=D+y-1;return Math.pow(H,5/6)*(1-5*Math.pow(y-D,2)/216/Math.pow(H,2))*i}}return o.dailyLimit=300,o})();class wt{constructor(t,e,s){this.startDepth=t,this.endDepth=e,this.duration=s}get minDepth(){return Math.min(this.startDepth,this.endDepth)}get maxDepth(){return Math.max(this.startDepth,this.endDepth)}get isDescent(){return this.startDepth<this.endDepth}get isFlat(){return this.startDepth===this.endDepth}get isAscent(){return this.startDepth>this.endDepth}timeAt(t){const e=k.speed(this.startDepth,this.endDepth,this.duration),s=k.timeAt(this.startDepth,e,t);return f.round(s)}}class vt{constructor(t){this.simpleDepths=A.simple(),this.events=new st,this.elapsed=0,this.index=0,this.fixedMnd=!0,this.profile=t.profile,this.options=t.profileOptions,this.startAscentIndex=t.startAscentIndex,this.maxDensity=t.maxDensity,this.exactDepths=new M(this.options).create(),this.levels=new R(this.exactDepths,this.options),this.densityAtDepth=new ot(this.exactDepths),this.speeds=new nt(this.options);const e=N.fromCollection(this.profile);this.speeds.markAverageDepth(e),this.maxDepth=e.maxDepth,this._mndBars=this.simpleDepths.toBar(this.options.maxEND)}get previous(){return this.index>0?this.profile[this.index-1]:null}get isBeforeDecoAscent(){return this.index<this.startAscentIndex}get maxPpo(){return this.isBeforeDecoAscent?this.options.maxPpO2:this.options.maxDecoPpO2}get current(){return this.profile[this.index]}get switchingGas(){return!!this.previous&&!this.current.gas.compositionEquals(this.previous.gas)}get switchingTank(){return!!this.previous&&!!this.previous.tank&&!!this.current.tank&&this.previous.tank!==this.current.tank}get maxMnd(){return this._mndBars}get currentEndTime(){return this.elapsed+this.current.duration}get atSafetyStop(){return this.index===this.profile.length-2&&this.levels.addSafetyStop(this.current.startDepth,this.maxDepth)}gasEnd(t){return this.current.gas.end(t,this.options.oxygenNarcotic)}addElapsed(){this.elapsed=this.currentEndTime}}class tt{static fromProfile(t){const e=new vt(t),s=new Pt(e.events,e.current);for(e.index=0;e.index<t.profile.length;e.index++){const r=this.toPressureSegment(e.current,e.simpleDepths);this.addHighPpO2(e,r),this.addLowPpO2(e,r),this.addGasSwitch(e),this.addUserTankSwitch(e),this.addHighDescentSpeed(e),this.addHighAscentSpeed(e),this.addSwitchHighN2(e),this.addMndExceeded(e,r),this.addDensityExceeded(e),this.addSafetyStop(e),s.assignSegment(e.current),tt.addBrokenCeiling(s,t.ceilings),e.addElapsed()}return e.events}static addHighAscentSpeed(t){const e=t.current;let s=w.toSeconds(e.speed);if(s=f.roundTwoDecimals(s),-s>t.speeds.ascent(e.startDepth)){const r=E.createHighAscentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addHighDescentSpeed(t){const e=t.current;if(w.toSeconds(e.speed)>t.options.descentSpeed){const r=E.createHighDescentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addGasSwitch(t){if(t.switchingGas){const e=t.current,s=E.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static addUserTankSwitch(t){if(t.switchingTank){const e=t.current,s=E.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static toPressureSegment(t,e){const s=e.toBar(t.startDepth),r=e.toBar(t.endDepth);return new wt(s,r,t.duration)}static addHighPpO2(t,e){if(e.isDescent||t.isBeforeDecoAscent&&t.switchingGas){const s=t.current.gas.mod(t.maxPpo);if(e.maxDepth>s){let r=e.startDepth,n=t.elapsed;e.startDepth<s&&(r=s,n+=e.timeAt(r));const i=t.simpleDepths.fromBar(r),c=E.createHighPpO2(n,i);t.events.add(c)}}}static addLowPpO2(t,e){const s=t.current,r=s.gas.ceiling(t.simpleDepths.surfacePressure);if(e.minDepth<r&&t.switchingGas||e.startDepth>r&&r>e.endDepth&&e.isAscent||0===s.startDepth&&e.startDepth<r&&e.isDescent){let i=e.startDepth,c=t.elapsed;e.startDepth>r&&(i=r,c+=e.timeAt(i));const d=t.simpleDepths.fromBar(i),D=E.createLowPpO2(c,d);t.events.add(D)}}static addBrokenCeiling(t,e){for(;t.lastCeilingIndex<t.currentSegmentEndTime&&t.lastCeilingIndex<e.length-1;){const s=e[t.lastCeilingIndex];t.lastCeilingIndex++,this.addNdlEnd(t,s);const r=t.belowCeiling(s);if(!r&&t.fixedBrokenCeiling){const n=E.createBrokenCeiling(s.time,s.depth);t.events.add(n),t.fixedBrokenCeiling=!1;break}if(r&&!t.fixedBrokenCeiling&&(t.fixedBrokenCeiling=!0),s.time>t.currentSegmentEndTime)break}}static addNdlEnd(t,e){if(!t.ndlCeilingMarked&&e.depth>0){t.ndlCeilingMarked=!0;const r=t.current.depthAt(e.time-t.currentSegmentStartTime),n=E.createNoDecoEnd(e.time,r);t.events.add(n)}}static addSwitchHighN2(t){const e=t.current,s=t.previous;if(t.switchingGas&&s&&s.gas.fHe>0&&5*(e.gas.fN2-s.gas.fN2)>-(e.gas.fHe-s.gas.fHe)){const i=E.createSwitchToHigherN2(t.elapsed,e.startDepth,e.gas);t.events.add(i)}}static addMndExceeded(t,e){const s=t.current,r=t.gasEnd(e.startDepth),n=t.gasEnd(e.endDepth);if(t.maxMnd<r&&t.fixedMnd||t.maxMnd<n&&t.fixedMnd){const d=F.xValueAtAbsolute({start:t.elapsed,end:t.elapsed+s.duration},{start:r,end:n},t.maxMnd),D=s.depthAt(d);this.addMndEvent(t,d,D)}t.fixedMnd=n<=t.maxMnd}static addMndEvent(t,e,s){const n=E.createMaxEndExceeded(e,s,t.current.gas);t.events.add(n),t.fixedMnd=!0}static addDensityExceeded(t){const e=t.current,s=e.gas,n=e.endDepth,i=e.endDepth>e.startDepth,c=t.switchingGas,d=t.densityAtDepth.atDepth(s,e.startDepth),D=t.densityAtDepth.atDepth(s,n);if(c&&d>t.maxDensity||i&&D>t.maxDensity){const B=F.xValueAtAbsolute({start:t.elapsed,end:t.elapsed+e.duration},{start:d,end:D},t.maxDensity),Z=e.depthAt(B),yt=E.createHighDensity(B,Z,e.gas);t.events.add(yt)}}static addSafetyStop(t){const e=t.current;if(t.atSafetyStop&&e.duration>=w.safetyStopDuration){const r=E.createSafetyStopStart(t.elapsed+e.duration-w.safetyStopDuration,e.endDepth);t.events.add(r)}}}class Pt{constructor(t,e){this.events=t,this.lastCeilingIndex=0,this.currentSegmentStartTime=0,this.currentSegmentEndTime=0,this.fixedBrokenCeiling=!0,this.ndlCeilingMarked=!1,this._current=e}get current(){return this._current}assignSegment(t){this.currentSegmentStartTime=this.currentSegmentEndTime,this.currentSegmentEndTime=this.currentSegmentStartTime+t.duration,this._current=t}belowCeiling(t){return this._current.depthAt(t.time-this.currentSegmentStartTime)>=t.depth}}class b{get name(){return"Imperial"}get lengthShortcut(){return"ft"}get pressureShortcut(){return"psi"}get volumeShortcut(){return"cuft"}get altitudeShortcut(){return"ft.a.s.l"}get densityShortcut(){return"lb/cuft"}toMeters(t){return t*b.footRate}fromMeters(t){return t/b.footRate}toBar(t){return t/b.psiRate}fromBar(t){return t*b.psiRate}toLiter(t){return t*b.cftRate}fromLiter(t){return t/b.cftRate}fromTankLiters(t,e){return this.fromLiter(t)*e}toTankLiters(t,e){return this.toLiter(t)/e}fromGramPerLiter(t){return t*b.lbPerCuftRate}}b.psiRate=14.503773773022,b.cftRate=28.316846592,b.footRate=.3048,b.poundRate=.00220462262,b.lbPerCuftRate=b.poundRate*b.cftRate}}]);