"use strict";(self.webpackChunkplanner=self.webpackChunkplanner||[]).push([[172],{991:(ht,$,V)=>{V.d($,{e:()=>g});var w=V(103);class g{static toTanks(i){const h=[];return i.forEach(d=>{const l=new w.VQ(d.size,d.startPressure,0);l.id=d.id,l.gas.fO2=d.gas.fO2,l.gas.fHe=d.gas.fHe,h.push(l)}),w.bz.renumberIds(h),h}static loadWorkingPressure(i,h){for(let d=0;d<h.length;d++)h[d].workingPressureBars=i[d].workPressure}static fromTanks(i){const h=[];return i.forEach(d=>{const l=d.tank,f={id:l.id,size:l.size,workPressure:d.workingPressureBars,startPressure:l.startPressure,gas:g.fromGas(l.gas)};h.push(f)}),h}static toConsumed(i){const h=[];for(let d=0;d<i.length;d++){const l=i[d];h.push({id:l.id,consumed:l.consumed,reserve:l.reserve})}return h}static toSegments(i,h){const d=[];for(let l=0;l<i.length;l++){const f=i[l],v=g.toGas(f.gas),G=new w.XX(f.startDepth,f.endDepth,v,f.duration);f.tankId>0&&f.tankId<=h.length&&(G.tank=h[f.tankId-1]),d.push(G)}return d}static fromSegments(i){const h=[];return i.forEach(d=>{const f={startDepth:d.startDepth,endDepth:d.endDepth,duration:d.duration,tankId:d.tank?d.tank.id:0,gas:g.fromGas(d.gas)};h.push(f)}),h}static toProfile(i,h){const d=g.toSegments(i.segments,h);return w.Z1.fromProfile(d,i.ceilings)}static fromProfile(i){return{segments:g.fromSegments(i.segments),ceilings:i.ceilings,errors:g.fromEvents(i.errors)}}static toEvents(i){const h=new w.zW;return i.forEach(d=>{const l=w.ju.create(d.type,d.timeStamp,d.depth);l.message=d.message,d.gas&&(l.gas=g.toGas(d.gas)),h.add(l)}),h}static fromEvents(i){const h=[];return i.forEach(d=>{const l={timeStamp:d.timeStamp,depth:d.depth,type:d.type,message:d.message};d.gas&&(l.gas=g.fromGas(d.gas)),h.push(l)}),h}static fromDiver(i){return{rmv:i.rmv}}static toDiver(i){return new w.rr(i.rmv)}static fromOptions(i){return{gfLow:i.gfLow,gfHigh:i.gfHigh,maxPpO2:i.maxPpO2,maxDecoPpO2:i.maxDecoPpO2,salinity:i.salinity,altitude:i.altitude,roundStopsToMinutes:i.roundStopsToMinutes,gasSwitchDuration:i.gasSwitchDuration,safetyStop:i.safetyStop,lastStopDepth:i.lastStopDepth,decoStopDistance:i.decoStopDistance,minimumAutoStopDepth:i.minimumAutoStopDepth,maxEND:i.maxEND,oxygenNarcotic:i.oxygenNarcotic,ascentSpeed6m:i.ascentSpeed6m,ascentSpeed50percTo6m:i.ascentSpeed50percTo6m,ascentSpeed50perc:i.ascentSpeed50perc,descentSpeed:i.descentSpeed,problemSolvingDuration:i.problemSolvingDuration}}static toOptions(i){const h=new w.Ei(i.gfLow,i.gfHigh,i.maxPpO2,i.maxDecoPpO2,i.salinity);return h.altitude=i.altitude,h.roundStopsToMinutes=i.roundStopsToMinutes,h.gasSwitchDuration=i.gasSwitchDuration,h.safetyStop=i.safetyStop,h.lastStopDepth=i.lastStopDepth,h.decoStopDistance=i.decoStopDistance,h.minimumAutoStopDepth=i.minimumAutoStopDepth,h.maxEND=i.maxEND,h.oxygenNarcotic=i.oxygenNarcotic,h.ascentSpeed6m=i.ascentSpeed6m,h.ascentSpeed50percTo6m=i.ascentSpeed50percTo6m,h.ascentSpeed50perc=i.ascentSpeed50perc,h.descentSpeed=i.descentSpeed,h.problemSolvingDuration=i.problemSolvingDuration,h}static fromDensity(i){return{gas:g.fromGas(i.gas),depth:i.depth,density:i.density}}static toDensity(i){const h=g.toGas(i.gas);return new w.kf(h,i.depth,i.density)}static toGas(i){return new w.RP(i.fO2,i.fHe)}static fromGas(i){return{fO2:i.fO2,fHe:i.fHe}}}},172:(ht,$,V)=>{V.d($,{P:()=>y});var w=V(103),g=V(991);class y{static calculateDecompression(h){const d=g.e.toTanks(h.tanks),l=g.e.toSegments(h.plan,d),f=w.wC.fromCollection(l),v=w.Vw.fromTanks(d),G=new w.dD,p=g.e.toOptions(h.options),E=G.calculateDecompression(p,v,f),k=g.e.fromProfile(E),_=w.uv.fromProfile({maxDensity:h.eventOptions.maxDensity,startAscentIndex:f.startAscentIndex,profile:E.segments,ceilings:E.ceilings,profileOptions:p});return{profile:k,events:g.e.fromEvents(_.items)}}static diveInfo(h){const d=g.e.toTanks(h.tanks),l=w.Vw.fromTanks(d),f=g.e.toSegments(h.plan,d),v=w.wC.fromCollection(f),G=new w.dD,p=g.e.toOptions(h.options),E=G.noDecoLimitMultiLevel(v,l,p),k=new w.FQ(h.options).create(),W=new w.Uz(k).calculateForProfile(f),_=new w.rQ(k).calculateForProfile(f),C=new w.E1(k).forProfile(f);return{noDeco:E,otu:W,cns:_,density:g.e.fromDensity(C)}}static calculateConsumption(h){const d=new w.FQ(h.options).create(),l=new w.Cb(d),f=g.e.toTanks(h.tanks),v=g.e.toSegments(h.profile,f),G=g.e.toSegments(h.plan,f),p=w.wC.fromCollection(G),E=new w.rr(h.diver.rmv),k=g.e.toOptions(h.options),W=l.calculateMaxBottomTime(p,f,E,k),_=l.emergencyAscent(v,k,f);let C=w.wC.duration(_);return C=w.qp.toMinutes(C),l.consumeFromTanks2(v,_,k,f,E),{maxTime:W,timeToSurface:C,tanks:g.e.toConsumed(f)}}}},103:(ht,$,V)=>{var g,y,i,h,d,l,f;V.d($,{Cb:()=>Pt,E1:()=>gt,Ei:()=>ft,FQ:()=>j,RP:()=>T,Uz:()=>bt,VQ:()=>ot,Vw:()=>Y,XX:()=>B,Z1:()=>q,bz:()=>U,dD:()=>at,ju:()=>b,kf:()=>et,qp:()=>S,rQ:()=>yt,rr:()=>Tt,uv:()=>ct,wC:()=>L,zW:()=>ut});class v{constructor(t,e,s,r,n,o){this._n2HalfTime=t,this._n2A=e,this._n2B=s,this._heHalfTime=r,this._heA=n,this._heB=o}get n2HalfTime(){return this._n2HalfTime}get n2A(){return this._n2A}get n2B(){return this._n2B}get heHalfTime(){return this._heHalfTime}get heA(){return this._heA}get heB(){return this._heB}}class G{}G.buhlmannZHL16C=[new v(5,1.1696,.5578,1.88,1.6189,.477),new v(8,1,.6514,3.02,1.383,.5747),new v(12.5,.8618,.7222,4.72,1.1919,.6527),new v(18.5,.7562,.7826,6.99,1.0458,.7223),new v(27,.62,.8125,10.21,.922,.7582),new v(38.3,.5043,.8434,14.48,.8205,.7957),new v(54.3,.441,.8693,20.53,.7305,.8279),new v(77,.4,.891,29.11,.6502,.8553),new v(109,.375,.9092,41.2,.595,.8757),new v(146,.35,.9222,55.19,.5545,.8903),new v(187,.3295,.9319,70.69,.5333,.8997),new v(239,.3065,.9403,90.34,.5189,.9073),new v(305,.2835,.9477,115.29,.5181,.9122),new v(390,.261,.9544,147.42,.5176,.9171),new v(498,.248,.9602,188.24,.5172,.9217),new v(635,.2327,.9653,240.03,.5119,.9267)];class p{static fix(t){return Number(t.toFixed(10))}static roundTwoDecimals(t){return p.round(t,2)}static round(t,e=0){return p.adapt(Math.round,t,e)}static floorTwoDecimals(t){return p.floor(t,2)}static floor(t,e=0){return p.adapt(Math.floor,t,e)}static ceilTwoDecimals(t){return p.ceil(t,2)}static ceil(t,e=0){return p.adapt(Math.ceil,t,e)}static ceilDistance(t,e){return p.adaptDistance(Math.ceil,t,e)}static roundDistance(t,e){return p.adaptDistance(Math.round,t,e)}static floorDistance(t,e){return p.adaptDistance(Math.floor,t,e)}static adapt(t,e,s){const r=Math.pow(10,s);return t(e*r)/r}static adaptDistance(t,e,s){return t(e/s)*s}}var E=function(a){return a[a.fresh=1]="fresh",a[a.brackish=2]="brackish",a[a.salt=3]="salt",a}(E||{});let k=(()=>{var a;class t{}return(a=t).fresh=1e3,a.brackish=1020,a.salt=1030,t})(),W=(()=>{class t{}return t.standard=9.80665,t})(),_=(()=>{class t{static pascalToBar(s){return s/t.coefficient}static barToPascal(s){return s*t.coefficient}}return t.coefficient=1e5,t})();class C{static pressure(t){return C.standardPascals*Math.pow(C.temperature/(C.temperature+C.lapsRate*t),C.exponent)}static altitude(t){if(t>=C.standardPascals)return 0;const s=Math.pow(t/C.standardPascals,C.invertedExponent);return(C.temperature/s-C.temperature)/C.lapsRate}}(g=C).standard=1.01325,g.standardPascals=_.barToPascal(g.standard),g.gasConstant=8.31432,g.temperature=288.15,g.lapsRate=-.0065,g.molarMass=.0289644,g.exponent=W.standard*g.molarMass/(g.gasConstant*g.lapsRate),g.invertedExponent=1/g.exponent;class j{constructor(t){this.options=t}create(){switch(this.options.salinity){case E.salt:return F.forSaltWater(this.options.altitude);case E.brackish:return F.forBrackishWater(this.options.altitude);default:return F.forFreshWater(this.options.altitude)}}}class F{constructor(t,e){this.density=t,this._gravity=W.standard;const s=C.pressure(e);this._surfacePressure=_.pascalToBar(s)}get surfacePressure(){return this._surfacePressure}static forSaltWater(t=0){return new F(k.salt,t)}static forBrackishWater(t=0){return new F(k.brackish,t)}static forFreshWater(t=0){return new F(k.fresh,t)}static simple(){const t=new F(k.fresh,0);return t._surfacePressure=1,t._gravity=10,t}toBar(t){return _.pascalToBar(t*(this.density*this._gravity))+this._surfacePressure}fromBar(t){if(t<this._surfacePressure)throw new Error("Lower pressure than altitude isn`t convertible to depth.");const e=this.density*this._gravity;return _.barToPascal(t-this._surfacePressure)/e}}var J=function(a){return a[a.never=1]="never",a[a.auto=2]="auto",a[a.always=3]="always",a}(J||{});class m{static setMediumConservatism(t){t.gfLow=m.gfLow,t.gfHigh=m.gfHigh}static useGeneralRecommended(t){t.safetyStop=m.safetyStopRecre,t.roundStopsToMinutes=m.roundStopsToMinutes,t.gasSwitchDuration=m.gasSwitchDuration,t.oxygenNarcotic=m.oxygenNarcotic}}(y=m).altitude=0,y.saltWater=E.salt,y.roundStopsToMinutes=!1,y.gasSwitchDuration=2,y.problemSolvingDuration=1,y.lastStopDepth=3,y.lastStopDepthRecre=5,y.safetyStopRecre=J.auto,y.decoStopDistance=3,y.minimumAutoStopDepth=10,y.addSafetyStop=!0,y.maxEND=30,y.oxygenNarcotic=!0,y.ascentSpeed6m=3,y.ascentSpeed50percTo6m=6,y.ascentSpeed50perc=9,y.descentSpeed=18,y.gfLow=.4,y.gfHigh=.85,y.maxPpO2=1.4,y.maxDecoPpO2=1.6;class ft{constructor(t=m.gfLow,e=m.gfHigh,s=m.maxPpO2,r=m.maxDecoPpO2,n=m.saltWater){this.gfLow=t,this.gfHigh=e,this.maxPpO2=s,this.maxDecoPpO2=r,this.salinity=n,this.altitude=m.altitude,this.roundStopsToMinutes=m.roundStopsToMinutes,this.gasSwitchDuration=m.gasSwitchDuration,this.safetyStop=m.safetyStopRecre,this.lastStopDepth=m.lastStopDepth,this.decoStopDistance=m.decoStopDistance,this.minimumAutoStopDepth=m.minimumAutoStopDepth,this.maxEND=m.maxEND,this.oxygenNarcotic=!0,this.ascentSpeed6m=m.ascentSpeed6m,this.ascentSpeed50percTo6m=m.ascentSpeed50percTo6m,this.ascentSpeed50perc=m.ascentSpeed50perc,this.descentSpeed=m.descentSpeed,this.problemSolvingDuration=m.problemSolvingDuration,this.gfLow=t||m.gfLow,this.gfHigh=e||m.gfHigh,this.maxPpO2=s||m.maxPpO2,this.maxDecoPpO2=r||m.maxDecoPpO2,this.salinity=n||m.saltWater}loadFrom(t){this.gfLow=t.gfLow||this.gfLow,this.gfHigh=t.gfHigh||this.gfHigh,this.maxPpO2=t.maxPpO2||this.maxPpO2,this.maxDecoPpO2=t.maxDecoPpO2||this.maxDecoPpO2,this.oxygenNarcotic=!!t.oxygenNarcotic,this.salinity=t.salinity||this.salinity,this.altitude=t.altitude||0===t.altitude?t.altitude:this.altitude,this.roundStopsToMinutes=!!t.roundStopsToMinutes,this.gasSwitchDuration=t.gasSwitchDuration||this.gasSwitchDuration,this.problemSolvingDuration=t.problemSolvingDuration||this.problemSolvingDuration,this.lastStopDepth=t.lastStopDepth||this.lastStopDepth,this.decoStopDistance=t.decoStopDistance||this.decoStopDistance,this.minimumAutoStopDepth=t.minimumAutoStopDepth||this.minimumAutoStopDepth,this.safetyStop=t.safetyStop||this.safetyStop,this.maxEND=t.maxEND||this.maxEND,this.ascentSpeed6m=t.ascentSpeed6m||this.ascentSpeed6m,this.ascentSpeed50percTo6m=t.ascentSpeed50percTo6m||this.ascentSpeed50percTo6m,this.ascentSpeed50perc=t.ascentSpeed50perc||this.ascentSpeed50perc,this.descentSpeed=t.descentSpeed||this.descentSpeed}}class rt{constructor(t,e){this.depthConverter=t,this.options=e}toDecoStop(t){const e=this.depthConverter.fromBar(t);return p.roundDistance(e,this.options.decoStopDistance)}nextStop(t){if(t<=this.options.lastStopDepth)return 0;const e=p.floorDistance(t,this.options.decoStopDistance);if(e!==t)return e;const s=t-this.options.decoStopDistance;return s<=this.options.lastStopDepth?this.options.lastStopDepth:s}addSafetyStop(t,e){return(this.options.safetyStop===J.always||this.options.safetyStop===J.auto&&e>this.options.minimumAutoStopDepth)&&t===this.options.lastStopDepth}}var H=function(a){return a[a.noAction=0]="noAction",a[a.error=1]="error",a[a.gasSwitch=2]="gasSwitch",a[a.noDecoEnd=3]="noDecoEnd",a[a.lowPpO2=4]="lowPpO2",a[a.highPpO2=5]="highPpO2",a[a.highAscentSpeed=6]="highAscentSpeed",a[a.highDescentSpeed=7]="highDescentSpeed",a[a.brokenCeiling=8]="brokenCeiling",a[a.maxEndExceeded=9]="maxEndExceeded",a[a.switchToHigherN2=10]="switchToHigherN2",a[a.highGasDensity=11]="highGasDensity",a[a.safetyStop=12]="safetyStop",a}(H||{});class b{constructor(t,e,s,r,n){this.timeStamp=t,this.depth=e,this.type=s,this.message=r,this.gas=n}static create(t,e,s,r){return new b(e,s,t,"",r)}static createError(t){return new b(0,0,H.error,t)}}class O{static createError(t){return b.createError(t)}static createSafetyStopStart(t,e){return b.create(H.safetyStop,t,e)}static createNoDecoEnd(t,e){return b.create(H.noDecoEnd,t,e)}static createGasSwitch(t,e,s){return b.create(H.gasSwitch,t,e,s)}static createLowPpO2(t,e){return b.create(H.lowPpO2,t,e)}static createHighPpO2(t,e){return b.create(H.highPpO2,t,e)}static createHighAscentSpeed(t,e){return b.create(H.highAscentSpeed,t,e)}static createHighDescentSpeed(t,e){return b.create(H.highDescentSpeed,t,e)}static createBrokenCeiling(t,e){return b.create(H.brokenCeiling,t,e)}static createMaxEndExceeded(t,e,s){return b.create(H.maxEndExceeded,t,e,s)}static createSwitchToHigherN2(t,e,s){return b.create(H.switchToHigherN2,t,e,s)}static createHighDensity(t,e,s){return b.create(H.highGasDensity,t,e,s)}}class ut{constructor(){this.items=[]}add(t){this.items.push(t)}}class Dt{constructor(t,e){this.time=t,this.depth=e}get notAtSurface(){return this.depth>0}static isDecoDive(t){for(const e of t)if(e.notAtSurface)return!0;return!1}}class q{constructor(t,e,s){this.seg=t,this.ceil=e,this.err=s}get segments(){return this.seg}get ceilings(){return this.ceil}get errors(){return this.err}static fromErrors(t,e){return new q(t,[],e)}static fromProfile(t,e){return new q(t,e,[])}}class St{static validate(t){const e=[];if(!t.hasBottomGas){const s=O.createError("At least one bottom gas has to be defined.");return e.push(s),e}return e}}class wt{constructor(t,e){this.gases=t,this.depthConverter=F.simple(),this.depthLevels=new rt(this.depthConverter,e)}bestGas(t){const e=this.depthConverter.toBar(t.currentDepth),s=this.depthConverter.toBar(t.maxEnd);let r=t.currentGas;return this.gases.all.forEach(n=>{const o=n.mod(t.maxDecoPpO2),c=this.depthLevels.toDecoStop(o),u=n.end(e,t.oxygenNarcotic);t.currentDepth<=c&&u<=s&&(!r||r.fO2<n.fO2)&&(r=n)}),r}}class Y{constructor(){this.bottomGases=[]}get all(){return this.bottomGases.slice()}get hasBottomGas(){return this.bottomGases.length>=1}static fromTanks(t){const e=new Y;return t.forEach(s=>{e.add(s.gas)}),e}add(t){this.bottomGases.push(t)}isRegistered(t){return this.bottomGases.includes(t)}}class R{static partialPressure(t,e){return t*e}static mod(t,e){return t/e}static bestMix(t,e,s){const n=t/s.toBar(e);return n>1?1:n}static ead(t,e,s=A.o2InAir){const n=1-s;return R.end(e,1-t)/n}static end(t,e,s=0){return t*this.narcoticIndex(s,e)}static mnd(t,e,s=0){return t/this.narcoticIndex(s,e)}static ceiling(t,e){const n=.18/t*e;return n<e?e:n}static narcoticIndex(t,e=0){return e+t}}class T{constructor(t,e){if(this._fO2=t,this._fHe=e,this.contentExceeds100percent())throw new Error("O2 + He can't exceed 100 %")}get fN2(){return 1-this._fO2-this._fHe}get fO2(){return this._fO2}get fHe(){return this._fHe}get name(){return A.nameFor(this.fO2,this.fHe)}set fO2(t){this._fO2=t>1?1:t,this.contentExceeds100percent()&&(this._fHe=this.countRemaining(this._fO2))}set fHe(t){this._fHe=t>.99?.99:t,this.contentExceeds100percent()&&(this._fO2=this.countRemaining(this._fHe))}copy(){return new T(this._fO2,this._fHe)}mod(t){return R.mod(t,this._fO2)}end(t,e){return R.end(t,this.fN2,e?this._fO2:0)}mnd(t,e){return R.mnd(t,this.fN2,e?this._fO2:0)}ceiling(t){return R.ceiling(this._fO2,t)}compositionEquals(t){return!!t&&this._fO2===t._fO2&&this._fHe===t._fHe}contentCode(){return p.round(1e4*this._fO2*1e4)+p.round(1e4*this._fHe)}contentExceeds100percent(){return this._fO2+this._fHe>1}countRemaining(t){return p.round(1-t,5)}}class A{static nitroxNames(){return A.allNames().slice(0,6)}static allNames(){return Array.from(A.map.keys())}static nameFor(t,e=0){const r=p.round(100*t),n=p.round(100*e);return r<=0?"":n<=0?r>=100?A.oxygenName:21===r?A.airName:"EAN"+r.toString():`${r>=21?"Helitrox":"Trimix"} ${r.toString()}/${n.toString()}`}static byName(t){if(A.map.has(t))return A.map.get(t)??null;const e=A.namesRegEx.exec(t);if(e){if(e[1]){const s=Number(e[1])/100;if(s>0)return new T(s,0)}if(e[2]&&e[3]){const s=Number(e[2])/100,r=Number(e[3])/100;if(s>0&&r>0)return new T(s,r)}}return null}}(i=A).o2InAir=.209,i.nitroxInAir=1-i.o2InAir,i.oxygen=new T(1,0),i.ean50=new T(.5,0),i.ean38=new T(.38,0),i.ean36=new T(.36,0),i.ean32=new T(.32,0),i.trimix3525=new T(.35,.25),i.trimix2525=new T(.25,.25),i.air=new T(i.o2InAir,0),i.trimix2135=new T(.21,.35),i.trimix1845=new T(.18,.45),i.trimix1555=new T(.15,.55),i.trimix1260=new T(.12,.6),i.trimix1070=new T(.1,.7),i.airName="Air",i.oxygenName="Oxygen",i.namesRegEx=/[EAN](?<fO2>\d{2})|(?<fO2b>\d{2})\/(?<fHe>\d{2})/i,i.map=new Map([[i.airName,i.air],["EAN32",i.ean32],["EAN36",i.ean36],["EAN38",i.ean38],["EAN50",i.ean50],[i.oxygenName,i.oxygen],["Helitrox 35/25",i.trimix3525],["Helitrox 25/25",i.trimix2525],["Helitrox 21/35",i.trimix2135],["Trimix 18/45",i.trimix1845],["Trimix 15/55",i.trimix1555],["Trimix 12/60",i.trimix1260],["Trimix 10/70",i.trimix1070]]);class nt extends v{constructor(t,e){super(t.n2HalfTime,t.n2A,t.n2B,t.heHalfTime,t.heA,t.heB),this._pN2=0,this._pHe=0,this._pTotal=0,this._a=0,this._b=0,this._pN2=R.partialPressure(e,.79)-.0627,this._pHe=0,this._pTotal=this.pN2+this.pHe}get pN2(){return this._pN2}get pHe(){return this._pHe}get pTotal(){return this._pTotal}get a(){return this._a}get b(){return this._b}copy(){const t=new nt(this,1);return t._pN2=this._pN2,t._pHe=this._pHe,t._pTotal=this._pTotal,t._a=this._a,t._b=this._b,t}ceiling(t){return(this.pTotal-this.a*t)/(t/this.b+1-t)}load(t,e){this._pN2=this.loadGas(t,e.fN2,this.pN2,this.n2HalfTime),this._pHe=this.loadGas(t,e.fHe,this.pHe,this.heHalfTime);const s=this.pTotal;return this._pTotal=this.pN2+this.pHe,this._a=(this.n2A*this.pN2+this.heA*this.pHe)/this.pTotal,this._b=(this.n2B*this.pN2+this.heB*this.pHe)/this.pTotal,this.pTotal-s}loadGas(t,e,s,r){return this.schreinerEquation(s,t.startPressure*e,t.duration,r,t.speed*e)}schreinerEquation(t,e,s,r,n){const c=.01155245301/r;return e+n*(s-1/c)-(e-t-n/c)*Math.exp(-c*s)}}class Q{constructor(){this.compartments=[]}static createFromOther(t){const e=new Q;return e.compartments=Q.copy(t),e}static createFromSurfacePressure(t){const e=new Q;for(let s=0;s<G.buhlmannZHL16C.length;s++){const n=new nt(G.buhlmannZHL16C[s],t);e.compartments.push(n)}return e}static copy(t){const e=[];for(let s=0;s<t.length;s++){const r=t[s].copy();e.push(r)}return e}ceiling(t){let e=0;for(let s=0;s<this.compartments.length;s++){const r=this.compartments[s].ceiling(t);r>e&&(e=r)}return e}load(t,e){let s=0;for(let r=0;r<this.compartments.length;r++)s+=this.compartments[r].load(t,e);return s}}class S{static toSeconds(t){return t*S.oneMinute}static toMinutes(t){return t/S.oneMinute}static toDate(t){return new Date(1970,1,1,0,0,t,0)}static secondsFromDate(t){const e=new Date(t);let s=e.getSeconds();return s+=e.getMinutes()*S.oneMinute,s+=e.getHours()*Math.pow(S.oneMinute,2),s}}(h=S).oneSecond=1,h.oneMinute=60,h.oneDay=1440*h.oneMinute,h.safetyStopDuration=3*h.oneMinute;class K{static speed(t,e){return K.speedByXChange(e.start,e.end,t.end-t.start)}static speedByXChange(t,e,s){return(e-t)/s}static yValueAt(t,e,s){return t+e*s}static xValueAtAbsolute(t,e,s){const r=this.speed(t,e);return t.start+K.xValueAt(e.start,r,s)}static xValueAt(t,e,s){return 0===e?0:(s-t)/e}}class it{static validate(t,e){const s=[];if(!t.any()){const r=O.createError("There needs to be at least one segment at depth.");s.push(r)}return t.withAll(r=>{it.validateRegisteredGas(s,e,r)}),s}static validateRegisteredGas(t,e,s){if(!e.isRegistered(s.gas)){const n=O.createError(`Segment ${s.startDepth}-${s.endDepth} has gas not registered in gases.`);t.push(n)}}}class B{constructor(t,e,s,r){this.startDepth=t,this.endDepth=e,this._gas=s,this.duration=r}get gas(){return this._gas}get tank(){return this._tank}get speed(){return B.speed(this.startDepth,this.endDepth,this.duration)}get averageDepth(){return(this.startDepth+this.endDepth)/2}set tank(t){this._tank=t,t&&(this._gas=t.gas)}static from(t){const e=new B(t.startDepth,t.endDepth,t._gas,t.duration);return e.tank=t.tank,e}static speed(t,e,s){return K.speedByXChange(t,e,s)}static depthAt(t,e,s){return K.yValueAt(t,e,s)}static timeAt(t,e,s){return K.xValueAt(t,e,s)}contentEquals(t){return this.speed===t.speed&&this._gas===t._gas}depthAt(t){return B.depthAt(this.startDepth,this.speed,t)}mergeFrom(t){this.duration+=t.duration,this.endDepth=t.endDepth}}class L{constructor(){this.segments=[],this._maxDepth=0}get startAscentIndex(){return this.deepestPart().length}get startAscentTime(){const t=this.deepestPart();return L.duration(t)}get length(){return this.segments.length}get items(){return this.segments.slice()}get maxDepth(){return this._maxDepth}get currentDepth(){return this.any()?this.last().endDepth:0}get duration(){return L.duration(this.segments)}static from(t){return L.fromCollection(t.segments)}static fromCollection(t){const e=new L;return t.forEach(s=>{const r=B.from(s);e.segments.push(r),e.updateMaxDepth(r)}),e}static duration(t){let e=0;for(const s of t)e+=s.duration;return e}static averageDepth(t){if(t.length<=0)return 0;let e=0,s=0;return t.forEach(r=>{if(r.duration>0){const n=r.averageDepth*r.duration+s*e;s+=r.duration,e=n/s}}),e}add(t,e,s,r){const n=new B(t,e,s,r);return this.segments.push(n),this.updateMaxDepth(n),n}addFlat(t,e,s){return this.add(t,t,e,s)}addChangeTo(t,e,s){return this.add(this.currentDepth,t,e,s)}mergeFlat(t=0){if(t<0)return this.items;const e=[];for(let s=this.segments.length-1;s>t;s--){const r=this.segments[s-1],n=this.segments[s];r.contentEquals(n)&&(r.mergeFrom(n),e.push(n))}return this.segments=this.segments.filter(s=>!e.includes(s)),this.items}remove(t){this.segments=this.segments.filter(e=>e!==t),this.fixStartDepths()}cutDown(t){this.segments=this.segments.slice(0,this.segments.length-t),this.fixStartDepths()}withAll(t){for(let e=0;e<this.segments.length;e++)t(this.segments[e])}any(){return 0!==this.segments.length}last(){return this.segments[this.segments.length-1]}copy(){return L.from(this)}fixStartDepths(){this.any()&&(this.segments[0].startDepth=0);for(let t=0;t<this.segments.length-1;t++){const s=this.segments[t+1];s.startDepth=this.segments[t].endDepth,this.updateMaxDepth(s)}}deepestPart(){for(let t=this.segments.length-1;t>=0;t--)if(this.segments[t].endDepth===this.maxDepth)return this.items.slice(0,t+1);return[]}updateMaxDepth(t){t.endDepth>this._maxDepth&&(this._maxDepth=t.endDepth)}}class vt{constructor(t,e,s){this.depthConverter=t,this.options=e,this.tissues=s,this.lowestCeiling=0,this.lowestCeiling=this.depthConverter.surfacePressure+1}ceiling(){let t=this.tolerated();return t<this.depthConverter.surfacePressure&&(t=this.depthConverter.surfacePressure),this.depthConverter.fromBar(t)}toleratedTissues(t,e,s,r){const n=this.tissues.compartments;let o=0;for(let c=0;c<n.length;c++){const u=n[c];let D=o;(t/u.b+u.a-t)*s+t<(e/u.b+u.a-e)*r+e&&(D=(-u.a*u.b*(s*e-r*t)-(1-u.b)*(s-r)*e*t+u.b*(e-t)*u.pTotal)/(-u.a*u.b*(s-r)+(1-u.b)*(r*e-s*t)+u.b*(e-t))),D>=o&&(o=D)}return o}tolerated(){const t=this.options.gfLow,e=this.options.gfHigh,s=this.depthConverter.surfacePressure,r=this.tissues.ceiling(t);return r>this.lowestCeiling&&(this.lowestCeiling=r),this.toleratedTissues(s,this.lowestCeiling,e,t)}}let pt=(()=>{class t{constructor(s){this.options=s,this.averageDepth=0}markAverageDepth(s){const r=s.deepestPart();this.averageDepth=L.averageDepth(r)}ascent(s){return s>t.sixMeters?s>this.averageDepth/2?this.options.ascentSpeed50perc:this.options.ascentSpeed50percTo6m:this.options.ascentSpeed6m}}return t.sixMeters=6,t})(),lt=(()=>{class t{constructor(){}search(s){if(s.maxValue<s.initialValue)throw Error("Max value cant be smaller than initial value");if(s.estimationStep>s.maxValue-s.initialValue)throw Error("Step cant be larger than range");const r=this.findInitialLimit(s);return this.searchInsideInterval(s,r)}searchInsideInterval(s,r){for(;r.right-r.left>t.minimalStep;){let n=r.left+(r.right-r.left)/2;n=Math.round(n),s.doWork(n),s.meetsCondition()?r.left=n:r.right=n}return r.left}findInitialLimit(s){let r=s.initialValue;for(s.doWork(r);s.meetsCondition()&&r<=s.maxValue;)r+=s.estimationStep,s.doWork(r);let n=r-s.estimationStep;return n=n<s.initialValue?s.initialValue:n,{left:n,right:r>s.maxValue?s.maxValue:r}}}return t.minimalStep=1,t})();class mt{constructor(t,e,s,r){this.gases=t,this.segments=e,this.options=s,this.depthConverter=r,this.ceilings=[],this.runTime=0,this.tissues=Q.createFromSurfacePressure(r.surfacePressure),this.gradients=new vt(r,s,this.tissues);const n=e.last();this.currentGas=n.gas,this.bestGasOptions={currentDepth:this.currentDepth,maxDecoPpO2:this.options.maxDecoPpO2,oxygenNarcotic:this.options.oxygenNarcotic,maxEnd:this.options.maxEND,currentGas:this.currentGas},this.speeds=new pt(this.options),this.levels=new rt(r,s),this.gasSource=new wt(t,s)}get ascentSpeed(){return this.speeds.ascent(this.currentDepth)}get currentDepth(){return this.segments.currentDepth}get ambientPressure(){return this.depthConverter.toBar(this.currentDepth)}get addSafetyStop(){return this.levels.addSafetyStop(this.currentDepth,this.segments.maxDepth)}get decoStopDuration(){return this.options.roundStopsToMinutes?S.oneMinute:S.oneSecond}get isAtSurface(){return 0===this.segments.last().endDepth}markAverageDepth(){this.speeds.markAverageDepth(this.segments)}addCeiling(){const t=this.ceiling(),e=new Dt(this.runTime,t);this.ceilings.push(e)}ceiling(){return this.gradients.ceiling()}bestDecoGas(){return this.bestGasOptions.currentDepth=this.currentDepth,this.bestGasOptions.currentGas=this.currentGas,this.gasSource.bestGas(this.bestGasOptions)}createMemento(){return{runTime:this.runTime,tissues:Q.copy(this.tissues.compartments),ceilings:this.ceilings.length,segments:this.segments.length,lowestCeiling:this.gradients.lowestCeiling}}restore(t){this.tissues.compartments=Q.copy(t.tissues),this.gradients.lowestCeiling=t.lowestCeiling,this.runTime=t.runTime,this.ceilings=this.ceilings.slice(0,t.ceilings),this.segments.cutDown(this.segments.length-t.segments)}nextStop(t){return this.levels.nextStop(t)}shouldSwitchTo(t){return t&&!this.currentGas.compositionEquals(t)}addGasSwitchSegment(){return this.addStopSegment(this.options.gasSwitchDuration*S.oneMinute)}addDecoStopSegment(){return this.addStopSegment(0)}addSafetyStopSegment(){return this.addStopSegment(S.safetyStopDuration)}addAscentSegment(t,e){return this.segments.add(this.currentDepth,t,this.currentGas,e)}addStopSegment(t){return this.segments.add(this.currentDepth,this.currentDepth,this.currentGas,t)}}class at{noDecoLimit(t,e,s){const r=new Y;r.add(e);const n=new L,o=this.duration(t,s.descentSpeed);return n.add(0,t,e,o),this.noDecoLimitMultiLevel(n,r,s)}noDecoLimitMultiLevel(t,e,s){const r=new j(s).create(),n=new mt(e,t,s,r);return this.swimNoDecoLimit(t,e,n)}calculateDecompression(t,e,s){const r=new j(t).create(),n=s.copy(),o=this.validate(n,e);if(o.length>0){const P=n.mergeFlat(s.length);return q.fromErrors(P,o)}const c=new mt(e,n,t,r);this.swimPlan(c),c.markAverageDepth();let u=c.nextStop(c.currentDepth);for(;u>=0&&!c.isAtSurface;)this.tryGasSwitch(c),this.stayAtDecoStop(c,u),this.stayAtSafetyStop(c),this.ascentToNextStop(c,u),u=c.nextStop(u);const D=c.segments.mergeFlat(s.length);return q.fromProfile(D,c.ceilings)}tryGasSwitch(t){const e=t.bestDecoGas();if(t.shouldSwitchTo(e)){t.currentGas=e;const s=t.addGasSwitchSegment();this.swim(t,s)}}stayAtDecoStop(t,e){if(this.needsDecoStop(t,e)){const s=t.createMemento(),r={estimationStep:20*S.oneMinute,initialValue:0,maxValue:S.oneDay,doWork:u=>this.swimDecoStop(t,s,u),meetsCondition:()=>this.needsDecoStop(t,e)},o=(new lt).search(r)+S.oneSecond,c=p.ceilDistance(o,t.decoStopDuration);this.swimDecoStop(t,s,c)}}swimDecoStop(t,e,s){t.restore(e);const r=t.addDecoStopSegment();r.duration=s,this.swim(t,r)}needsDecoStop(t,e){if(e>=t.ceiling())return!1;const s=t.createMemento();this.ascentToNextStop(t,e);const r=e<t.ceiling();return t.restore(s),r}stayAtSafetyStop(t){if(t.addSafetyStop){const e=t.addSafetyStopSegment();this.swim(t,e)}}ascentToNextStop(t,e){const r=this.duration(t.currentDepth-e,t.ascentSpeed),n=t.addAscentSegment(e,r);this.swim(t,n)}validate(t,e){const s=it.validate(t,e);if(s.length>0)return s;const r=St.validate(e);return r.length>0?r:[]}duration(t,e){return t/S.toMinutes(e)}swimPlan(t){t.addCeiling(),t.segments.withAll(e=>{this.swim(t,e)})}swim(t,e){let s=e.startDepth;const r=S.oneSecond;for(let n=0;n<e.duration;n+=r){const o=B.depthAt(s,e.speed,r),c=new B(s,o,e.gas,r);this.swimPart(t,c),s=c.endDepth}}swimPart(t,e){const s=this.toLoadSegment(t.depthConverter,e);t.tissues.load(s,e.gas),t.runTime+=e.duration,t.addCeiling()}swimNoDecoLimit(t,e,s){if(this.validate(t,e).length>0)return 0;this.swimPlan(s);const n=this.currentNdl(s.ceilings);return n!==Number.POSITIVE_INFINITY?n:this.predictNoDecoLimit(t,s)}predictNoDecoLimit(t,e){const s=t.last(),r=s.endDepth,n=new B(r,r,s.gas,S.oneMinute),o=this.toLoadSegment(e.depthConverter,n);let c=1;for(;e.ceiling()<=0&&c>0;)c=e.tissues.load(o,s.gas),e.runTime+=S.oneMinute;return 0===c||0===r?Number.POSITIVE_INFINITY:this.floorNdl(e.runTime)}floorNdl(t){let e=S.toMinutes(t);return e=p.floor(e),e-1}currentNdl(t){for(let e=0;e<t.length;e+=S.oneMinute){const s=t[e];if(s.notAtSurface)return this.floorNdl(s.time)}return Number.POSITIVE_INFINITY}toLoadSegment(t,e){const s=t.toBar(e.speed)-t.surfacePressure;return{startPressure:t.toBar(e.startDepth),duration:e.duration,speed:s}}}class U{static haveReserve(t){for(let e=0;e<t.length;e++)if(!t[e].hasReserve)return!1;return!0}static resetConsumption(t){t.forEach(e=>{e.consumed=0,e.reserve=0})}static removeTank(t,e){const s=t.filter(r=>r!==e);return U.renumberIds(s),s}static renumberIds(t){for(let e=0;e<t.length;e++)t[e].id=e+1}}class ot{constructor(t,e,s){this.size=t,this.startPressure=e,this.id=0,this.consumed=0,this.reserve=0,this._gas=A.air.copy(),this.o2=s}get gas(){return this._gas}get o2(){return X.getO2(this.gas.fO2,this.gas.fHe)}get he(){return p.roundTwoDecimals(100*this.gas.fHe)}get volume(){return this.size*this.startPressure}get name(){return this._gas.name}get endPressure(){const t=this.startPressure-this.consumed;return t>0?t:0}get percentsRemaining(){return this.endPressure/this.startPressure*100}get percentsReserve(){const t=this.reserve/this.startPressure*100;return t>100?100:t}get hasReserve(){return this.endPressure>=this.reserve}set o2(t){this._gas.fO2=X.setO2(t,this.gas.fHe)}set he(t){this.gas.fHe=t/100}static createDefault(){return new ot(15,200,100*A.o2InAir)}assignStandardGas(t){const e=A.byName(t);e&&(this._gas.fO2=e.fO2,this._gas.fHe=e.fHe)}loadFrom(t){this.size=t.size,this.startPressure=t.startPressure,this.consumed=t.consumed,this.reserve=t.reserve,this.gas.fO2=t._gas.fO2,this.gas.fHe=t._gas.fHe}}class X{static getO2(t,e){const s=100*t;return this.isInAirRange(s,e)?X.pinnedO2:p.roundTwoDecimals(s)}static setO2(t,e){return this.isInAirRange(t,e)?A.o2InAir:t/100}static isInAirRange(t,e){return X.o2InAirPercent<=t&&t<=X.pinnedO2&&0===e}}(d=X).pinnedO2=21,d.o2InAirPercent=100*A.o2InAir;class tt{constructor(t,e,s,r){this.duration=t,this.startTime=0,this.endTime=0,this.averageDepth=0,this._startDepth=0,this._endDepth=0,this.endTime=p.roundTwoDecimals(t),this._endDepth=e,this._startDepth=s,this.averageDepth=r}get startDepth(){return this._startDepth}get endDepth(){return this._endDepth}static fromSegment(t){return new tt(t.duration,t.endDepth,t.startDepth,t.averageDepth)}}let Pt=(()=>{class t{constructor(s){this.depthConverter=s}static calculateDecompression(s,r,n){const o=Y.fromTanks(r),c=new at,u=s.copy();return c.calculateDecompression(n,o,u)}consumeFromTanks(s,r,n,o){if(s.length<2)throw new Error("Profile needs to contain at least 2 segments.");const c=this.emergencyAscent(s,r,n);this.consumeFromTanks2(s,c,r,n,o)}consumeFromTanks2(s,r,n,o,c){if(s.length<2)throw new Error("Profile needs to contain at least 2 segments.");U.resetConsumption(o);const u=this.consumeByTanks(s,c.rmv);this.consumeByGases(s,o,c.rmv,u),this.updateReserve(r,o,c.stressRmv)}emergencyAscent(s,r,n){const c=L.fromCollection(s).deepestPart(),u=L.fromCollection(c),D=Y.fromTanks(n),N=(new at).calculateDecompression(r,D,u).segments,I=N.slice(c.length,N.length);return this.addSolvingSegment(I,r.problemSolvingDuration),I}calculateMaxBottomTime(s,r,n,o){const c=this.createTestProfile(s),u=c.last(),D={estimationStep:40*S.oneMinute,initialValue:0,maxValue:S.oneDay,doWork:I=>{u.duration=I,this.consumeFromProfile(c,r,n,o)},meetsCondition:()=>U.haveReserve(r)},x=(new lt).search(D);if(0===x)return 0;const N=S.toMinutes(s.duration+x);return p.floor(N)}consumeFromProfile(s,r,n,o){const c=t.calculateDecompression(s,r,o);this.consumeFromTanks(c.segments,o,r,n)}createTestProfile(s){const r=s.copy(),n=s.last();return r.addFlat(n.endDepth,n.gas,0),r}updateReserve(s,r,n){const o=this.toBeConsumed(s,n,()=>!0);for(let c=0;c<=r.length-1;c++){const u=r[c],D=u.gas.contentCode();let P=o.get(D)||0;P=this.addReserveToTank(u,P),o.set(D,P)}r[0].reserve<t.minimumRockBottom&&(r[0].reserve=t.minimumRockBottom)}addReserveToTank(s,r){const n=p.ceil(r/s.size),o=n+s.reserve>s.startPressure?s.startPressure-s.reserve:n;return s.reserve+=o,this.extractRemaining(r,o,s.size)}addSolvingSegment(s,r){if(0===s.length)return;const o=s[0].startDepth,c=new B(o,o,s[0].gas,r*S.oneMinute);s.unshift(c)}consumeByGases(s,r,n,o){const c=this.toBeConsumedYet(s,n,o,u=>!u.tank);for(let u=r.length-1;u>=0;u--){const D=r[u],P=D.gas.contentCode();let x=c.get(P)||0;x=this.consumeFromTank(D,x),c.set(P,x)}}consumeByTanks(s,r){const n=new Map,o=S.toMinutes(r);return s.forEach(c=>{if(c.tank){const u=c.tank,D=c.gas.contentCode(),P=tt.fromSegment(c),x=this.consumedBySegment(P,o),N=this.consumeFromTank(u,x);let I=n.get(D)||0;I+=N,n.set(D,I)}}),n}consumeFromTank(s,r){const n=p.ceil(r/s.size),o=n>s.endPressure?s.endPressure:n;return s.consumed+=o,this.extractRemaining(r,o,s.size)}extractRemaining(s,r,n){return(s-=r*n)<0?0:s}toBeConsumed(s,r,n){return this.toBeConsumedYet(s,r,new Map,n)}toBeConsumedYet(s,r,n,o){const c=S.toMinutes(r);for(let u=0;u<s.length;u++){const D=s[u];if(o(D)){const x=D.gas.contentCode(),N=tt.fromSegment(D),I=this.consumedBySegment(N,c);let st=n.get(x)||0;st+=I,n.set(x,st)}}return n}consumedBySegment(s,r){const n=this.depthConverter.toBar(s.averageDepth);return s.duration*n*r}}return t.minimumRockBottom=30,t})();class yt{constructor(t){this.depthConverter=t,this.minimumPpO2=.5}calculateForProfile(t){let e=0;return t.forEach(s=>{const n=this.calculate(s.gas.fO2,s.startDepth,s.endDepth,s.duration);e+=n}),e}calculate(t,e,s,r){const c=t*this.depthConverter.toBar((e+s)/2);if(c<=this.minimumPpO2)return 0;const u=this.exponentByPpO2(c);return r*Math.exp(u)*100}exponentByPpO2(t){return t<=1.5?1.93873*t-11.7853:9.80829*t-23.6349}}let Z=(()=>{var a;class t{}return(a=t).imperialTankSize=124.1,a.imperialTankWorkPressure=3442,a.imperialStageSize=80.1,a.imperialStageWorkPressure=3e3,a.mertricTankSize=15,a.metricStageSize=11.1,t})();class xt{get available(){return[this.primary,this.stage,{name:"2xLP85",size:165,workingPressure:2640},{name:"S40",size:41.3,workingPressure:3e3},{name:"LP85",size:82.5,workingPressure:2640},{name:"HP80",size:84.4,workingPressure:3442},{name:"HP100",size:106.7,workingPressure:3442}]}get primary(){return{name:"HP117",size:Z.imperialTankSize,workingPressure:Z.imperialTankWorkPressure}}get stage(){return{name:"S80",size:Z.imperialStageSize,workingPressure:Z.imperialStageWorkPressure}}}class M{get tanks(){return new xt}get lastSpeedLevel(){return 20}get autoStopLevel(){return 33}get stopsDistance(){return M.depthDistance}get recreationalOptions(){return{ascentSpeed50perc:M.recreSpeed,ascentSpeed50percTo6m:M.recreSpeed,ascentSpeed6m:M.recreSpeed,descentSpeed:M.descentSpeed,lastStopDepth:M.lastStopDepth,maxEND:M.maxEnd}}get recommendedOptions(){return{ascentSpeed50perc:M.recreSpeed,ascentSpeed50percTo6m:2*M.depthDistance,ascentSpeed6m:M.depthDistance,descentSpeed:M.descentSpeed,lastStopDepth:M.depthDistance,maxEND:M.maxEnd}}}(l=M).lastStopDepth=15,l.depthDistance=10,l.descentSpeed=6*l.depthDistance,l.recreSpeed=3*l.depthDistance,l.maxEnd=10*l.depthDistance;let Tt=(()=>{class t{constructor(s=t.defaultSac){this.rmv=s}get stressRmv(){return 3*this.rmv}static gasSac(s,r){return s/r}gasSac(s){return t.gasSac(this.rmv,s.size)}loadFrom(s){this.rmv=s.rmv}}return t.defaultSac=20,t})();class et{constructor(t,e,s){this.gas=t,this.depth=e,this.density=s}static createDefault(){return new et(A.air,0,0)}applyHigher(t,e,s){s>this.density&&(this.gas=t,this.density=s,this.depth=e)}}let At=(()=>{class t{constructor(){this.helium=.179,this.nitrogen=1.251,this.oxygen=1.428}forGas(s){return this.forContent(s.fO2,s.fHe)}forContent(s,r){return this.nitrogen*(1-s-r)+this.oxygen*s+this.helium*r}}return t.recommendedMaximum=5.7,t})();class gt{constructor(t){this.depthConverter=t,this.density=new At}forProfile(t){const e=et.createDefault();return t.forEach(s=>{const r=s.gas,n=this.density.forGas(r);this.applyHigher(e,r,s.startDepth,n),this.applyHigher(e,r,s.endDepth,n)}),e}atDepth(t,e){const s=this.density.forGas(t);return this.fromAtaDensity(s,e)}applyHigher(t,e,s,r){const n=this.fromAtaDensity(r,s);t.applyHigher(e,s,n)}fromAtaDensity(t,e){return t*this.depthConverter.toBar(e)}}let bt=(()=>{class t{constructor(s){this.depthConverter=s,this.minPressure=.5}calculateForProfile(s){let r=0;return s.forEach(n=>{const c=this.calculate(n.duration,n.gas.fO2,n.startDepth,n.endDepth);r+=c}),r}calculate(s,r,n,o){let c=S.toMinutes(s),P=this.depthConverter.toBar(n)*r,x=this.depthConverter.toBar(o)*r;if(P<=this.minPressure&&x<=this.minPressure)return 0;P<=this.minPressure?(c=c*(x-this.minPressure)/(x-P),P=.501):x<=this.minPressure&&(c=c*(P-this.minPressure)/(P-x),x=.501);const N=P+x-1;return Math.pow(N,5/6)*(1-5*Math.pow(x-P,2)/216/Math.pow(N,2))*c}}return t.dailyLimit=300,t})();class Ot{constructor(t,e,s){this.startDepth=t,this.endDepth=e,this.duration=s}get minDepth(){return Math.min(this.startDepth,this.endDepth)}get maxDepth(){return Math.max(this.startDepth,this.endDepth)}get isDescent(){return this.startDepth<this.endDepth}get isFlat(){return this.startDepth===this.endDepth}get isAscent(){return this.startDepth>this.endDepth}timeAt(t){const e=B.speed(this.startDepth,this.endDepth,this.duration),s=B.timeAt(this.startDepth,e,t);return p.round(s)}}class Mt{constructor(t){this.simpleDepths=F.simple(),this.events=new ut,this.elapsed=0,this.index=0,this.fixedMnd=!0,this.profile=t.profile,this.options=t.profileOptions,this.startAscentIndex=t.startAscentIndex,this.maxDensity=t.maxDensity,this.exactDepths=new j(this.options).create(),this.levels=new rt(this.exactDepths,this.options),this.densityAtDepth=new gt(this.exactDepths),this.speeds=new pt(this.options);const e=L.fromCollection(this.profile);this.speeds.markAverageDepth(e),this.maxDepth=e.maxDepth,this._mndBars=this.simpleDepths.toBar(this.options.maxEND)}get previous(){return this.index>0?this.profile[this.index-1]:null}get isBeforeDecoAscent(){return this.index<this.startAscentIndex}get maxPpo(){return this.isBeforeDecoAscent?this.options.maxPpO2:this.options.maxDecoPpO2}get current(){return this.profile[this.index]}get switchingGas(){return!!this.previous&&!this.current.gas.compositionEquals(this.previous.gas)}get switchingTank(){return!!this.previous&&!!this.previous.tank&&!!this.current.tank&&this.previous.tank!==this.current.tank}get maxMnd(){return this._mndBars}get currentEndTime(){return this.elapsed+this.current.duration}get atSafetyStop(){return this.index===this.profile.length-2&&this.levels.addSafetyStop(this.current.startDepth,this.maxDepth)}gasEnd(t){return this.current.gas.end(t,this.options.oxygenNarcotic)}addElapsed(){this.elapsed=this.currentEndTime}}class ct{static fromProfile(t){const e=new Mt(t),s=new kt(e.events,e.current);for(e.index=0;e.index<t.profile.length;e.index++){const r=this.toPressureSegment(e.current,e.simpleDepths);this.addHighPpO2(e,r),this.addLowPpO2(e,r),this.addGasSwitch(e),this.addUserTankSwitch(e),this.addHighDescentSpeed(e),this.addHighAscentSpeed(e),this.addSwitchHighN2(e),this.addMndExceeded(e,r),this.addDensityExceeded(e),this.addSafetyStop(e),s.assignSegment(e.current),ct.addBrokenCeiling(s,t.ceilings),e.addElapsed()}return e.events}static addHighAscentSpeed(t){const e=t.current;let s=S.toSeconds(e.speed);if(s=p.roundTwoDecimals(s),-s>t.speeds.ascent(e.startDepth)){const r=O.createHighAscentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addHighDescentSpeed(t){const e=t.current;if(S.toSeconds(e.speed)>t.options.descentSpeed){const r=O.createHighDescentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addGasSwitch(t){if(t.switchingGas){const e=t.current,s=O.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static addUserTankSwitch(t){if(t.switchingTank){const e=t.current,s=O.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static toPressureSegment(t,e){const s=e.toBar(t.startDepth),r=e.toBar(t.endDepth);return new Ot(s,r,t.duration)}static addHighPpO2(t,e){if(e.isDescent||t.isBeforeDecoAscent&&t.switchingGas){const s=t.current.gas.mod(t.maxPpo);if(e.maxDepth>s){let r=e.startDepth,n=t.elapsed;e.startDepth<s&&(r=s,n+=e.timeAt(r));const o=t.simpleDepths.fromBar(r),c=O.createHighPpO2(n,o);t.events.add(c)}}}static addLowPpO2(t,e){const s=t.current,r=s.gas.ceiling(t.simpleDepths.surfacePressure);if(e.minDepth<r&&t.switchingGas||e.startDepth>r&&r>e.endDepth&&e.isAscent||0===s.startDepth&&e.startDepth<r&&e.isDescent){let o=e.startDepth,c=t.elapsed;e.startDepth>r&&(o=r,c+=e.timeAt(o));const u=t.simpleDepths.fromBar(o),D=O.createLowPpO2(c,u);t.events.add(D)}}static addBrokenCeiling(t,e){for(;t.lastCeilingIndex<t.currentSegmentEndTime&&t.lastCeilingIndex<e.length-1;){const s=e[t.lastCeilingIndex];t.lastCeilingIndex++,this.addNdlEnd(t,s);const r=t.belowCeiling(s);if(!r&&t.fixedBrokenCeiling){const n=O.createBrokenCeiling(s.time,s.depth);t.events.add(n),t.fixedBrokenCeiling=!1;break}if(r&&!t.fixedBrokenCeiling&&(t.fixedBrokenCeiling=!0),s.time>t.currentSegmentEndTime)break}}static addNdlEnd(t,e){if(!t.ndlCeilingMarked&&e.depth>0){t.ndlCeilingMarked=!0;const r=t.current.depthAt(e.time-t.currentSegmentStartTime),n=O.createNoDecoEnd(e.time,r);t.events.add(n)}}static addSwitchHighN2(t){const e=t.current,s=t.previous;if(t.switchingGas&&s&&s.gas.fHe>0&&5*(e.gas.fN2-s.gas.fN2)>-(e.gas.fHe-s.gas.fHe)){const o=O.createSwitchToHigherN2(t.elapsed,e.startDepth,e.gas);t.events.add(o)}}static addMndExceeded(t,e){const s=t.current,r=t.gasEnd(e.startDepth),n=t.gasEnd(e.endDepth);if(t.maxMnd<r&&t.fixedMnd||t.maxMnd<n&&t.fixedMnd){const u=K.xValueAtAbsolute({start:t.elapsed,end:t.elapsed+s.duration},{start:r,end:n},t.maxMnd),D=s.depthAt(u);this.addMndEvent(t,u,D)}t.fixedMnd=n<=t.maxMnd}static addMndEvent(t,e,s){const n=O.createMaxEndExceeded(e,s,t.current.gas);t.events.add(n),t.fixedMnd=!0}static addDensityExceeded(t){const e=t.current,s=e.gas,n=e.endDepth,o=e.endDepth>e.startDepth,c=t.switchingGas,u=t.densityAtDepth.atDepth(s,e.startDepth),D=t.densityAtDepth.atDepth(s,n);if(c&&u>t.maxDensity||o&&D>t.maxDensity){const N=K.xValueAtAbsolute({start:t.elapsed,end:t.elapsed+e.duration},{start:u,end:D},t.maxDensity),I=e.depthAt(N),st=O.createHighDensity(N,I,e.gas);t.events.add(st)}}static addSafetyStop(t){const e=t.current;if(t.atSafetyStop&&e.duration>=S.safetyStopDuration){const r=O.createSafetyStopStart(t.elapsed+e.duration-S.safetyStopDuration,e.endDepth);t.events.add(r)}}}class kt{constructor(t,e){this.events=t,this.lastCeilingIndex=0,this.currentSegmentStartTime=0,this.currentSegmentEndTime=0,this.fixedBrokenCeiling=!0,this.ndlCeilingMarked=!1,this._current=e}get current(){return this._current}assignSegment(t){this.currentSegmentStartTime=this.currentSegmentEndTime,this.currentSegmentEndTime=this.currentSegmentStartTime+t.duration,this._current=t}belowCeiling(t){return this._current.depthAt(t.time-this.currentSegmentStartTime)>=t.depth}}class z{get name(){return"Imperial"}get lengthShortcut(){return"ft"}get pressureShortcut(){return"psi"}get volumeShortcut(){return"cuft"}get altitudeShortcut(){return"ft.a.s.l"}get densityShortcut(){return"lb/cuft"}toMeters(t){return t*z.footRate}fromMeters(t){return t/z.footRate}toBar(t){return t/z.psiRate}fromBar(t){return t*z.psiRate}toLiter(t){return t*z.cftRate}fromLiter(t){return t/z.cftRate}fromTankLiters(t,e){return this.fromLiter(t)*e}toTankLiters(t,e){return this.toLiter(t)/e}fromGramPerLiter(t){return t*z.lbPerCuftRate}}(f=z).psiRate=14.503773773022,f.cftRate=28.316846592,f.footRate=.3048,f.poundRate=.00220462262,f.lbPerCuftRate=f.poundRate*f.cftRate}}]);