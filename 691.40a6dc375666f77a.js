"use strict";(self.webpackChunkplanner=self.webpackChunkplanner||[]).push([[691],{211:($,G,y)=>{y.d(G,{e:()=>x});var m=y(822);class x{static toTanks(c){const p=[];return c.forEach(u=>{const D=new m.VQ(u.size,u.startPressure,0);D.id=u.id,D.gas.fO2=u.gas.fO2,D.gas.fHe=u.gas.fHe,D.consumed=u.consumed,D.reserve=u.reserve,p.push(D)}),m.bz.renumberIds(p),p}static fromTanks(c){const p=[];return c.forEach(u=>{p.push({id:u.id,size:u.size,startPressure:u.startPressure,consumed:u.consumed,reserve:u.reserve,gas:{fO2:u.gas.fO2,fHe:u.gas.fHe}})}),p}static toSegments(c,p){const u=[];for(let D=0;D<c.length;D++){const w=c[D],T=m.Gv.air.copy();T.fO2=w.gas.fO2,T.fHe=w.gas.fHe;const A=new m.XX(w.startDepth,w.endDepth,T,w.duration);w.tankId>0&&w.tankId<=p.length&&(A.tank=p[w.tankId-1]),u.push(A)}return u}static fromSegments(c){const p=[];return c.forEach(u=>{p.push({startDepth:u.startDepth,endDepth:u.endDepth,duration:u.duration,tankId:u.tank?u.tank.id:0,gas:{fO2:u.gas.fO2,fHe:u.gas.fHe}})}),p}static toProfile(c,p){const u=x.toSegments(c.segments,p);return m.Z1.fromProfile(u,c.ceilings)}static fromProfile(c){return{segments:x.fromSegments(c.segments),ceilings:c.ceilings,errors:x.fromEvents(c.errors)}}static toEvents(c){const p=new m.zW;return c.forEach(u=>{var D,w;const T=new m.ju(u.timeStamp,u.depth,u.type,u.message);u.gas&&(T.gas=new m.RP(null===(D=u.gas)||void 0===D?void 0:D.fO2,null===(w=u.gas)||void 0===w?void 0:w.fHe)),p.add(T)}),p}static fromEvents(c){const p=[];return c.forEach(u=>{const D={timeStamp:u.timeStamp,depth:u.depth,type:u.type,message:u.message};u.gas&&(D.gas={fO2:u.gas.fO2,fHe:u.gas.fHe}),p.push(D)}),p}static fromDiver(c){return{rmv:c.rmv,maxPpO2:c.maxPpO2,maxDecoPpO2:c.maxDecoPpO2}}static toDiver(c){const p=new m.rr(c.rmv,c.maxPpO2);return p.maxDecoPpO2=c.maxDecoPpO2,p}static fromOptions(c){return{gfLow:c.gfLow,gfHigh:c.gfHigh,maxPpO2:c.maxPpO2,maxDecoPpO2:c.maxDecoPpO2,salinity:c.salinity,altitude:c.altitude,roundStopsToMinutes:c.roundStopsToMinutes,gasSwitchDuration:c.gasSwitchDuration,safetyStop:c.safetyStop,lastStopDepth:c.lastStopDepth,decoStopDistance:c.decoStopDistance,minimumAutoStopDepth:c.minimumAutoStopDepth,maxEND:c.maxEND,oxygenNarcotic:c.oxygenNarcotic,ascentSpeed6m:c.ascentSpeed6m,ascentSpeed50percTo6m:c.ascentSpeed50percTo6m,ascentSpeed50perc:c.ascentSpeed50perc,descentSpeed:c.descentSpeed,problemSolvingDuration:c.problemSolvingDuration}}static toOptions(c){const p=new m.Ei(c.gfLow,c.gfHigh,c.maxPpO2,c.maxDecoPpO2,c.salinity);return p.altitude=c.altitude,p.roundStopsToMinutes=c.roundStopsToMinutes,p.gasSwitchDuration=c.gasSwitchDuration,p.safetyStop=c.safetyStop,p.lastStopDepth=c.lastStopDepth,p.decoStopDistance=c.decoStopDistance,p.minimumAutoStopDepth=c.minimumAutoStopDepth,p.maxEND=c.maxEND,p.oxygenNarcotic=c.oxygenNarcotic,p.ascentSpeed6m=c.ascentSpeed6m,p.ascentSpeed50percTo6m=c.ascentSpeed50percTo6m,p.ascentSpeed50perc=c.ascentSpeed50perc,p.descentSpeed=c.descentSpeed,p.problemSolvingDuration=c.problemSolvingDuration,p}}},691:($,G,y)=>{y.d(G,{P:()=>g});var m=y(822),x=y(211);class g{static calculateDecompression(p){const u=x.e.toTanks(p.tanks),D=x.e.toSegments(p.plan,u),w=m.wC.fromCollection(D),T=m.Vw.fromTanks(u),A=new m.dD,O=x.e.toOptions(p.options),C=A.calculateDecompression(O,T,w),P=x.e.fromProfile(C),l=m.uv.fromProfile(w.startAscentIndex,C.segments,C.ceilings,O);return{profile:P,events:x.e.fromEvents(l.items)}}static diveInfo(p){const u=x.e.toTanks(p.tanks),D=m.Vw.fromTanks(u),w=x.e.toSegments(p.plan,u),T=m.wC.fromCollection(w),A=new m.dD,O=x.e.toOptions(p.options),C=A.noDecoLimitMultiLevel(T,D,O),P=new m.FQ(p.options).create();return{noDeco:C,otu:new m.Uz(P).calculateForProfile(w),cns:new m.rQ(P).calculateForProfile(w)}}static calculateConsumption(p){const u=new m.FQ(p.options).create(),D=new m.Cb(u),w=x.e.toTanks(p.tanks),T=x.e.toSegments(p.profile,w),A=x.e.toSegments(p.plan,w),O=m.wC.fromCollection(A),C=new m.rr(p.diver.rmv,p.options.maxPpO2),P=x.e.toOptions(p.options),l=D.calculateMaxBottomTime(O,w,C,P),E=D.emergencyAscent(T,P,w);let R=m.wC.duration(E);return R=m.qp.toMinutes(R),D.consumeFromTanks2(T,E,P,w,C),{maxTime:l,timeToSurface:R,tanks:x.e.fromTanks(w)}}}},822:($,G,y)=>{y.d(G,{Cb:()=>at,Ei:()=>nt,FQ:()=>U,Gv:()=>l,RP:()=>P,Uz:()=>ht,VQ:()=>q,Vw:()=>O,XX:()=>B,Z1:()=>T,bz:()=>L,dD:()=>Q,ju:()=>p,qp:()=>S,rQ:()=>ot,rr:()=>ct,uv:()=>Y,wC:()=>b,zW:()=>D});class m{constructor(t,e,s,r,n,i){this._n2HalfTime=t,this._n2A=e,this._n2B=s,this._heHalfTime=r,this._heA=n,this._heB=i}get n2HalfTime(){return this._n2HalfTime}get n2A(){return this._n2A}get n2B(){return this._n2B}get heHalfTime(){return this._heHalfTime}get heA(){return this._heA}get heB(){return this._heB}}class x{}x.Buhlmann_ZHL16C=[new m(5,1.1696,.5578,1.88,1.6189,.477),new m(8,1,.6514,3.02,1.383,.5747),new m(12.5,.8618,.7222,4.72,1.1919,.6527),new m(18.5,.7562,.7826,6.99,1.0458,.7223),new m(27,.62,.8125,10.21,.922,.7582),new m(38.3,.5043,.8434,14.48,.8205,.7957),new m(54.3,.441,.8693,20.53,.7305,.8279),new m(77,.4,.891,29.11,.6502,.8553),new m(109,.375,.9092,41.2,.595,.8757),new m(146,.35,.9222,55.19,.5545,.8903),new m(187,.3295,.9319,70.69,.5333,.8997),new m(239,.3065,.9403,90.34,.5189,.9073),new m(305,.2835,.9477,115.29,.5181,.9122),new m(390,.261,.9544,147.42,.5176,.9171),new m(498,.248,.9602,188.24,.5172,.9217),new m(635,.2327,.9653,240.03,.5119,.9267)];class g{static fix(t){return Number(t.toFixed(10))}static roundTwoDecimals(t){return g.round(t,2)}static round(t,e=0){return g.adapt(Math.round,t,e)}static floorTwoDecimals(t){return g.floor(t,2)}static floor(t,e=0){return g.adapt(Math.floor,t,e)}static ceilTwoDecimals(t){return g.ceil(t,2)}static ceil(t,e=0){return g.adapt(Math.ceil,t,e)}static adapt(t,e,s){const r=Math.pow(10,s);return t(e*r)/r}}var c=(()=>{return(a=c||(c={}))[a.noAction=0]="noAction",a[a.error=1]="error",a[a.gasSwitch=2]="gasSwitch",a[a.reachedNoDeco=3]="reachedNoDeco",a[a.lowPpO2=4]="lowPpO2",a[a.highPpO2=5]="highPpO2",a[a.highAscentSpeed=6]="highAscentSpeed",a[a.highDescentSpeed=7]="highDescentSpeed",a[a.brokenCeiling=8]="brokenCeiling",a[a.maxEndExceeded=9]="maxEndExceeded",a[a.switchToHigherN2=10]="switchToHigherN2",c;var a})();class p{constructor(t,e,s,r,n){this.timeStamp=t,this.depth=e,this.type=s,this.message=r,this.gas=n}}class u{static createGasSwitch(t,e,s){return{timeStamp:t,depth:e,type:c.gasSwitch,gas:s}}static createError(t){return{timeStamp:0,depth:0,type:c.error,message:t}}static createLowPpO2(t,e){return{timeStamp:t,depth:e,type:c.lowPpO2}}static createHighPpO2(t,e){return{timeStamp:t,depth:e,type:c.highPpO2}}static createHighAscentSpeed(t,e){return{timeStamp:t,depth:e,type:c.highAscentSpeed}}static createHighDescentSpeed(t,e){return{timeStamp:t,depth:e,type:c.highDescentSpeed}}static createBrokenCeiling(t,e){return{timeStamp:t,depth:e,type:c.brokenCeiling}}static createMaxEndExceeded(t,e,s){return{timeStamp:t,depth:e,type:c.maxEndExceeded,gas:s}}static createSwitchToHigherN2(t,e,s){return{timeStamp:t,depth:e,type:c.switchToHigherN2,gas:s}}}class D{constructor(){this.items=[]}add(t){this.items.push(t)}}class w{constructor(t,e){this.time=t,this.depth=e}get notAtSurface(){return this.depth>0}static isDecoDive(t){for(const e of t)if(e.notAtSurface)return!0;return!1}}class T{constructor(t,e,s){this.seg=t,this.ceil=e,this.err=s}get segments(){return this.seg}get ceilings(){return this.ceil}get errors(){return this.err}static fromErrors(t,e){return new T(t,[],e)}static fromProfile(t,e){return new T(t,e,[])}}class O{constructor(){this.bottomGases=[]}get all(){return this.bottomGases.slice()}get hasBottomGas(){return this.bottomGases.length>=1}static fromTanks(t){const e=new O;return t.forEach(s=>{e.add(s.gas)}),e}bestGas(t,e,s){const r=e.toBar(s.currentDepth);let n=s.currentGas;return this.bottomGases.forEach((i,o)=>{const h=this.bottomGases[o],f=h.mod(s.maxDecoPpO2),v=t.toDecoStop(f),M=h.end(r,s.oxygenNarcotic);s.currentDepth<=v&&M<=s.maxEndPressure&&(!n||n.fO2<h.fO2)&&(n=h)}),n}add(t){this.bottomGases.push(t)}isRegistered(t){return this.bottomGases.includes(t)}}class C{static partialPressure(t,e){return t*e}static mod(t,e){return t/e}static bestMix(t,e,s){const n=t/s.toBar(e);return n>1?1:n}static ead(t,e){return C.end(e,1-t)/l.nitroxInAir}static end(t,e,s=0){return t*this.narcoticIndex(s,e)}static mnd(t,e,s=0){return t/this.narcoticIndex(s,e)}static ceiling(t,e){const n=.18/t*e;return n<e?e:n}static narcoticIndex(t,e=0){return e+t}}class P{constructor(t,e){if(this._fO2=t,this._fHe=e,this.contentExceeds100percent())throw new Error("O2 + He can't exceed 100 %")}get fN2(){return 1-this._fO2-this._fHe}get fO2(){return this._fO2}get fHe(){return this._fHe}set fO2(t){this._fO2=t>1?1:t,this.contentExceeds100percent()&&(this._fHe=this.countRemaining(this._fO2))}set fHe(t){this._fHe=t>.99?.99:t,this.contentExceeds100percent()&&(this._fO2=this.countRemaining(this._fHe))}copy(){return new P(this._fO2,this._fHe)}mod(t){return C.mod(t,this._fO2)}end(t,e){return C.end(t,this.fN2,e?this._fO2:0)}mnd(t,e){return C.mnd(t,this.fN2,e?this._fO2:0)}ceiling(t){return C.ceiling(this._fO2,t)}compositionEquals(t){return!!t&&this._fO2===t._fO2&&this._fHe===t._fHe}contentCode(){return g.round(1e4*this._fO2*1e4)+g.round(1e4*this._fHe)}contentExceeds100percent(){return this._fO2+this._fHe>1}countRemaining(t){return g.round(1-t,5)}}class l{static nitroxNames(){return l.allNames().slice(0,6)}static allNames(){return Array.from(l.map.keys())}static nameFor(t,e=0){const r=g.round(100*t),n=g.round(100*e);return r<=0?"":n<=0?r>=100?l.oxygenName:21===r?l.airName:"EAN"+r.toString():`${r>=21?"Helitrox":"Trimix"} ${r.toString()}/${n.toString()}`}static byName(t){if(l.map.has(t)){const s=l.map.get(t);return null!=s?s:null}const e=l.namesRegEx.exec(t);if(e){if(e[1]){const s=Number(e[1])/100;if(s>0)return new P(s,0)}if(e[2]&&e[3]){const s=Number(e[2])/100,r=Number(e[3])/100;if(s>0&&r>0)return new P(s,r)}}return null}}l.o2InAir=.209,l.nitroxInAir=1-l.o2InAir,l.oxygen=new P(1,0),l.ean50=new P(.5,0),l.ean38=new P(.38,0),l.ean36=new P(.36,0),l.ean32=new P(.32,0),l.trimix3525=new P(.35,.25),l.trimix2525=new P(.25,.25),l.air=new P(l.o2InAir,0),l.trimix2135=new P(.21,.35),l.trimix1845=new P(.18,.45),l.trimix1555=new P(.15,.55),l.trimix1260=new P(.12,.6),l.trimix1070=new P(.1,.7),l.airName="Air",l.oxygenName="Oxygen",l.namesRegEx=/[EAN](?<fO2>\d{2})|(?<fO2b>\d{2})\/(?<fHe>\d{2})/i,l.map=new Map([[l.airName,l.air],["EAN32",l.ean32],["EAN36",l.ean36],["EAN38",l.ean38],["EAN50",l.ean50],[l.oxygenName,l.oxygen],["Helitrox 35/25",l.trimix3525],["Helitrox 25/25",l.trimix2525],["Helitrox 21/35",l.trimix2135],["Trimix 18/45",l.trimix1845],["Trimix 15/55",l.trimix1555],["Trimix 12/60",l.trimix1260],["Trimix 10/70",l.trimix1070]]);class R extends m{constructor(t,e){super(t.n2HalfTime,t.n2A,t.n2B,t.heHalfTime,t.heA,t.heB),this._pN2=0,this._pHe=0,this._pTotal=0,this._a=0,this._b=0,this._pN2=C.partialPressure(e,.79)-.0627,this._pHe=0,this._pTotal=this.pN2+this.pHe}get pN2(){return this._pN2}get pHe(){return this._pHe}get pTotal(){return this._pTotal}get a(){return this._a}get b(){return this._b}ceiling(t){return(this.pTotal-this.a*t)/(t/this.b+1-t)}load(t,e){this._pN2=this.loadGas(t,e.fN2,this.pN2,this.n2HalfTime),this._pHe=this.loadGas(t,e.fHe,this.pHe,this.heHalfTime);const s=this.pTotal;return this._pTotal=this.pN2+this.pHe,this._a=(this.n2A*this.pN2+this.heA*this.pHe)/this.pTotal,this._b=(this.n2B*this.pN2+this.heB*this.pHe)/this.pTotal,this.pTotal-s}loadGas(t,e,s,r){return this.schreinerEquation(s,t.startPressure*e,t.duration,r,t.speed*e)}schreinerEquation(t,e,s,r,n){const o=.01155245301/r;return e+n*(s-1/o)-(e-t-n/o)*Math.exp(-o*s)}}class et{constructor(t){this.compartments=[];for(let e=0;e<x.Buhlmann_ZHL16C.length;e++){const r=new R(x.Buhlmann_ZHL16C[e],t);this.compartments.push(r)}}ceiling(t){let e=0;for(let s=0;s<this.compartments.length;s++){const r=this.compartments[s].ceiling(t);r>e&&(e=r)}return e}load(t,e){let s=0;for(let r=0;r<this.compartments.length;r++)s+=this.compartments[r].load(t,e);return s}}class S{static toSeconds(t){return t*S.oneMinute}static toMinutes(t){return t/S.oneMinute}static toDate(t){return new Date(1970,1,1,0,0,t,0)}static secondsFromDate(t){const e=new Date(t);let s=e.getSeconds();return s+=e.getMinutes()*S.oneMinute,s+=e.getHours()*Math.pow(S.oneMinute,2),s}}S.oneSecond=1,S.oneMinute=60,S.oneDay=1440*S.oneMinute;class K{static validate(t,e){const s=[];if(!t.any()){const r=u.createError("There needs to be at least one segment at depth.");s.push(r)}return t.withAll(r=>{K.validateRegisteredGas(s,e,r)}),s}static validateRegisteredGas(t,e,s){if(!e.isRegistered(s.gas)){const n=u.createError(`Segment ${s.startDepth}-${s.endDepth} has gas not registered in gases.`);t.push(n)}}}class B{constructor(t,e,s,r){this.startDepth=t,this.endDepth=e,this._gas=s,this.duration=r}static from(t){const e=new B(t.startDepth,t.endDepth,t._gas,t.duration);return e.tank=t.tank,e}static depthAt(t,e,s){return t+e*s}get gas(){return this._gas}get tank(){return this._tank}set tank(t){this._tank=t,t&&(this._gas=t.gas)}contentEquals(t){return this.speed===t.speed&&this._gas===t._gas}get speed(){return(this.endDepth-this.startDepth)/this.duration}get averageDepth(){return(this.startDepth+this.endDepth)/2}depthAt(t){return B.depthAt(this.startDepth,this.speed,t)}mergeFrom(t){this.duration+=t.duration,this.endDepth=t.endDepth}}class b{constructor(){this.segments=[],this._maxDepth=0}static from(t){return b.fromCollection(t.segments)}static fromCollection(t){const e=new b;return t.forEach(s=>{const r=B.from(s);e.segments.push(r),e.updateMaxDepth(r)}),e}static duration(t){let e=0;for(const s of t)e+=s.duration;return e}static averageDepth(t){if(t.length<=0)return 0;let e=0,s=0;return t.forEach(r=>{if(r.duration>0){const n=r.averageDepth*r.duration+s*e;s+=r.duration,e=n/s}}),e}get length(){return this.segments.length}get items(){return this.segments.slice()}get maxDepth(){return this._maxDepth}get currentDepth(){return this.any()?this.last().endDepth:0}get duration(){return b.duration(this.segments)}add(t,e,s,r){const n=new B(t,e,s,r);return this.segments.push(n),this.updateMaxDepth(n),n}addFlat(t,e,s){return this.add(t,t,e,s)}addChangeTo(t,e,s){return this.add(this.currentDepth,t,e,s)}mergeFlat(t=0){if(t<0)return this.segments;const e=[];for(let s=this.segments.length-1;s>t;s--){const r=this.segments[s-1],n=this.segments[s];r.contentEquals(n)&&(r.mergeFrom(n),e.push(n))}return this.segments=this.segments.filter(s=>!e.includes(s)),this.segments}remove(t){this.segments=this.segments.filter(e=>e!==t),this.fixStartDepths()}withAll(t){for(let e=0;e<this.segments.length;e++)t(this.segments[e])}any(){return 0!==this.segments.length}last(){return this.segments[this.segments.length-1]}copy(){return b.from(this)}fixStartDepths(){this.any()&&(this.segments[0].startDepth=0);for(let t=0;t<this.segments.length-1;t++){const s=this.segments[t+1];s.startDepth=this.segments[t].endDepth,this.updateMaxDepth(s)}}deepestPart(){for(let t=this.segments.length-1;t>=0;t--)if(this.segments[t].endDepth===this.maxDepth)return this.items.slice(0,t+1);return[]}get startAscentIndex(){return this.deepestPart().length}get startAscentTime(){const t=this.deepestPart();return b.duration(t)}updateMaxDepth(t){t.endDepth>this._maxDepth&&(this._maxDepth=t.endDepth)}}var I=(()=>{return(a=I||(I={}))[a.fresh=1]="fresh",a[a.brackish=2]="brackish",a[a.salt=3]="salt",I;var a})();let k=(()=>{class a{}return a.fresh=1e3,a.brackish=1020,a.salt=1030,a})(),j=(()=>{class a{}return a.standard=9.80665,a})(),F=(()=>{class a{static pascalToBar(e){return e/a.coefficient}static barToPascal(e){return e*a.coefficient}}return a.coefficient=1e5,a})(),st=(()=>{class a{static atAltitude(e){return F.barToPascal(this.standard)*Math.pow(288.15/(288.15+-.0065*e),.0289644*j.standard/-.05404308)}}return a.standard=1.01325,a})();class U{constructor(t){this.options=t}create(){switch(this.options.salinity){case I.salt:return N.forSaltWater(this.options.altitude);case I.brackish:return N.forBrackishWater(this.options.altitude);default:return N.forFreshWater(this.options.altitude)}}}class N{constructor(t,e){this.density=t,this._gravity=j.standard;const s=st.atAltitude(e);this._surfacePressure=F.pascalToBar(s)}get surfacePressure(){return this._surfacePressure}static forSaltWater(t=0){return new N(k.salt,t)}static forBrackishWater(t=0){return new N(k.brackish,t)}static forFreshWater(t=0){return new N(k.fresh,t)}static simple(){const t=new N(k.fresh,0);return t._surfacePressure=1,t._gravity=10,t}toBar(t){return F.pascalToBar(t*(this.density*this._gravity))+this._surfacePressure}fromBar(t){if(t<this._surfacePressure)throw new Error("Lower pressure than altitude isn`t convertible to depth.");const e=this.density*this._gravity;return F.barToPascal(t-this._surfacePressure)/e}}class rt{constructor(t,e,s){this.depthConverter=t,this.options=e,this.tissues=s,this.lowestCeiling=0,this.lowestCeiling=this.depthConverter.surfacePressure+1}ceiling(){let t=this.tolerated();return t<this.depthConverter.surfacePressure&&(t=this.depthConverter.surfacePressure),this.depthConverter.fromBar(t)}toleratedTissues(t,e,s,r){const n=this.tissues.compartments;let i=0;for(let o=0;o<n.length;o++){const h=n[o];let f=i;(t/h.b+h.a-t)*s+t<(e/h.b+h.a-e)*r+e&&(f=(-h.a*h.b*(s*e-r*t)-(1-h.b)*(s-r)*e*t+h.b*(e-t)*h.pTotal)/(-h.a*h.b*(s-r)+(1-h.b)*(r*e-s*t)+h.b*(e-t))),f>=i&&(i=f)}return i}tolerated(){const t=this.options.gfLow,e=this.options.gfHigh,s=this.depthConverter.surfacePressure,r=this.tissues.ceiling(t);return r>this.lowestCeiling&&(this.lowestCeiling=r),this.toleratedTissues(s,this.lowestCeiling,e,t)}}let J=(()=>{class a{constructor(e){this.options=e,this.averageDepth=0}markAverageDepth(e){const s=e.deepestPart();this.averageDepth=b.averageDepth(s)}ascent(e){return e>a.sixMeters?e>this.averageDepth/2?this.options.ascentSpeed50perc:this.options.ascentSpeed50percTo6m:this.options.ascentSpeed6m}}return a.sixMeters=6,a})();var _=(()=>{return(a=_||(_={}))[a.never=1]="never",a[a.auto=2]="auto",a[a.always=3]="always",_;var a})();class d{static setMediumConservatism(t){t.gfLow=d.gfLow,t.gfHigh=d.gfHigh}static useRecreational(t){d.useGeneralRecommended(t),t.ascentSpeed50perc=d.ascentSpeed50perc,t.ascentSpeed50percTo6m=d.ascentSpeed50perc,t.ascentSpeed6m=d.ascentSpeed50perc,t.lastStopDepth=d.lastStopDepthRecre}static useRecommended(t){d.useGeneralRecommended(t),t.ascentSpeed50perc=d.ascentSpeed50perc,t.ascentSpeed50percTo6m=d.ascentSpeed50percTo6m,t.ascentSpeed6m=d.ascentSpeed6m,t.lastStopDepth=d.lastStopDepth}static useGeneralRecommended(t){t.safetyStop=d.safetyStopRecre,t.roundStopsToMinutes=d.roundStopsToMinutes,t.gasSwitchDuration=d.gasSwitchDuration,t.descentSpeed=d.descentSpeed,t.oxygenNarcotic=d.oxygenNarcotic,t.maxEND=d.maxEND}}d.altitude=0,d.saltWater=I.salt,d.roundStopsToMinutes=!1,d.gasSwitchDuration=2,d.problemSolvingDuration=1,d.lastStopDepth=3,d.lastStopDepthRecre=5,d.safetyStopRecre=_.auto,d.decoStopDistance=3,d.minimumAutoStopDepth=10,d.addSafetyStop=!0,d.maxEND=30,d.oxygenNarcotic=!0,d.ascentSpeed6m=3,d.ascentSpeed50percTo6m=6,d.ascentSpeed50perc=9,d.descentSpeed=18,d.gfLow=.4,d.gfHigh=.85,d.maxPpO2=1.4,d.maxDecoPpO2=1.6;class nt{constructor(t=d.gfLow,e=d.gfHigh,s=d.maxPpO2,r=d.maxDecoPpO2,n=d.saltWater){this.gfLow=t,this.gfHigh=e,this.maxPpO2=s,this.maxDecoPpO2=r,this.salinity=n,this.altitude=d.altitude,this.roundStopsToMinutes=d.roundStopsToMinutes,this.gasSwitchDuration=d.gasSwitchDuration,this.safetyStop=d.safetyStopRecre,this.lastStopDepth=d.lastStopDepth,this.decoStopDistance=d.decoStopDistance,this.minimumAutoStopDepth=d.minimumAutoStopDepth,this.maxEND=d.maxEND,this.oxygenNarcotic=!0,this.ascentSpeed6m=d.ascentSpeed6m,this.ascentSpeed50percTo6m=d.ascentSpeed50percTo6m,this.ascentSpeed50perc=d.ascentSpeed50perc,this.descentSpeed=d.descentSpeed,this.problemSolvingDuration=d.problemSolvingDuration,this.gfLow=t||d.gfLow,this.gfHigh=e||d.gfHigh,this.maxPpO2=s||d.maxPpO2,this.maxDecoPpO2=r||d.maxDecoPpO2,this.salinity=n||d.saltWater}loadFrom(t){this.gfLow=t.gfLow||this.gfLow,this.gfHigh=t.gfHigh||this.gfHigh,this.maxPpO2=t.maxPpO2||this.maxPpO2,this.maxDecoPpO2=t.maxDecoPpO2||this.maxDecoPpO2,this.oxygenNarcotic=t.oxygenNarcotic,this.salinity=t.salinity||this.salinity,this.altitude=t.altitude||0===t.altitude?t.altitude:this.altitude,this.roundStopsToMinutes=t.roundStopsToMinutes||this.roundStopsToMinutes,this.gasSwitchDuration=t.gasSwitchDuration||this.gasSwitchDuration,this.problemSolvingDuration=t.problemSolvingDuration||this.problemSolvingDuration,this.lastStopDepth=t.lastStopDepth||this.lastStopDepth,this.decoStopDistance=t.decoStopDistance||this.decoStopDistance,this.minimumAutoStopDepth=t.minimumAutoStopDepth||this.minimumAutoStopDepth,this.safetyStop=t.safetyStop||this.safetyStop,this.maxEND=t.maxEND||this.maxEND,this.ascentSpeed6m=t.ascentSpeed6m||this.ascentSpeed6m,this.ascentSpeed50percTo6m=t.ascentSpeed50percTo6m||this.ascentSpeed50percTo6m,this.ascentSpeed50perc=t.ascentSpeed50perc||this.ascentSpeed50perc,this.descentSpeed=t.descentSpeed||this.descentSpeed}}class it{constructor(t,e){this.depthConverter=t,this.options=e}toDecoStop(t){const e=this.depthConverter.fromBar(t);return this.roundToDeco(e)}nextStop(t){if(t<=this.options.lastStopDepth)return 0;const e=Math.floor(t/this.options.decoStopDistance)*this.options.decoStopDistance;if(e!==t)return e;const s=t-this.options.decoStopDistance;return s<=this.options.lastStopDepth?this.options.lastStopDepth:s}addSafetyStop(t,e){return(this.options.safetyStop===_.always||this.options.safetyStop===_.auto&&e>this.options.minimumAutoStopDepth)&&t===this.options.lastStopDepth}roundToDeco(t){return Math.round(t/this.options.decoStopDistance)*this.options.decoStopDistance}}class tt{constructor(t,e,s,r){this.gases=t,this.segments=e,this.options=s,this.depthConverter=r,this.ceilings=[],this.runTime=0,this.tissues=new et(r.surfacePressure),this.gradients=new rt(r,s,this.tissues);const n=e.last();this.currentGas=n.gas,this.bestGasOptions={currentDepth:this.currentDepth,maxDecoPpO2:this.options.maxDecoPpO2,oxygenNarcotic:this.options.oxygenNarcotic,maxEndPressure:this.depthConverter.toBar(this.options.maxEND),currentGas:this.currentGas},this.speeds=new J(this.options),this.levels=new it(r,s)}get ascentSpeed(){return this.speeds.ascent(this.currentDepth)}get currentDepth(){return this.segments.currentDepth}get ambientPressure(){return this.depthConverter.toBar(this.currentDepth)}get addSafetyStop(){return this.levels.addSafetyStop(this.currentDepth,this.segments.maxDepth)}get decoStopDuration(){return this.options.roundStopsToMinutes?S.oneMinute:S.oneSecond}markAverageDepth(){this.speeds.markAverageDepth(this.segments)}addCeiling(){const t=this.ceiling(),e=new w(this.runTime,t);this.ceilings.push(e)}ceiling(){return this.gradients.ceiling()}bestDecoGas(){return this.bestGasOptions.currentDepth=this.currentDepth,this.bestGasOptions.currentGas=this.currentGas,this.gases.bestGas(this.levels,this.depthConverter,this.bestGasOptions)}nextStop(t){return this.levels.nextStop(t)}}class Q{noDecoLimit(t,e,s){const r=new O;r.add(e);const n=new b,i=this.duration(t,s.descentSpeed);return n.add(0,t,e,i),this.noDecoLimitMultiLevel(n,r,s)}noDecoLimitMultiLevel(t,e,s){const r=new U(s).create(),n=new tt(e,t,s,r);return this.swimNoDecoLimit(t,e,n,s)}calculateDecompression(t,e,s){const r=new U(t).create(),n=s.copy(),i=this.validate(n,e,t,r);if(i.length>0){const v=n.mergeFlat(s.length);return T.fromErrors(v,i)}const o=new tt(e,n,t,r);this.swimPlan(o),o.markAverageDepth();let h=o.nextStop(o.currentDepth);for(;h>=0&&0!==n.last().endDepth;){this.tryGasSwitch(o);let v=0;for(;h<o.ceiling()&&v<S.oneDay;){const V=o.decoStopDuration,Z=o.segments.add(o.currentDepth,o.currentDepth,o.currentGas,V);this.swim(o,Z),v+=V}if(o.addSafetyStop){const Z=o.segments.add(o.currentDepth,o.currentDepth,o.currentGas,3*S.oneMinute);this.swim(o,Z)}const H=this.duration(o.currentDepth-h,o.ascentSpeed),W=o.segments.add(o.currentDepth,h,o.currentGas,H);this.swim(o,W),h=o.nextStop(h)}const f=n.mergeFlat(s.length);return T.fromProfile(f,o.ceilings)}validate(t,e,s,r){const n=K.validate(t,e);if(n.length>0)return n;const i=class A{static validate(t,e,s){const r=[];if(!t.hasBottomGas){const n=u.createError("At least one bottom gas has to be defined.");return r.push(n),r}return r}}.validate(e,s,r.surfacePressure);return i.length>0?i:[]}tryGasSwitch(t){const e=t.bestDecoGas();if(!e||t.currentGas.compositionEquals(e))return;t.currentGas=e;const r=t.segments.add(t.currentDepth,t.currentDepth,t.currentGas,t.options.gasSwitchDuration*S.oneMinute);this.swim(t,r)}duration(t,e){return t/S.toMinutes(e)}swimPlan(t){t.addCeiling(),t.segments.withAll(e=>{this.swim(t,e)})}swim(t,e){let s=e.startDepth;const r=S.oneSecond;for(let n=0;n<e.duration;n+=r){const i=B.depthAt(s,e.speed,r),o=new B(s,i,e.gas,r);this.swimPart(t,o),s=o.endDepth}}swimPart(t,e){const s=this.toLoadSegment(t.depthConverter,e);t.tissues.load(s,e.gas),t.runTime+=e.duration,t.addCeiling()}swimNoDecoLimit(t,e,s,r){if(this.validate(t,e,r,s.depthConverter).length>0)return 0;this.swimPlan(s);const i=this.currentNdl(s.ceilings);return i!==Number.POSITIVE_INFINITY?i:this.predictNoDecoLimit(t,s)}predictNoDecoLimit(t,e){const s=t.last(),r=s.endDepth,n=new B(r,r,s.gas,S.oneMinute),i=this.toLoadSegment(e.depthConverter,n);let o=1;for(;e.ceiling()<=0&&o>0;)o=e.tissues.load(i,s.gas),e.runTime+=S.oneMinute;return 0===o||0===r?Number.POSITIVE_INFINITY:this.floorNdl(e.runTime)}floorNdl(t){let e=S.toMinutes(t);return e=g.floor(e),e-1}currentNdl(t){for(let e=0;e<t.length;e+=S.oneMinute){const s=t[e];if(s.notAtSurface)return this.floorNdl(s.time)}return Number.POSITIVE_INFINITY}toLoadSegment(t,e){const s=t.toBar(e.speed)-t.surfacePressure;return{startPressure:t.toBar(e.startDepth),duration:e.duration,speed:s}}}class L{static haveReserve(t){for(let e=0;e<t.length;e++)if(!t[e].hasReserve)return!1;return!0}static resetConsumption(t){t.forEach(e=>{e.consumed=0,e.reserve=0})}static removeTank(t,e){const s=t.filter(r=>r!==e);return L.renumberIds(s),s}static renumberIds(t){for(let e=0;e<t.length;e++)t[e].id=e+1}}class q{constructor(t,e,s){this.size=t,this.startPressure=e,this.id=0,this.consumed=0,this.reserve=0,this._gas=l.air.copy(),this.o2=s}get gas(){return this._gas}get o2(){const t=100*this.gas.fO2;return this.isInAirRange(t)?g.round(t):g.roundTwoDecimals(t)}get he(){return g.roundTwoDecimals(100*this.gas.fHe)}get volume(){return this.size*this.startPressure}get name(){return l.nameFor(this._gas.fO2,this._gas.fHe)}get endPressure(){const t=this.startPressure-this.consumed;return t>0?t:0}get percentsRemaining(){return this.endPressure/this.startPressure*100}get percentsReserve(){const t=this.reserve/this.startPressure*100;return t>100?100:t}get hasReserve(){return this.endPressure>=this.reserve}set o2(t){this.isInAirRange(t)?this.gas.fO2=l.o2InAir:this._gas.fO2=t/100}set he(t){this.gas.fHe=t/100}static createDefault(){return new q(15,200,100*l.o2InAir)}assignStandardGas(t){const e=l.byName(t);!e||(this._gas.fO2=e.fO2,this._gas.fHe=e.fHe)}loadFrom(t){this.size=t.size,this.startPressure=t.startPressure,this.consumed=t.consumed,this.reserve=t.reserve,this.gas.fO2=t._gas.fO2,this.gas.fHe=t._gas.fHe}isInAirRange(t){return 20.9<=t&&t<=21&&0===this.gas.fHe}}class z{constructor(t,e,s,r){this.duration=t,this.startTime=0,this.endTime=0,this.averageDepth=0,this._startDepth=0,this._endDepth=0,this.endTime=g.roundTwoDecimals(t),this._endDepth=e,this._startDepth=s,this.averageDepth=r}get startDepth(){return this._startDepth}get endDepth(){return this._endDepth}static fromSegment(t){return new z(t.duration,t.endDepth,t.startDepth,t.averageDepth)}}let at=(()=>{class a{constructor(e){this.depthConverter=e}static calculateDecompression(e,s,r){const n=O.fromTanks(s),i=new Q,o=e.copy();return i.calculateDecompression(r,n,o)}consumeFromTanks(e,s,r,n){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");const i=this.emergencyAscent(e,s,r);this.consumeFromTanks2(e,i,s,r,n)}consumeFromTanks2(e,s,r,n,i){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");L.resetConsumption(n);const o=this.consumeByTanks(e,i.rmv);this.consumeByGases(e,n,i.rmv,o),this.updateReserve(s,n,i.stressRmv)}emergencyAscent(e,s,r){const i=b.fromCollection(e).deepestPart(),o=b.fromCollection(i),h=O.fromTanks(r),M=(new Q).calculateDecompression(s,h,o).segments,H=M.slice(i.length,M.length);return this.addSolvingSegment(H,s.problemSolvingDuration),H}calculateMaxBottomTime(e,s,r,n){const i=this.createTestProfile(e),o=i.last(),h=this.findRightUpperInterval(i,o,s,r,n),f=this.findMaximalAddedDuration(i,o,s,r,n,h);if(0===f)return 0;const v=S.toMinutes(e.duration+f);return g.floor(v)}findRightUpperInterval(e,s,r,n,i){const o=40*S.oneMinute;for(this.consumeFromProfile(e,r,n,i);L.haveReserve(r);)s.duration+=o,this.consumeFromProfile(e,r,n,i);let h=s.duration-o;return h=h<0?0:h,{left:h,right:s.duration}}findMaximalAddedDuration(e,s,r,n,i,o){for(;o.right-o.left>S.oneSecond;){const h=o.left+(o.right-o.left)/2;s.duration=h,this.consumeFromProfile(e,r,n,i),L.haveReserve(r)?o.left=h:o.right=h}return o.left}consumeFromProfile(e,s,r,n){const i=a.calculateDecompression(e,s,n);this.consumeFromTanks(i.segments,n,s,r)}createTestProfile(e){const s=e.copy(),r=e.last();return s.addFlat(r.endDepth,r.gas,0),s}updateReserve(e,s,r){const n=this.toBeConsumed(e,r,i=>!0);for(let i=0;i<=s.length-1;i++){const o=s[i],h=o.gas.contentCode();let f=n.get(h)||0;f=this.addReserveToTank(o,f),n.set(h,f)}s[0].reserve<a.minimumRockBottom&&(s[0].reserve=a.minimumRockBottom)}addReserveToTank(e,s){const r=g.ceil(s/e.size),n=r+e.reserve>e.startPressure?e.startPressure-e.reserve:r;return e.reserve+=n,this.extractRemaining(s,n,e.size)}addSolvingSegment(e,s){if(0===e.length)return;const n=e[0].startDepth,i=new B(n,n,e[0].gas,s*S.oneMinute);e.unshift(i)}consumeByGases(e,s,r,n){const i=this.toBeConsumedYet(e,r,n,o=>!o.tank);for(let o=s.length-1;o>=0;o--){const h=s[o],f=h.gas.contentCode();let v=i.get(f)||0;v=this.consumeFromTank(h,v),i.set(f,v)}}consumeByTanks(e,s){const r=new Map,n=S.toMinutes(s);return e.forEach(i=>{if(i.tank){const o=i.tank,h=i.gas.contentCode(),f=z.fromSegment(i),v=this.consumedBySegment(f,n),M=this.consumeFromTank(o,v);let H=r.get(h)||0;H+=M,r.set(h,H)}}),r}consumeFromTank(e,s){const r=g.ceil(s/e.size),n=r>e.endPressure?e.endPressure:r;return e.consumed+=n,this.extractRemaining(s,n,e.size)}extractRemaining(e,s,r){return(e-=s*r)<0?0:e}toBeConsumed(e,s,r){return this.toBeConsumedYet(e,s,new Map,r)}toBeConsumedYet(e,s,r,n){const i=S.toMinutes(s);for(let o=0;o<e.length;o++){const h=e[o];if(n(h)){const v=h.gas.contentCode(),M=z.fromSegment(h),H=this.consumedBySegment(M,i);let W=r.get(v)||0;W+=H,r.set(v,W)}}return r}consumedBySegment(e,s){const r=this.depthConverter.toBar(e.averageDepth);return e.duration*r*s}}return a.minimumRockBottom=30,a})();class ot{constructor(t){this.depthConverter=t,this.minimumPpO2=.5}calculateForProfile(t){let e=0;return t.forEach(s=>{e+=this.calculate(s.gas.fO2,s.startDepth,s.endDepth,s.duration)}),e}calculate(t,e,s,r){const o=t*this.depthConverter.toBar((e+s)/2);if(o<=this.minimumPpO2)return 0;const h=this.exponentByPpO2(o);return r*Math.exp(h)}exponentByPpO2(t){return t<=1.5?1.93873*t-11.7853:9.80829*t-23.6349}}let ct=(()=>{class a{constructor(e=a.defaultSac,s=d.maxPpO2){this.rmv=e,this.maxPpO2=s,this.maxDecoPpO2=d.maxDecoPpO2}get stressRmv(){return 3*this.rmv}static gasSac(e,s){return e/s}gasSac(e){return a.gasSac(this.rmv,e.size)}loadFrom(e){this.rmv=e.rmv,this.maxPpO2=e.maxPpO2,this.maxDecoPpO2=e.maxDecoPpO2}}return a.defaultSac=20,a})(),ht=(()=>{class a{constructor(e){this.depthConverter=e,this.minPressure=.5}calculateForProfile(e){let s=0;return e.forEach(r=>{s+=this.calculate(r.duration,r.gas.fO2,r.startDepth,r.endDepth)}),s}calculate(e,s,r,n){let i=S.toMinutes(e),f=this.depthConverter.toBar(r)*s,v=this.depthConverter.toBar(n)*s;if(f<=this.minPressure&&v<=this.minPressure)return 0;f<=this.minPressure?(i=i*(v-this.minPressure)/(v-f),f=.501):v<=this.minPressure&&(i=i*(f-this.minPressure)/(f-v),v=.501);const M=f+v-1;return Math.pow(M,5/6)*(1-5*Math.pow(v-f,2)/216/Math.pow(M,2))*i}}return a.dailyLimit=300,a})();class ut{constructor(t,e){this.startDepth=t,this.endDepth=e}get minDepth(){return Math.min(this.startDepth,this.endDepth)}get maxDepth(){return Math.max(this.startDepth,this.endDepth)}get isDescent(){return this.startDepth<this.endDepth}get isFlat(){return this.startDepth===this.endDepth}get isAscent(){return this.startDepth>this.endDepth}}class dt{constructor(t,e,s,r){this.startAscentIndex=t,this.profile=e,this.depthConverter=s,this.options=r,this.events=new D,this.elapsed=0,this.index=0,this.fixedMnd=!0,this._mndBars=0,this.speeds=new J(r);const n=b.fromCollection(e);this.speeds.markAverageDepth(n),this._mndBars=s.toBar(r.maxEND)}get previous(){return this.index>0?this.profile[this.index-1]:null}get isBeforeDecoAscent(){return this.index<this.startAscentIndex}get maxPpo(){return this.isBeforeDecoAscent?this.options.maxPpO2:this.options.maxDecoPpO2}get current(){return this.profile[this.index]}get switchingGas(){return!!this.previous&&!this.current.gas.compositionEquals(this.previous.gas)}get switchingTank(){return!!this.previous&&!!this.previous.tank&&!!this.current.tank&&this.previous.tank!==this.current.tank}get maxMnd(){return this._mndBars}gasEnd(t){return this.current.gas.end(t,this.options.oxygenNarcotic)}}class Y{static fromProfile(t,e,s,r){const n=new U(r).create(),i=new dt(t,e,n,r),o=new pt(i.events);for(i.index=0;i.index<e.length;i.index++){const h=this.toPressureSegment(i.current,n);this.addHighPpO2(i,h),this.addLowPpO2(i,h),this.addGasSwitch(i),this.addUserTankSwitch(i),this.addHighDescentSpeed(i),this.addHighAscentSpeed(i),this.addSwitchHighN2(i),this.addMndExceeded(i,h),o.assignSegment(i.current),Y.addBrokenCeiling(o,s,i.current),i.elapsed+=i.current.duration}return i.events}static addHighAscentSpeed(t){const e=t.current;let s=S.toSeconds(e.speed);if(s=g.roundTwoDecimals(s),-s>t.speeds.ascent(e.startDepth)){const r=u.createHighAscentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addHighDescentSpeed(t){const e=t.current;if(S.toSeconds(e.speed)>t.options.descentSpeed){const r=u.createHighDescentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addGasSwitch(t){if(t.switchingGas){const e=t.current,s=u.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static addUserTankSwitch(t){if(t.switchingTank){const e=t.current,s=u.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static toPressureSegment(t,e){const s=e.toBar(t.startDepth),r=e.toBar(t.endDepth);return new ut(s,r)}static addHighPpO2(t,e){if(e.isDescent||t.isBeforeDecoAscent&&t.switchingGas){const s=t.current.gas.mod(t.maxPpo);if(e.maxDepth>s){const r=t.depthConverter.fromBar(s),n=u.createHighPpO2(t.elapsed,r);t.events.add(n)}}}static addLowPpO2(t,e){const s=t.current.gas.ceiling(t.depthConverter.surfacePressure);if(e.minDepth<s&&t.switchingGas||e.startDepth>s&&s>e.endDepth&&e.isAscent||0===t.current.startDepth&&e.startDepth<s&&e.isDescent){const n=t.depthConverter.fromBar(s),i=u.createLowPpO2(t.elapsed,n);t.events.add(i)}}static addBrokenCeiling(t,e,s){for(;t.lastCeilingIndex<t.currentSegmentEndTime&&t.lastCeilingIndex<e.length-1;){const r=e[t.lastCeilingIndex];t.lastCeilingIndex++;const n=t.belowCeiling(r,s);if(!n&&t.fixedBrokenCeiling){const i=u.createBrokenCeiling(r.time,r.depth);t.events.add(i),t.fixedBrokenCeiling=!1;break}if(n&&!t.fixedBrokenCeiling&&(t.fixedBrokenCeiling=!0),r.time>t.currentSegmentEndTime)break}}static addSwitchHighN2(t){const e=t.current,s=t.previous;if(t.switchingGas&&s){const r=e.gas.fN2-s.gas.fN2,n=e.gas.fHe-s.gas.fHe;if(s.gas.fHe>0&&5*r>-n){const i=u.createSwitchToHigherN2(t.elapsed,e.startDepth,e.gas);t.events.add(i)}}}static addMndExceeded(t,e){const s=t.current,r=t.gasEnd(e.startDepth);t.maxMnd<r&&t.fixedMnd&&this.addMndEvent(t,t.elapsed,s.startDepth);const n=t.gasEnd(e.endDepth);t.maxMnd<n&&t.fixedMnd&&this.addMndEvent(t,t.elapsed+s.duration,s.endDepth),t.fixedMnd=n<=t.maxMnd}static addMndEvent(t,e,s){const n=u.createMaxEndExceeded(e,s,t.current.gas);t.events.add(n),t.fixedMnd=!0}}class pt{constructor(t){this.events=t,this.lastCeilingIndex=0,this.currentSegmentStartTime=0,this.currentSegmentEndTime=0,this.fixedBrokenCeiling=!0}assignSegment(t){this.currentSegmentStartTime=this.currentSegmentEndTime,this.currentSegmentEndTime=this.currentSegmentStartTime+t.duration}belowCeiling(t,e){return e.depthAt(t.time-this.currentSegmentStartTime)>=t.depth}}}}]);