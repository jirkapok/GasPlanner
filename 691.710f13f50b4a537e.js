"use strict";(self.webpackChunkplanner=self.webpackChunkplanner||[]).push([[691],{211:(Q,L,A)=>{A.d(L,{e:()=>w});var m=A(822);class w{static toTanks(c){const h=[];return c.forEach(l=>{const f=new m.VQ(l.size,l.startPressure,0);f.id=l.id,f.gas.fO2=l.gas.fO2,f.gas.fHe=l.gas.fHe,f.consumed=l.consumed,f.reserve=l.reserve,h.push(f)}),m.bz.renumberIds(h),h}static fromTanks(c){const h=[];return c.forEach(l=>{h.push({id:l.id,size:l.size,startPressure:l.startPressure,consumed:l.consumed,reserve:l.reserve,gas:{fO2:l.gas.fO2,fHe:l.gas.fHe}})}),h}static toSegments(c,h){const l=[];for(let f=0;f<c.length;f++){const g=c[f],T=m.Gv.air.copy();T.fO2=g.gas.fO2,T.fHe=g.gas.fHe;const C=new m.XX(g.startDepth,g.endDepth,T,g.duration);g.tankId>0&&g.tankId<=h.length&&(C.tank=h[g.tankId-1]),l.push(C)}return l}static fromSegments(c){const h=[];return c.forEach(l=>{h.push({startDepth:l.startDepth,endDepth:l.endDepth,duration:l.duration,tankId:l.tank?l.tank.id:0,gas:{fO2:l.gas.fO2,fHe:l.gas.fHe}})}),h}static toProfile(c,h){const l=w.toSegments(c.segments,h);return m.Z1.fromProfile(l,c.ceilings)}static fromProfile(c){return{segments:w.fromSegments(c.segments),ceilings:c.ceilings,errors:w.fromEvents(c.errors)}}static toEvents(c){const h=new m.zW;return c.forEach(l=>{var f,g;const T=new m.ju(l.timeStamp,l.depth,l.type,l.message);l.gas&&(T.gas=new m.RP(null===(f=l.gas)||void 0===f?void 0:f.fO2,null===(g=l.gas)||void 0===g?void 0:g.fHe)),h.add(T)}),h}static fromEvents(c){const h=[];return c.forEach(l=>{const f={timeStamp:l.timeStamp,depth:l.depth,type:l.type,message:l.message};l.gas&&(f.gas={fO2:l.gas.fO2,fHe:l.gas.fHe}),h.push(f)}),h}static fromDiver(c){return{rmv:c.rmv,maxPpO2:c.maxPpO2,maxDecoPpO2:c.maxDecoPpO2}}static toDiver(c){const h=new m.rr(c.rmv,c.maxPpO2);return h.maxDecoPpO2=c.maxDecoPpO2,h}static fromOptions(c){return{gfLow:c.gfLow,gfHigh:c.gfHigh,maxPpO2:c.maxPpO2,maxDecoPpO2:c.maxDecoPpO2,salinity:c.salinity,altitude:c.altitude,roundStopsToMinutes:c.roundStopsToMinutes,gasSwitchDuration:c.gasSwitchDuration,safetyStop:c.safetyStop,lastStopDepth:c.lastStopDepth,decoStopDistance:c.decoStopDistance,minimumAutoStopDepth:c.minimumAutoStopDepth,maxEND:c.maxEND,oxygenNarcotic:c.oxygenNarcotic,ascentSpeed6m:c.ascentSpeed6m,ascentSpeed50percTo6m:c.ascentSpeed50percTo6m,ascentSpeed50perc:c.ascentSpeed50perc,descentSpeed:c.descentSpeed,problemSolvingDuration:c.problemSolvingDuration}}static toOptions(c){const h=new m.Ei(c.gfLow,c.gfHigh,c.maxPpO2,c.maxDecoPpO2,c.salinity);return h.altitude=c.altitude,h.roundStopsToMinutes=c.roundStopsToMinutes,h.gasSwitchDuration=c.gasSwitchDuration,h.safetyStop=c.safetyStop,h.lastStopDepth=c.lastStopDepth,h.decoStopDistance=c.decoStopDistance,h.minimumAutoStopDepth=c.minimumAutoStopDepth,h.maxEND=c.maxEND,h.oxygenNarcotic=c.oxygenNarcotic,h.ascentSpeed6m=c.ascentSpeed6m,h.ascentSpeed50percTo6m=c.ascentSpeed50percTo6m,h.ascentSpeed50perc=c.ascentSpeed50perc,h.descentSpeed=c.descentSpeed,h.problemSolvingDuration=c.problemSolvingDuration,h}}},691:(Q,L,A)=>{A.d(L,{P:()=>M});var m=A(822),w=A(211);class M{static calculateDecompression(h){const l=w.e.toTanks(h.tanks),f=w.e.toSegments(h.plan,l),g=m.wC.fromCollection(f),T=m.Vw.fromTanks(l),C=new m.dD,P=w.e.toOptions(h.options),S=C.calculateDecompression(P,T,g),p=w.e.fromProfile(S),R=m.uv.fromProfile(g.startAscentIndex,S.segments,S.ceilings,P);return{profile:p,events:w.e.fromEvents(R.items)}}static noDecoTime(h){const l=w.e.toTanks(h.tanks),f=m.Vw.fromTanks(l),g=w.e.toSegments(h.plan,l),T=m.wC.fromCollection(g),C=new m.dD,P=w.e.toOptions(h.options);return C.noDecoLimitMultiLevel(T,f,P)}static calculateConsumption(h){const l=new m.FQ(h.options).create(),f=new m.Cb(l),g=w.e.toTanks(h.tanks),T=w.e.toSegments(h.profile,g),C=w.e.toSegments(h.plan,g),P=m.wC.fromCollection(C),S=new m.rr(h.diver.rmv,h.options.maxPpO2),p=w.e.toOptions(h.options),R=f.calculateMaxBottomTime(P,g,S,p),y=f.emergencyAscent(T,p,g);let G=m.wC.duration(y);return G=m.qp.toMinutes(G),f.consumeFromTanks2(T,y,p,g,S),{maxTime:R,timeToSurface:G,tanks:w.e.fromTanks(g)}}}},822:(Q,L,A)=>{A.d(L,{Cb:()=>it,Ei:()=>rt,FQ:()=>U,Gv:()=>p,RP:()=>S,VQ:()=>Y,Vw:()=>C,XX:()=>b,Z1:()=>g,bz:()=>I,dD:()=>q,ju:()=>c,qp:()=>D,rr:()=>at,uv:()=>Z,wC:()=>O,zW:()=>l});class m{constructor(t,e,s,r,n,i){this._n2HalfTime=t,this._n2A=e,this._n2B=s,this._heHalfTime=r,this._heA=n,this._heB=i}get n2HalfTime(){return this._n2HalfTime}get n2A(){return this._n2A}get n2B(){return this._n2B}get heHalfTime(){return this._heHalfTime}get heA(){return this._heA}get heB(){return this._heB}}class w{}w.Buhlmann_ZHL16C=[new m(5,1.1696,.5578,1.88,1.6189,.477),new m(8,1,.6514,3.02,1.383,.5747),new m(12.5,.8618,.7222,4.72,1.1919,.6527),new m(18.5,.7562,.7826,6.99,1.0458,.7223),new m(27,.62,.8125,10.21,.922,.7582),new m(38.3,.5043,.8434,14.48,.8205,.7957),new m(54.3,.441,.8693,20.53,.7305,.8279),new m(77,.4,.891,29.11,.6502,.8553),new m(109,.375,.9092,41.2,.595,.8757),new m(146,.35,.9222,55.19,.5545,.8903),new m(187,.3295,.9319,70.69,.5333,.8997),new m(239,.3065,.9403,90.34,.5189,.9073),new m(305,.2835,.9477,115.29,.5181,.9122),new m(390,.261,.9544,147.42,.5176,.9171),new m(498,.248,.9602,188.24,.5172,.9217),new m(635,.2327,.9653,240.03,.5119,.9267)];var M=(()=>{return(a=M||(M={}))[a.noAction=0]="noAction",a[a.error=1]="error",a[a.gasSwitch=2]="gasSwitch",a[a.reachedNoDeco=3]="reachedNoDeco",a[a.lowPpO2=4]="lowPpO2",a[a.highPpO2=5]="highPpO2",a[a.highAscentSpeed=6]="highAscentSpeed",a[a.highDescentSpeed=7]="highDescentSpeed",a[a.brokenCeiling=8]="brokenCeiling",a[a.maxEndExceeded=9]="maxEndExceeded",a[a.switchToHigherN2=10]="switchToHigherN2",M;var a})();class c{constructor(t,e,s,r,n){this.timeStamp=t,this.depth=e,this.type=s,this.message=r,this.gas=n}}class h{static createGasSwitch(t,e,s){return{timeStamp:t,depth:e,type:M.gasSwitch,gas:s}}static createError(t){return{timeStamp:0,depth:0,type:M.error,message:t}}static createLowPpO2(t,e){return{timeStamp:t,depth:e,type:M.lowPpO2}}static createHighPpO2(t,e){return{timeStamp:t,depth:e,type:M.highPpO2}}static createHighAscentSpeed(t,e){return{timeStamp:t,depth:e,type:M.highAscentSpeed}}static createHighDescentSpeed(t,e){return{timeStamp:t,depth:e,type:M.highDescentSpeed}}static createBrokenCeiling(t,e){return{timeStamp:t,depth:e,type:M.brokenCeiling}}static createMaxEndExceeded(t,e,s){return{timeStamp:t,depth:e,type:M.maxEndExceeded,gas:s}}static createSwitchToHigherN2(t,e,s){return{timeStamp:t,depth:e,type:M.switchToHigherN2,gas:s}}}class l{constructor(){this.items=[]}add(t){this.items.push(t)}}class f{constructor(t,e){this.time=t,this.depth=e}get notAtSurface(){return this.depth>0}static isDecoDive(t){for(const e of t)if(e.notAtSurface)return!0;return!1}}class g{constructor(t,e,s){this.seg=t,this.ceil=e,this.err=s}get segments(){return this.seg}get ceilings(){return this.ceil}get errors(){return this.err}static fromErrors(t,e){return new g(t,[],e)}static fromProfile(t,e){return new g(t,e,[])}}class C{constructor(){this.bottomGases=[]}get all(){return this.bottomGases.slice()}get hasBottomGas(){return this.bottomGases.length>=1}static fromTanks(t){const e=new C;return t.forEach(s=>{e.add(s.gas)}),e}bestGas(t,e,s){const r=e.toBar(s.currentDepth);let n=s.currentGas;return this.bottomGases.forEach((i,o)=>{const u=this.bottomGases[o],v=u.mod(s.maxDecoPpO2),x=t.toDecoStop(v),H=u.end(r,s.oxygenNarcotic);s.currentDepth<=x&&H<=s.maxEndPressure&&(!n||n.fO2<u.fO2)&&(n=u)}),n}add(t){this.bottomGases.push(t)}isRegistered(t){return this.bottomGases.includes(t)}}class P{static partialPressure(t,e){return t*e}static mod(t,e){return t/e}static bestMix(t,e,s){const n=t/s.toBar(e);return n>1?1:n}static ead(t,e){return P.end(e,1-t)/p.nitroxInAir}static end(t,e,s=0){return t*this.narcoticIndex(s,e)}static mnd(t,e,s=0){return t/this.narcoticIndex(s,e)}static ceiling(t,e){const n=.18/t*e;return n<e?e:n}static narcoticIndex(t,e=0){return e+t}}class S{constructor(t,e){if(this._fO2=t,this._fHe=e,this.contentExceeds100percent())throw new Error("O2 + He can't exceed 100 %")}get fN2(){return 1-this._fO2-this._fHe}get fO2(){return this._fO2}get fHe(){return this._fHe}set fO2(t){this._fO2=t>1?1:t,this.contentExceeds100percent()&&(this._fHe=this.countRemaining(this._fO2))}set fHe(t){this._fHe=t>.99?.99:t,this.contentExceeds100percent()&&(this._fO2=this.countRemaining(this._fHe))}copy(){return new S(this._fO2,this._fHe)}mod(t){return P.mod(t,this._fO2)}end(t,e){return P.end(t,this.fN2,e?this._fO2:0)}mnd(t,e){return P.mnd(t,this.fN2,e?this._fO2:0)}ceiling(t){return P.ceiling(this._fO2,t)}compositionEquals(t){return!!t&&this._fO2===t._fO2&&this._fHe===t._fHe}contentCode(){return 1e4*Math.round(1e4*this._fO2)+Math.round(1e4*this._fHe)}contentExceeds100percent(){return this._fO2+this._fHe>1}countRemaining(t){return Math.round(1e5*(1-t))/1e5}}class p{static nitroxNames(){return p.allNames().slice(0,6)}static allNames(){return Array.from(p.map.keys())}static nameFor(t,e=0){const r=Math.round(100*t),n=Math.round(100*e);return r<=0?"":n<=0?r>=100?p.oxygenName:21===r?p.airName:"EAN"+r.toString():`${r>=21?"Helitrox":"Trimix"} ${r.toString()}/${n.toString()}`}static byName(t){if(p.map.has(t)){const s=p.map.get(t);return null!=s?s:null}const e=p.namesRegEx.exec(t);if(e){if(e[1]){const s=Number(e[1])/100;if(s>0)return new S(s,0)}if(e[2]&&e[3]){const s=Number(e[2])/100,r=Number(e[3])/100;if(s>0&&r>0)return new S(s,r)}}return null}}p.o2InAir=.209,p.nitroxInAir=1-p.o2InAir,p.oxygen=new S(1,0),p.ean50=new S(.5,0),p.ean38=new S(.38,0),p.ean36=new S(.36,0),p.ean32=new S(.32,0),p.trimix3525=new S(.35,.25),p.trimix2525=new S(.25,.25),p.air=new S(p.o2InAir,0),p.trimix2135=new S(.21,.35),p.trimix1845=new S(.18,.45),p.trimix1555=new S(.15,.55),p.trimix1260=new S(.12,.6),p.trimix1070=new S(.1,.7),p.airName="Air",p.oxygenName="Oxygen",p.namesRegEx=/[EAN](?<fO2>\d{2})|(?<fO2b>\d{2})\/(?<fHe>\d{2})/i,p.map=new Map([[p.airName,p.air],["EAN32",p.ean32],["EAN36",p.ean36],["EAN38",p.ean38],["EAN50",p.ean50],[p.oxygenName,p.oxygen],["Helitrox 35/25",p.trimix3525],["Helitrox 25/25",p.trimix2525],["Helitrox 21/35",p.trimix2135],["Trimix 18/45",p.trimix1845],["Trimix 15/55",p.trimix1555],["Trimix 12/60",p.trimix1260],["Trimix 10/70",p.trimix1070]]);class y extends m{constructor(t,e){super(t.n2HalfTime,t.n2A,t.n2B,t.heHalfTime,t.heA,t.heB),this._pN2=0,this._pHe=0,this._pTotal=0,this._a=0,this._b=0,this._pN2=P.partialPressure(e,.79)-.0627,this._pHe=0,this._pTotal=this.pN2+this.pHe}get pN2(){return this._pN2}get pHe(){return this._pHe}get pTotal(){return this._pTotal}get a(){return this._a}get b(){return this._b}ceiling(t){return(this.pTotal-this.a*t)/(t/this.b+1-t)}load(t,e){this._pN2=this.loadGas(t,e.fN2,this.pN2,this.n2HalfTime),this._pHe=this.loadGas(t,e.fHe,this.pHe,this.heHalfTime);const s=this.pTotal;return this._pTotal=this.pN2+this.pHe,this._a=(this.n2A*this.pN2+this.heA*this.pHe)/this.pTotal,this._b=(this.n2B*this.pN2+this.heB*this.pHe)/this.pTotal,this.pTotal-s}loadGas(t,e,s,r){return this.schreinerEquation(s,t.startPressure*e,t.duration,r,t.speed*e)}schreinerEquation(t,e,s,r,n){const o=.01155245301/r;return e+n*(s-1/o)-(e-t-n/o)*Math.exp(-o*s)}}class G{constructor(t){this.compartments=[];for(let e=0;e<w.Buhlmann_ZHL16C.length;e++){const r=new y(w.Buhlmann_ZHL16C[e],t);this.compartments.push(r)}}ceiling(t){let e=0;for(let s=0;s<this.compartments.length;s++){const r=this.compartments[s].ceiling(t);r>e&&(e=r)}return e}load(t,e){let s=0;for(let r=0;r<this.compartments.length;r++)s+=this.compartments[r].load(t,e);return s}}class D{static toSeconds(t){return t*D.oneMinute}static toMinutes(t){return t/D.oneMinute}static toDate(t){return new Date(1970,1,1,0,0,t,0)}static secondsFromDate(t){const e=new Date(t);let s=e.getSeconds();return s+=e.getMinutes()*D.oneMinute,s+=e.getHours()*Math.pow(D.oneMinute,2),s}}D.oneSecond=1,D.oneMinute=60,D.oneDay=1440*D.oneMinute;class K{static validate(t,e){const s=[];if(!t.any()){const r=h.createError("There needs to be at least one segment at depth.");s.push(r)}return t.withAll(r=>{K.validateRegisteredGas(s,e,r)}),s}static validateRegisteredGas(t,e,s){if(!e.isRegistered(s.gas)){const n=h.createError(`Segment ${s.startDepth}-${s.endDepth} has gas not registered in gases.`);t.push(n)}}}class b{constructor(t,e,s,r){this.startDepth=t,this.endDepth=e,this._gas=s,this.duration=r}static from(t){const e=new b(t.startDepth,t.endDepth,t._gas,t.duration);return e.tank=t.tank,e}static depthAt(t,e,s){return t+e*s}get gas(){return this._gas}get tank(){return this._tank}set tank(t){this._tank=t,t&&(this._gas=t.gas)}contentEquals(t){return this.speed===t.speed&&this._gas===t._gas}get speed(){return(this.endDepth-this.startDepth)/this.duration}get averageDepth(){return(this.startDepth+this.endDepth)/2}depthAt(t){return b.depthAt(this.startDepth,this.speed,t)}mergeFrom(t){this.duration+=t.duration,this.endDepth=t.endDepth}}class O{constructor(){this.segments=[],this._maxDepth=0}static from(t){return O.fromCollection(t.segments)}static fromCollection(t){const e=new O;return t.forEach(s=>{const r=b.from(s);e.segments.push(r),e.updateMaxDepth(r)}),e}static duration(t){let e=0;for(const s of t)e+=s.duration;return e}static averageDepth(t){if(t.length<=0)return 0;let e=0,s=0;return t.forEach(r=>{if(r.duration>0){const n=r.averageDepth*r.duration+s*e;s+=r.duration,e=n/s}}),e}get length(){return this.segments.length}get items(){return this.segments.slice()}get maxDepth(){return this._maxDepth}get currentDepth(){return this.any()?this.last().endDepth:0}get duration(){return O.duration(this.segments)}add(t,e,s,r){const n=new b(t,e,s,r);return this.segments.push(n),this.updateMaxDepth(n),n}addFlat(t,e,s){return this.add(t,t,e,s)}addChangeTo(t,e,s){return this.add(this.currentDepth,t,e,s)}mergeFlat(t=0){if(t<0)return this.segments;const e=[];for(let s=this.segments.length-1;s>t;s--){const r=this.segments[s-1],n=this.segments[s];r.contentEquals(n)&&(r.mergeFrom(n),e.push(n))}return this.segments=this.segments.filter(s=>!e.includes(s)),this.segments}remove(t){this.segments=this.segments.filter(e=>e!==t),this.fixStartDepths()}withAll(t){for(let e=0;e<this.segments.length;e++)t(this.segments[e])}any(){return 0!==this.segments.length}last(){return this.segments[this.segments.length-1]}copy(){return O.from(this)}fixStartDepths(){this.any()&&(this.segments[0].startDepth=0);for(let t=0;t<this.segments.length-1;t++){const s=this.segments[t+1];s.startDepth=this.segments[t].endDepth,this.updateMaxDepth(s)}}deepestPart(){for(let t=this.segments.length-1;t>=0;t--)if(this.segments[t].endDepth===this.maxDepth)return this.items.slice(0,t+1);return[]}get startAscentIndex(){return this.deepestPart().length}get startAscentTime(){const t=this.deepestPart();return O.duration(t)}updateMaxDepth(t){t.endDepth>this._maxDepth&&(this._maxDepth=t.endDepth)}}var E=(()=>{return(a=E||(E={}))[a.fresh=1]="fresh",a[a.brackish=2]="brackish",a[a.salt=3]="salt",E;var a})();let k=(()=>{class a{}return a.fresh=1e3,a.brackish=1020,a.salt=1030,a})(),j=(()=>{class a{}return a.standard=9.80665,a})(),F=(()=>{class a{static pascalToBar(e){return e/a.coefficient}static barToPascal(e){return e*a.coefficient}}return a.coefficient=1e5,a})(),et=(()=>{class a{static atAltitude(e){return F.barToPascal(this.standard)*Math.pow(288.15/(288.15+-.0065*e),.0289644*j.standard/-.05404308)}}return a.standard=1.01325,a})();class U{constructor(t){this.options=t}create(){switch(this.options.salinity){case E.salt:return N.forSaltWater(this.options.altitude);case E.brackish:return N.forBrackishWater(this.options.altitude);default:return N.forFreshWater(this.options.altitude)}}}class N{constructor(t,e){this.density=t,this._gravity=j.standard;const s=et.atAltitude(e);this._surfacePressure=F.pascalToBar(s)}get surfacePressure(){return this._surfacePressure}static forSaltWater(t=0){return new N(k.salt,t)}static forBrackishWater(t=0){return new N(k.brackish,t)}static forFreshWater(t=0){return new N(k.fresh,t)}static simple(){const t=new N(k.fresh,0);return t._surfacePressure=1,t._gravity=10,t}toBar(t){return F.pascalToBar(t*(this.density*this._gravity))+this._surfacePressure}fromBar(t){if(t<this._surfacePressure)throw new Error("Lower pressure than altitude isn`t convertible to depth.");const e=this.density*this._gravity;return F.barToPascal(t-this._surfacePressure)/e}}class st{constructor(t,e,s){this.depthConverter=t,this.options=e,this.tissues=s,this.lowestCeiling=0,this.lowestCeiling=this.depthConverter.surfacePressure+1}ceiling(){let t=this.tolerated();return t<this.depthConverter.surfacePressure&&(t=this.depthConverter.surfacePressure),this.depthConverter.fromBar(t)}toleratedTissues(t,e,s,r){const n=this.tissues.compartments;let i=0;for(let o=0;o<n.length;o++){const u=n[o];let v=i;(t/u.b+u.a-t)*s+t<(e/u.b+u.a-e)*r+e&&(v=(-u.a*u.b*(s*e-r*t)-(1-u.b)*(s-r)*e*t+u.b*(e-t)*u.pTotal)/(-u.a*u.b*(s-r)+(1-u.b)*(r*e-s*t)+u.b*(e-t))),v>=i&&(i=v)}return i}tolerated(){const t=this.options.gfLow,e=this.options.gfHigh,s=this.depthConverter.surfacePressure,r=this.tissues.ceiling(t);return r>this.lowestCeiling&&(this.lowestCeiling=r),this.toleratedTissues(s,this.lowestCeiling,e,t)}}let J=(()=>{class a{constructor(e){this.options=e,this.averageDepth=0}markAverageDepth(e){const s=e.deepestPart();this.averageDepth=O.averageDepth(s)}ascent(e){return e>a.sixMeters?e>this.averageDepth/2?this.options.ascentSpeed50perc:this.options.ascentSpeed50percTo6m:this.options.ascentSpeed6m}}return a.sixMeters=6,a})();var _=(()=>{return(a=_||(_={}))[a.never=1]="never",a[a.auto=2]="auto",a[a.always=3]="always",_;var a})();class d{static setMediumConservatism(t){t.gfLow=d.gfLow,t.gfHigh=d.gfHigh}static useRecreational(t){d.useGeneralRecommended(t),t.ascentSpeed50perc=d.ascentSpeed50perc,t.ascentSpeed50percTo6m=d.ascentSpeed50perc,t.ascentSpeed6m=d.ascentSpeed50perc,t.lastStopDepth=d.lastStopDepthRecre}static useRecommended(t){d.useGeneralRecommended(t),t.ascentSpeed50perc=d.ascentSpeed50perc,t.ascentSpeed50percTo6m=d.ascentSpeed50percTo6m,t.ascentSpeed6m=d.ascentSpeed6m,t.lastStopDepth=d.lastStopDepth}static useGeneralRecommended(t){t.safetyStop=d.safetyStopRecre,t.roundStopsToMinutes=d.roundStopsToMinutes,t.gasSwitchDuration=d.gasSwitchDuration,t.descentSpeed=d.descentSpeed,t.oxygenNarcotic=d.oxygenNarcotic,t.maxEND=d.maxEND}}d.altitude=0,d.saltWater=E.salt,d.roundStopsToMinutes=!1,d.gasSwitchDuration=2,d.problemSolvingDuration=1,d.lastStopDepth=3,d.lastStopDepthRecre=5,d.safetyStopRecre=_.auto,d.decoStopDistance=3,d.minimumAutoStopDepth=10,d.addSafetyStop=!0,d.maxEND=30,d.oxygenNarcotic=!0,d.ascentSpeed6m=3,d.ascentSpeed50percTo6m=6,d.ascentSpeed50perc=9,d.descentSpeed=18,d.gfLow=.4,d.gfHigh=.85,d.maxPpO2=1.4,d.maxDecoPpO2=1.6;class rt{constructor(t=d.gfLow,e=d.gfHigh,s=d.maxPpO2,r=d.maxDecoPpO2,n=d.saltWater){this.gfLow=t,this.gfHigh=e,this.maxPpO2=s,this.maxDecoPpO2=r,this.salinity=n,this.altitude=d.altitude,this.roundStopsToMinutes=d.roundStopsToMinutes,this.gasSwitchDuration=d.gasSwitchDuration,this.safetyStop=d.safetyStopRecre,this.lastStopDepth=d.lastStopDepth,this.decoStopDistance=d.decoStopDistance,this.minimumAutoStopDepth=d.minimumAutoStopDepth,this.maxEND=d.maxEND,this.oxygenNarcotic=!0,this.ascentSpeed6m=d.ascentSpeed6m,this.ascentSpeed50percTo6m=d.ascentSpeed50percTo6m,this.ascentSpeed50perc=d.ascentSpeed50perc,this.descentSpeed=d.descentSpeed,this.problemSolvingDuration=d.problemSolvingDuration,this.gfLow=t||d.gfLow,this.gfHigh=e||d.gfHigh,this.maxPpO2=s||d.maxPpO2,this.maxDecoPpO2=r||d.maxDecoPpO2,this.salinity=n||d.saltWater}loadFrom(t){this.gfLow=t.gfLow||this.gfLow,this.gfHigh=t.gfHigh||this.gfHigh,this.maxPpO2=t.maxPpO2||this.maxPpO2,this.maxDecoPpO2=t.maxDecoPpO2||this.maxDecoPpO2,this.salinity=t.salinity||this.salinity,this.altitude=t.altitude||this.altitude,this.roundStopsToMinutes=t.roundStopsToMinutes||this.roundStopsToMinutes,this.gasSwitchDuration=t.gasSwitchDuration||this.gasSwitchDuration,this.problemSolvingDuration=t.problemSolvingDuration||this.problemSolvingDuration,this.lastStopDepth=t.lastStopDepth||this.lastStopDepth,this.safetyStop=t.safetyStop||this.safetyStop,this.maxEND=t.maxEND||this.maxEND,this.ascentSpeed6m=t.ascentSpeed6m||this.ascentSpeed6m,this.ascentSpeed50percTo6m=t.ascentSpeed50percTo6m||this.ascentSpeed50percTo6m,this.ascentSpeed50perc=t.ascentSpeed50perc||this.ascentSpeed50perc,this.descentSpeed=t.descentSpeed||this.descentSpeed}}class nt{constructor(t,e){this.depthConverter=t,this.options=e}toDecoStop(t){const e=this.depthConverter.fromBar(t);return this.roundToDeco(e)}nextStop(t){if(t<=this.options.lastStopDepth)return 0;const e=Math.floor(t/this.options.decoStopDistance)*this.options.decoStopDistance;if(e!==t)return e;const s=t-this.options.decoStopDistance;return s<=this.options.lastStopDepth?this.options.lastStopDepth:s}addSafetyStop(t,e){return(this.options.safetyStop===_.always||this.options.safetyStop===_.auto&&e>this.options.minimumAutoStopDepth)&&t===this.options.lastStopDepth}roundToDeco(t){return Math.round(t/this.options.decoStopDistance)*this.options.decoStopDistance}}class tt{constructor(t,e,s,r){this.gases=t,this.segments=e,this.options=s,this.depthConverter=r,this.ceilings=[],this.runTime=0,this.tissues=new G(r.surfacePressure),this.gradients=new st(r,s,this.tissues);const n=e.last();this.currentGas=n.gas,this.bestGasOptions={currentDepth:this.currentDepth,maxDecoPpO2:this.options.maxDecoPpO2,oxygenNarcotic:this.options.oxygenNarcotic,maxEndPressure:this.depthConverter.toBar(this.options.maxEND),currentGas:this.currentGas},this.speeds=new J(this.options),this.levels=new nt(r,s)}get ascentSpeed(){return this.speeds.ascent(this.currentDepth)}get currentDepth(){return this.segments.currentDepth}get ambientPressure(){return this.depthConverter.toBar(this.currentDepth)}get addSafetyStop(){return this.levels.addSafetyStop(this.currentDepth,this.segments.maxDepth)}get decoStopDuration(){return this.options.roundStopsToMinutes?D.oneMinute:D.oneSecond}markAverageDepth(){this.speeds.markAverageDepth(this.segments)}addCeiling(){const t=this.ceiling(),e=new f(this.runTime,t);this.ceilings.push(e)}ceiling(){return this.gradients.ceiling()}bestDecoGas(){return this.bestGasOptions.currentDepth=this.currentDepth,this.bestGasOptions.currentGas=this.currentGas,this.gases.bestGas(this.levels,this.depthConverter,this.bestGasOptions)}nextStop(t){return this.levels.nextStop(t)}}class q{noDecoLimit(t,e,s){const r=new C;r.add(e);const n=new O,i=this.duration(t,s.descentSpeed);return n.add(0,t,e,i),this.noDecoLimitMultiLevel(n,r,s)}noDecoLimitMultiLevel(t,e,s){const r=new U(s).create(),n=new tt(e,t,s,r);return this.swimNoDecoLimit(t,e,n,s)}calculateDecompression(t,e,s){const r=new U(t).create(),n=s.copy(),i=this.validate(n,e,t,r);if(i.length>0){const x=n.mergeFlat(s.length);return g.fromErrors(x,i)}const o=new tt(e,n,t,r);this.swimPlan(o),o.markAverageDepth();let u=o.nextStop(o.currentDepth);for(;u>=0&&0!==n.last().endDepth;){this.tryGasSwitch(o);let x=0;for(;u<o.ceiling()&&x<D.oneDay;){const V=o.decoStopDuration,$=o.segments.add(o.currentDepth,o.currentDepth,o.currentGas,V);this.swim(o,$),x+=V}if(o.addSafetyStop){const $=o.segments.add(o.currentDepth,o.currentDepth,o.currentGas,3*D.oneMinute);this.swim(o,$)}const B=this.duration(o.currentDepth-u,o.ascentSpeed),W=o.segments.add(o.currentDepth,u,o.currentGas,B);this.swim(o,W),u=o.nextStop(u)}const v=n.mergeFlat(s.length);return g.fromProfile(v,o.ceilings)}validate(t,e,s,r){const n=K.validate(t,e);if(n.length>0)return n;const i=class T{static validate(t,e,s){const r=[];if(!t.hasBottomGas){const n=h.createError("At least one bottom gas has to be defined.");return r.push(n),r}return r}}.validate(e,s,r.surfacePressure);return i.length>0?i:[]}tryGasSwitch(t){const e=t.bestDecoGas();if(!e||t.currentGas.compositionEquals(e))return;t.currentGas=e;const r=t.segments.add(t.currentDepth,t.currentDepth,t.currentGas,t.options.gasSwitchDuration*D.oneMinute);this.swim(t,r)}duration(t,e){return t/D.toMinutes(e)}swimPlan(t){t.addCeiling(),t.segments.withAll(e=>{this.swim(t,e)})}swim(t,e){let s=e.startDepth;const r=D.oneSecond;for(let n=0;n<e.duration;n+=r){const i=b.depthAt(s,e.speed,r),o=new b(s,i,e.gas,r);this.swimPart(t,o),s=o.endDepth}}swimPart(t,e){const s=this.toLoadSegment(t.depthConverter,e);t.tissues.load(s,e.gas),t.runTime+=e.duration,t.addCeiling()}swimNoDecoLimit(t,e,s,r){if(this.validate(t,e,r,s.depthConverter).length>0)return 0;this.swimPlan(s);const i=this.currentNdl(s.ceilings);return i!==Number.POSITIVE_INFINITY?i:this.predictNoDecoLimit(t,s)}predictNoDecoLimit(t,e){const s=t.last(),r=s.endDepth,n=new b(r,r,s.gas,D.oneMinute),i=this.toLoadSegment(e.depthConverter,n);let o=1;for(;e.ceiling()<=0&&o>0;)o=e.tissues.load(i,s.gas),e.runTime+=D.oneMinute;return 0===o||0===r?Number.POSITIVE_INFINITY:this.floorNdl(e.runTime)}floorNdl(t){let e=D.toMinutes(t);return e=Math.floor(e),e-1}currentNdl(t){for(let e=0;e<t.length;e+=D.oneMinute){const s=t[e];if(s.notAtSurface)return this.floorNdl(s.time)}return Number.POSITIVE_INFINITY}toLoadSegment(t,e){const s=t.toBar(e.speed)-t.surfacePressure;return{startPressure:t.toBar(e.startDepth),duration:e.duration,speed:s}}}class I{static haveReserve(t){for(let e=0;e<t.length;e++)if(!t[e].hasReserve)return!1;return!0}static resetConsumption(t){t.forEach(e=>{e.consumed=0,e.reserve=0})}static removeTank(t,e){const s=t.filter(r=>r!==e);return I.renumberIds(s),s}static renumberIds(t){for(let e=0;e<t.length;e++)t[e].id=e+1}}class Y{constructor(t,e,s){this.size=t,this.startPressure=e,this.id=0,this.consumed=0,this.reserve=0,this._gas=p.air.copy(),this.o2=s}static createDefault(){return new Y(15,200,100*p.o2InAir)}get gas(){return this._gas}get o2(){const t=100*this._gas.fO2;return this.isInAirRange(t)?Math.round(100*this.gas.fO2):t}set o2(t){this.isInAirRange(t)?this.gas.fO2=p.o2InAir:this._gas.fO2=t/100}get he(){return 100*this.gas.fHe}set he(t){this.gas.fHe=t/100}get volume(){return this.size*this.startPressure}get name(){return p.nameFor(this._gas.fO2,this._gas.fHe)}assignStandardGas(t){const e=p.byName(t);!e||(this._gas.fO2=e.fO2,this._gas.fHe=e.fHe)}get endPressure(){const t=this.startPressure-this.consumed;return t>0?t:0}get percentsRemaining(){return this.endPressure/this.startPressure*100}get percentsReserve(){const t=this.reserve/this.startPressure*100;return t>100?100:t}get hasReserve(){return this.endPressure>=this.reserve}loadFrom(t){this.size=t.size,this.startPressure=t.startPressure,this.consumed=t.consumed,this.reserve=t.reserve,this.gas.fO2=t._gas.fO2,this.gas.fHe=t._gas.fHe}isInAirRange(t){return 20.9<=t&&t<=21&&0===this.gas.fHe}}class z{constructor(t,e,s,r){this.duration=t,this.startTime=0,this.endTime=0,this.averageDepth=0,this._startDepth=0,this._endDepth=0,this.endTime=Math.round(100*t)/100,this._endDepth=e,this._startDepth=s,this.averageDepth=r}get startDepth(){return this._startDepth}get endDepth(){return this._endDepth}static fromSegment(t){return new z(t.duration,t.endDepth,t.startDepth,t.averageDepth)}}let it=(()=>{class a{constructor(e){this.depthConverter=e}static calculateDecompression(e,s,r){const n=C.fromTanks(s),i=new q,o=e.copy();return i.calculateDecompression(r,n,o)}consumeFromTanks(e,s,r,n){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");const i=this.emergencyAscent(e,s,r);this.consumeFromTanks2(e,i,s,r,n)}consumeFromTanks2(e,s,r,n,i){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");I.resetConsumption(n);const o=this.consumeByTanks(e,i.rmv);this.consumeByGases(e,n,i.rmv,o),this.updateReserve(s,n,i.stressRmv)}emergencyAscent(e,s,r){const i=O.fromCollection(e).deepestPart(),o=O.fromCollection(i),u=C.fromTanks(r),H=(new q).calculateDecompression(s,u,o).segments,B=H.slice(i.length,H.length);return this.addSolvingSegment(B,s.problemSolvingDuration),B}calculateMaxBottomTime(e,s,r,n){const i=this.createTestProfile(e),o=i.last(),u=this.findRightUpperInterval(i,o,s,r,n),v=this.findMaximalAddedDuration(i,o,s,r,n,u);if(0===v)return 0;const x=D.toMinutes(e.duration+v);return Math.floor(x)}findRightUpperInterval(e,s,r,n,i){const o=40*D.oneMinute;for(this.consumeFromProfile(e,r,n,i);I.haveReserve(r);)s.duration+=o,this.consumeFromProfile(e,r,n,i);let u=s.duration-o;return u=u<0?0:u,{left:u,right:s.duration}}findMaximalAddedDuration(e,s,r,n,i,o){for(;o.right-o.left>D.oneSecond;){const u=o.left+(o.right-o.left)/2;s.duration=u,this.consumeFromProfile(e,r,n,i),I.haveReserve(r)?o.left=u:o.right=u}return o.left}consumeFromProfile(e,s,r,n){const i=a.calculateDecompression(e,s,n);this.consumeFromTanks(i.segments,n,s,r)}createTestProfile(e){const s=e.copy(),r=e.last();return s.addFlat(r.endDepth,r.gas,0),s}updateReserve(e,s,r){const n=this.toBeConsumed(e,r,i=>!0);for(let i=0;i<=s.length-1;i++){const o=s[i],u=o.gas.contentCode();let v=n.get(u)||0;v=this.addReserveToTank(o,v),n.set(u,v)}s[0].reserve<a.minimumRockBottom&&(s[0].reserve=a.minimumRockBottom)}addReserveToTank(e,s){const r=Math.ceil(s/e.size),n=r+e.reserve>e.startPressure?e.startPressure-e.reserve:r;return e.reserve+=n,this.extractRemaining(s,n,e.size)}addSolvingSegment(e,s){if(0===e.length)return;const n=e[0].startDepth,i=new b(n,n,e[0].gas,s*D.oneMinute);e.unshift(i)}consumeByGases(e,s,r,n){const i=this.toBeConsumedYet(e,r,n,o=>!o.tank);for(let o=s.length-1;o>=0;o--){const u=s[o],v=u.gas.contentCode();let x=i.get(v)||0;x=this.consumeFromTank(u,x),i.set(v,x)}}consumeByTanks(e,s){const r=new Map,n=D.toMinutes(s);return e.forEach(i=>{if(i.tank){const o=i.tank,u=i.gas.contentCode(),v=z.fromSegment(i),x=this.consumedBySegment(v,n),H=this.consumeFromTank(o,x);let B=r.get(u)||0;B+=H,r.set(u,B)}}),r}consumeFromTank(e,s){const r=Math.ceil(s/e.size),n=r>e.endPressure?e.endPressure:r;return e.consumed+=n,this.extractRemaining(s,n,e.size)}extractRemaining(e,s,r){return(e-=s*r)<0?0:e}toBeConsumed(e,s,r){return this.toBeConsumedYet(e,s,new Map,r)}toBeConsumedYet(e,s,r,n){const i=D.toMinutes(s);for(let o=0;o<e.length;o++){const u=e[o];if(n(u)){const x=u.gas.contentCode(),H=z.fromSegment(u),B=this.consumedBySegment(H,i);let W=r.get(x)||0;W+=B,r.set(x,W)}}return r}consumedBySegment(e,s){const r=this.depthConverter.toBar(e.averageDepth);return e.duration*r*s}}return a.minimumRockBottom=30,a})(),at=(()=>{class a{constructor(e=a.defaultSac,s=d.maxPpO2){this.rmv=e,this.maxPpO2=s,this.maxDecoPpO2=d.maxDecoPpO2}get stressRmv(){return 3*this.rmv}static gasSac(e,s){return e/s}gasSac(e){return a.gasSac(this.rmv,e.size)}loadFrom(e){this.rmv=e.rmv,this.maxPpO2=e.maxPpO2,this.maxDecoPpO2=e.maxDecoPpO2}}return a.defaultSac=20,a})();class ot{constructor(t,e){this.startDepth=t,this.endDepth=e}get minDepth(){return Math.min(this.startDepth,this.endDepth)}get maxDepth(){return Math.max(this.startDepth,this.endDepth)}get isDescent(){return this.startDepth<this.endDepth}get isFlat(){return this.startDepth===this.endDepth}get isAscent(){return this.startDepth>this.endDepth}}class ct{constructor(t,e,s,r){this.startAscentIndex=t,this.profile=e,this.depthConverter=s,this.options=r,this.events=new l,this.elapsed=0,this.index=0,this.fixedMnd=!0,this._mndBars=0,this.speeds=new J(r);const n=O.fromCollection(e);this.speeds.markAverageDepth(n),this._mndBars=s.toBar(r.maxEND)}get previous(){return this.index>0?this.profile[this.index-1]:null}get isBeforeDecoAscent(){return this.index<this.startAscentIndex}get maxPpo(){return this.isBeforeDecoAscent?this.options.maxPpO2:this.options.maxDecoPpO2}get current(){return this.profile[this.index]}get switchingGas(){return!!this.previous&&!this.current.gas.compositionEquals(this.previous.gas)}get switchingTank(){return!!this.previous&&!!this.previous.tank&&!!this.current.tank&&this.previous.tank!==this.current.tank}get maxMnd(){return this._mndBars}gasEnd(t){return this.current.gas.end(t,this.options.oxygenNarcotic)}}class Z{static fromProfile(t,e,s,r){const n=new U(r).create(),i=new ct(t,e,n,r),o=new ht(i.events);for(i.index=0;i.index<e.length;i.index++){const u=this.toPressureSegment(i.current,n);this.addHighPpO2(i,u),this.addLowPpO2(i,u),this.addGasSwitch(i),this.addUserTankSwitch(i),this.addHighDescentSpeed(i),this.addHighAscentSpeed(i),this.addSwitchHighN2(i),this.addMndExceeded(i,u),o.assignSegment(i.current),Z.addBrokenCeiling(o,s,i.current),i.elapsed+=i.current.duration}return i.events}static addHighAscentSpeed(t){const e=t.current;let s=D.toSeconds(e.speed);if(s=Math.round(100*s)/100,-s>t.speeds.ascent(e.startDepth)){const r=h.createHighAscentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addHighDescentSpeed(t){const e=t.current;if(D.toSeconds(e.speed)>t.options.descentSpeed){const r=h.createHighDescentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addGasSwitch(t){if(t.switchingGas){const e=t.current,s=h.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static addUserTankSwitch(t){if(t.switchingTank){const e=t.current,s=h.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static toPressureSegment(t,e){const s=e.toBar(t.startDepth),r=e.toBar(t.endDepth);return new ot(s,r)}static addHighPpO2(t,e){if(e.isDescent||t.isBeforeDecoAscent&&t.switchingGas){const s=t.current.gas.mod(t.maxPpo);if(e.maxDepth>s){const r=t.depthConverter.fromBar(s),n=h.createHighPpO2(t.elapsed,r);t.events.add(n)}}}static addLowPpO2(t,e){const s=t.current.gas.ceiling(t.depthConverter.surfacePressure);if(e.minDepth<s&&t.switchingGas||e.startDepth>s&&s>e.endDepth&&e.isAscent||0===t.current.startDepth&&e.startDepth<s&&e.isDescent){const n=t.depthConverter.fromBar(s),i=h.createLowPpO2(t.elapsed,n);t.events.add(i)}}static addBrokenCeiling(t,e,s){for(;t.lastCeilingIndex<t.currentSegmentEndTime&&t.lastCeilingIndex<e.length-1;){const r=e[t.lastCeilingIndex];t.lastCeilingIndex++;const n=t.belowCeiling(r,s);if(!n&&t.fixedBrokenCeiling){const i=h.createBrokenCeiling(r.time,r.depth);t.events.add(i),t.fixedBrokenCeiling=!1;break}if(n&&!t.fixedBrokenCeiling&&(t.fixedBrokenCeiling=!0),r.time>t.currentSegmentEndTime)break}}static addSwitchHighN2(t){const e=t.current,s=t.previous;if(t.switchingGas&&s){const r=e.gas.fN2-s.gas.fN2,n=e.gas.fHe-s.gas.fHe;if(s.gas.fHe>0&&5*r>-n){const i=h.createSwitchToHigherN2(t.elapsed,e.startDepth,e.gas);t.events.add(i)}}}static addMndExceeded(t,e){const s=t.current,r=t.gasEnd(e.startDepth);t.maxMnd<r&&t.fixedMnd&&this.addMndEvent(t,t.elapsed,s.startDepth);const n=t.gasEnd(e.endDepth);t.maxMnd<n&&t.fixedMnd&&this.addMndEvent(t,t.elapsed+s.duration,s.endDepth),t.fixedMnd=n<=t.maxMnd}static addMndEvent(t,e,s){const n=h.createMaxEndExceeded(e,s,t.current.gas);t.events.add(n),t.fixedMnd=!0}}class ht{constructor(t){this.events=t,this.lastCeilingIndex=0,this.currentSegmentStartTime=0,this.currentSegmentEndTime=0,this.fixedBrokenCeiling=!0}assignSegment(t){this.currentSegmentStartTime=this.currentSegmentEndTime,this.currentSegmentEndTime=this.currentSegmentStartTime+t.duration}belowCeiling(t,e){return e.depthAt(t.time-this.currentSegmentStartTime)>=t.depth}}}}]);