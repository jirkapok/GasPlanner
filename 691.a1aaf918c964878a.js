"use strict";(self.webpackChunkplanner=self.webpackChunkplanner||[]).push([[691],{211:(Y,G,B)=>{B.d(G,{e:()=>x});var m=B(277);class x{static toTanks(o){const l=[];return o.forEach(h=>{const D=new m.VQ(h.size,h.startPressure,0);D.id=h.id,D.gas.fO2=h.gas.fO2,D.gas.fHe=h.gas.fHe,D.consumed=h.consumed,D.reserve=h.reserve,l.push(D)}),m.bz.renumberIds(l),l}static fromTanks(o){const l=[];return o.forEach(h=>{l.push({id:h.id,size:h.size,startPressure:h.startPressure,consumed:h.consumed,reserve:h.reserve,gas:{fO2:h.gas.fO2,fHe:h.gas.fHe}})}),l}static toSegments(o,l){const h=[];for(let D=0;D<o.length;D++){const P=o[D],T=m.Gv.air.copy();T.fO2=P.gas.fO2,T.fHe=P.gas.fHe;const M=new m.XX(P.startDepth,P.endDepth,T,P.duration);P.tankId>0&&P.tankId<=l.length&&(M.tank=l[P.tankId-1]),h.push(M)}return h}static fromSegments(o){const l=[];return o.forEach(h=>{l.push({startDepth:h.startDepth,endDepth:h.endDepth,duration:h.duration,tankId:h.tank?h.tank.id:0,gas:{fO2:h.gas.fO2,fHe:h.gas.fHe}})}),l}static toProfile(o,l){const h=x.toSegments(o.segments,l);return m.Z1.fromProfile(h,o.ceilings)}static fromProfile(o){return{segments:x.fromSegments(o.segments),ceilings:o.ceilings,errors:x.fromEvents(o.errors)}}static toEvents(o){const l=new m.zW;return o.forEach(h=>{const D=new m.ju(h.timeStamp,h.depth,h.type,h.message);h.gas&&(D.gas=new m.RP(h.gas?.fO2,h.gas?.fHe)),l.add(D)}),l}static fromEvents(o){const l=[];return o.forEach(h=>{const D={timeStamp:h.timeStamp,depth:h.depth,type:h.type,message:h.message};h.gas&&(D.gas={fO2:h.gas.fO2,fHe:h.gas.fHe}),l.push(D)}),l}static fromDiver(o){return{rmv:o.rmv,maxPpO2:o.maxPpO2,maxDecoPpO2:o.maxDecoPpO2}}static toDiver(o){const l=new m.rr(o.rmv,o.maxPpO2);return l.maxDecoPpO2=o.maxDecoPpO2,l}static fromOptions(o){return{gfLow:o.gfLow,gfHigh:o.gfHigh,maxPpO2:o.maxPpO2,maxDecoPpO2:o.maxDecoPpO2,salinity:o.salinity,altitude:o.altitude,roundStopsToMinutes:o.roundStopsToMinutes,gasSwitchDuration:o.gasSwitchDuration,safetyStop:o.safetyStop,lastStopDepth:o.lastStopDepth,decoStopDistance:o.decoStopDistance,minimumAutoStopDepth:o.minimumAutoStopDepth,maxEND:o.maxEND,oxygenNarcotic:o.oxygenNarcotic,ascentSpeed6m:o.ascentSpeed6m,ascentSpeed50percTo6m:o.ascentSpeed50percTo6m,ascentSpeed50perc:o.ascentSpeed50perc,descentSpeed:o.descentSpeed,problemSolvingDuration:o.problemSolvingDuration}}static toOptions(o){const l=new m.Ei(o.gfLow,o.gfHigh,o.maxPpO2,o.maxDecoPpO2,o.salinity);return l.altitude=o.altitude,l.roundStopsToMinutes=o.roundStopsToMinutes,l.gasSwitchDuration=o.gasSwitchDuration,l.safetyStop=o.safetyStop,l.lastStopDepth=o.lastStopDepth,l.decoStopDistance=o.decoStopDistance,l.minimumAutoStopDepth=o.minimumAutoStopDepth,l.maxEND=o.maxEND,l.oxygenNarcotic=o.oxygenNarcotic,l.ascentSpeed6m=o.ascentSpeed6m,l.ascentSpeed50percTo6m=o.ascentSpeed50percTo6m,l.ascentSpeed50perc=o.ascentSpeed50perc,l.descentSpeed=o.descentSpeed,l.problemSolvingDuration=o.problemSolvingDuration,l}}},691:(Y,G,B)=>{B.d(G,{P:()=>g});var m=B(277),x=B(211);class g{static calculateDecompression(l){const h=x.e.toTanks(l.tanks),D=x.e.toSegments(l.plan,h),P=m.wC.fromCollection(D),T=m.Vw.fromTanks(h),M=new m.dD,O=x.e.toOptions(l.options),C=M.calculateDecompression(O,T,P),v=x.e.fromProfile(C),p=m.uv.fromProfile(P.startAscentIndex,C.segments,C.ceilings,O);return{profile:v,events:x.e.fromEvents(p.items)}}static diveInfo(l){const h=x.e.toTanks(l.tanks),D=m.Vw.fromTanks(h),P=x.e.toSegments(l.plan,h),T=m.wC.fromCollection(P),M=new m.dD,O=x.e.toOptions(l.options),C=M.noDecoLimitMultiLevel(T,D,O),v=new m.FQ(l.options).create();return{noDeco:C,otu:new m.Uz(v).calculateForProfile(P),cns:new m.rQ(v).calculateForProfile(P)}}static calculateConsumption(l){const h=new m.FQ(l.options).create(),D=new m.Cb(h),P=x.e.toTanks(l.tanks),T=x.e.toSegments(l.profile,P),M=x.e.toSegments(l.plan,P),O=m.wC.fromCollection(M),C=new m.rr(l.diver.rmv,l.options.maxPpO2),v=x.e.toOptions(l.options),p=D.calculateMaxBottomTime(O,P,C,v),E=D.emergencyAscent(T,v,P);let I=m.wC.duration(E);return I=m.qp.toMinutes(I),D.consumeFromTanks2(T,E,v,P,C),{maxTime:p,timeToSurface:I,tanks:x.e.fromTanks(P)}}}},277:(Y,G,B)=>{B.d(G,{Cb:()=>it,Ei:()=>rt,FQ:()=>U,Gv:()=>p,RP:()=>v,Uz:()=>ct,VQ:()=>Q,Vw:()=>O,XX:()=>A,Z1:()=>T,bz:()=>R,dD:()=>K,ju:()=>l,qp:()=>f,rQ:()=>at,rr:()=>ot,uv:()=>q,wC:()=>b,zW:()=>D});class m{constructor(t,e,s,r,n,i){this._n2HalfTime=t,this._n2A=e,this._n2B=s,this._heHalfTime=r,this._heA=n,this._heB=i}get n2HalfTime(){return this._n2HalfTime}get n2A(){return this._n2A}get n2B(){return this._n2B}get heHalfTime(){return this._heHalfTime}get heA(){return this._heA}get heB(){return this._heB}}class x{}x.Buhlmann_ZHL16C=[new m(5,1.1696,.5578,1.88,1.6189,.477),new m(8,1,.6514,3.02,1.383,.5747),new m(12.5,.8618,.7222,4.72,1.1919,.6527),new m(18.5,.7562,.7826,6.99,1.0458,.7223),new m(27,.62,.8125,10.21,.922,.7582),new m(38.3,.5043,.8434,14.48,.8205,.7957),new m(54.3,.441,.8693,20.53,.7305,.8279),new m(77,.4,.891,29.11,.6502,.8553),new m(109,.375,.9092,41.2,.595,.8757),new m(146,.35,.9222,55.19,.5545,.8903),new m(187,.3295,.9319,70.69,.5333,.8997),new m(239,.3065,.9403,90.34,.5189,.9073),new m(305,.2835,.9477,115.29,.5181,.9122),new m(390,.261,.9544,147.42,.5176,.9171),new m(498,.248,.9602,188.24,.5172,.9217),new m(635,.2327,.9653,240.03,.5119,.9267)];class g{static fix(t){return Number(t.toFixed(10))}static roundTwoDecimals(t){return g.round(t,2)}static round(t,e=0){return g.adapt(Math.round,t,e)}static floorTwoDecimals(t){return g.floor(t,2)}static floor(t,e=0){return g.adapt(Math.floor,t,e)}static ceilTwoDecimals(t){return g.ceil(t,2)}static ceil(t,e=0){return g.adapt(Math.ceil,t,e)}static ceilDistance(t,e){return g.adaptDistance(Math.ceil,t,e)}static roundDistance(t,e){return g.adaptDistance(Math.round,t,e)}static floorDistance(t,e){return g.adaptDistance(Math.floor,t,e)}static adapt(t,e,s){const r=Math.pow(10,s);return t(e*r)/r}static adaptDistance(t,e,s){return t(e/s)*s}}var o=(()=>{return(a=o||(o={}))[a.noAction=0]="noAction",a[a.error=1]="error",a[a.gasSwitch=2]="gasSwitch",a[a.reachedNoDeco=3]="reachedNoDeco",a[a.lowPpO2=4]="lowPpO2",a[a.highPpO2=5]="highPpO2",a[a.highAscentSpeed=6]="highAscentSpeed",a[a.highDescentSpeed=7]="highDescentSpeed",a[a.brokenCeiling=8]="brokenCeiling",a[a.maxEndExceeded=9]="maxEndExceeded",a[a.switchToHigherN2=10]="switchToHigherN2",o;var a})();class l{constructor(t,e,s,r,n){this.timeStamp=t,this.depth=e,this.type=s,this.message=r,this.gas=n}}class h{static createGasSwitch(t,e,s){return{timeStamp:t,depth:e,type:o.gasSwitch,gas:s}}static createError(t){return{timeStamp:0,depth:0,type:o.error,message:t}}static createLowPpO2(t,e){return{timeStamp:t,depth:e,type:o.lowPpO2}}static createHighPpO2(t,e){return{timeStamp:t,depth:e,type:o.highPpO2}}static createHighAscentSpeed(t,e){return{timeStamp:t,depth:e,type:o.highAscentSpeed}}static createHighDescentSpeed(t,e){return{timeStamp:t,depth:e,type:o.highDescentSpeed}}static createBrokenCeiling(t,e){return{timeStamp:t,depth:e,type:o.brokenCeiling}}static createMaxEndExceeded(t,e,s){return{timeStamp:t,depth:e,type:o.maxEndExceeded,gas:s}}static createSwitchToHigherN2(t,e,s){return{timeStamp:t,depth:e,type:o.switchToHigherN2,gas:s}}}class D{constructor(){this.items=[]}add(t){this.items.push(t)}}class P{constructor(t,e){this.time=t,this.depth=e}get notAtSurface(){return this.depth>0}static isDecoDive(t){for(const e of t)if(e.notAtSurface)return!0;return!1}}class T{get segments(){return this.seg}get ceilings(){return this.ceil}get errors(){return this.err}constructor(t,e,s){this.seg=t,this.ceil=e,this.err=s}static fromErrors(t,e){return new T(t,[],e)}static fromProfile(t,e){return new T(t,e,[])}}class M{static validate(t,e,s){const r=[];if(!t.hasBottomGas){const n=h.createError("At least one bottom gas has to be defined.");return r.push(n),r}return r}}class O{constructor(){this.bottomGases=[]}get all(){return this.bottomGases.slice()}get hasBottomGas(){return this.bottomGases.length>=1}static fromTanks(t){const e=new O;return t.forEach(s=>{e.add(s.gas)}),e}bestGas(t,e,s){const r=e.toBar(s.currentDepth);let n=s.currentGas;return this.bottomGases.forEach((i,c)=>{const d=this.bottomGases[c],S=d.mod(s.maxDecoPpO2),w=t.toDecoStop(S),y=d.end(r,s.oxygenNarcotic);s.currentDepth<=w&&y<=s.maxEndPressure&&(!n||n.fO2<d.fO2)&&(n=d)}),n}add(t){this.bottomGases.push(t)}isRegistered(t){return this.bottomGases.includes(t)}}class C{static partialPressure(t,e){return t*e}static mod(t,e){return t/e}static bestMix(t,e,s){const n=t/s.toBar(e);return n>1?1:n}static ead(t,e){return C.end(e,1-t)/p.nitroxInAir}static end(t,e,s=0){return t*this.narcoticIndex(s,e)}static mnd(t,e,s=0){return t/this.narcoticIndex(s,e)}static ceiling(t,e){const n=.18/t*e;return n<e?e:n}static narcoticIndex(t,e=0){return e+t}}class v{constructor(t,e){if(this._fO2=t,this._fHe=e,this.contentExceeds100percent())throw new Error("O2 + He can't exceed 100 %")}get fN2(){return 1-this._fO2-this._fHe}get fO2(){return this._fO2}get fHe(){return this._fHe}set fO2(t){this._fO2=t>1?1:t,this.contentExceeds100percent()&&(this._fHe=this.countRemaining(this._fO2))}set fHe(t){this._fHe=t>.99?.99:t,this.contentExceeds100percent()&&(this._fO2=this.countRemaining(this._fHe))}copy(){return new v(this._fO2,this._fHe)}mod(t){return C.mod(t,this._fO2)}end(t,e){return C.end(t,this.fN2,e?this._fO2:0)}mnd(t,e){return C.mnd(t,this.fN2,e?this._fO2:0)}ceiling(t){return C.ceiling(this._fO2,t)}compositionEquals(t){return!!t&&this._fO2===t._fO2&&this._fHe===t._fHe}contentCode(){return g.round(1e4*this._fO2*1e4)+g.round(1e4*this._fHe)}contentExceeds100percent(){return this._fO2+this._fHe>1}countRemaining(t){return g.round(1-t,5)}}class p{static nitroxNames(){return p.allNames().slice(0,6)}static allNames(){return Array.from(p.map.keys())}static nameFor(t,e=0){const r=g.round(100*t),n=g.round(100*e);return r<=0?"":n<=0?r>=100?p.oxygenName:21===r?p.airName:"EAN"+r.toString():`${r>=21?"Helitrox":"Trimix"} ${r.toString()}/${n.toString()}`}static byName(t){if(p.map.has(t))return p.map.get(t)??null;const e=p.namesRegEx.exec(t);if(e){if(e[1]){const s=Number(e[1])/100;if(s>0)return new v(s,0)}if(e[2]&&e[3]){const s=Number(e[2])/100,r=Number(e[3])/100;if(s>0&&r>0)return new v(s,r)}}return null}}p.o2InAir=.209,p.nitroxInAir=1-p.o2InAir,p.oxygen=new v(1,0),p.ean50=new v(.5,0),p.ean38=new v(.38,0),p.ean36=new v(.36,0),p.ean32=new v(.32,0),p.trimix3525=new v(.35,.25),p.trimix2525=new v(.25,.25),p.air=new v(p.o2InAir,0),p.trimix2135=new v(.21,.35),p.trimix1845=new v(.18,.45),p.trimix1555=new v(.15,.55),p.trimix1260=new v(.12,.6),p.trimix1070=new v(.1,.7),p.airName="Air",p.oxygenName="Oxygen",p.namesRegEx=/[EAN](?<fO2>\d{2})|(?<fO2b>\d{2})\/(?<fHe>\d{2})/i,p.map=new Map([[p.airName,p.air],["EAN32",p.ean32],["EAN36",p.ean36],["EAN38",p.ean38],["EAN50",p.ean50],[p.oxygenName,p.oxygen],["Helitrox 35/25",p.trimix3525],["Helitrox 25/25",p.trimix2525],["Helitrox 21/35",p.trimix2135],["Trimix 18/45",p.trimix1845],["Trimix 15/55",p.trimix1555],["Trimix 12/60",p.trimix1260],["Trimix 10/70",p.trimix1070]]);class I extends m{constructor(t,e){super(t.n2HalfTime,t.n2A,t.n2B,t.heHalfTime,t.heA,t.heB),this._pN2=0,this._pHe=0,this._pTotal=0,this._a=0,this._b=0,this._pN2=C.partialPressure(e,.79)-.0627,this._pHe=0,this._pTotal=this.pN2+this.pHe}get pN2(){return this._pN2}get pHe(){return this._pHe}get pTotal(){return this._pTotal}get a(){return this._a}get b(){return this._b}copy(){const t=new I(this,1);return t._pN2=this._pN2,t._pHe=this._pHe,t._pTotal=this._pTotal,t._a=this._a,t._b=this._b,t}ceiling(t){return(this.pTotal-this.a*t)/(t/this.b+1-t)}load(t,e){this._pN2=this.loadGas(t,e.fN2,this.pN2,this.n2HalfTime),this._pHe=this.loadGas(t,e.fHe,this.pHe,this.heHalfTime);const s=this.pTotal;return this._pTotal=this.pN2+this.pHe,this._a=(this.n2A*this.pN2+this.heA*this.pHe)/this.pTotal,this._b=(this.n2B*this.pN2+this.heB*this.pHe)/this.pTotal,this.pTotal-s}loadGas(t,e,s,r){return this.schreinerEquation(s,t.startPressure*e,t.duration,r,t.speed*e)}schreinerEquation(t,e,s,r,n){const c=.01155245301/r;return e+n*(s-1/c)-(e-t-n/c)*Math.exp(-c*s)}}class k{constructor(){this.compartments=[]}static createFromOther(t){const e=new k;return e.compartments=k.copy(t),e}static createFromSurfacePressure(t){const e=new k;for(let s=0;s<x.Buhlmann_ZHL16C.length;s++){const n=new I(x.Buhlmann_ZHL16C[s],t);e.compartments.push(n)}return e}static copy(t){const e=[];for(let s=0;s<t.length;s++){const r=t[s].copy();e.push(r)}return e}ceiling(t){let e=0;for(let s=0;s<this.compartments.length;s++){const r=this.compartments[s].ceiling(t);r>e&&(e=r)}return e}load(t,e){let s=0;for(let r=0;r<this.compartments.length;r++)s+=this.compartments[r].load(t,e);return s}}class f{static toSeconds(t){return t*f.oneMinute}static toMinutes(t){return t/f.oneMinute}static toDate(t){return new Date(1970,1,1,0,0,t,0)}static secondsFromDate(t){const e=new Date(t);let s=e.getSeconds();return s+=e.getMinutes()*f.oneMinute,s+=e.getHours()*Math.pow(f.oneMinute,2),s}}f.oneSecond=1,f.oneMinute=60,f.oneDay=1440*f.oneMinute;class z{static validate(t,e){const s=[];if(!t.any()){const r=h.createError("There needs to be at least one segment at depth.");s.push(r)}return t.withAll(r=>{z.validateRegisteredGas(s,e,r)}),s}static validateRegisteredGas(t,e,s){if(!e.isRegistered(s.gas)){const n=h.createError(`Segment ${s.startDepth}-${s.endDepth} has gas not registered in gases.`);t.push(n)}}}class A{constructor(t,e,s,r){this.startDepth=t,this.endDepth=e,this._gas=s,this.duration=r}get gas(){return this._gas}get tank(){return this._tank}get speed(){return(this.endDepth-this.startDepth)/this.duration}get averageDepth(){return(this.startDepth+this.endDepth)/2}set tank(t){this._tank=t,t&&(this._gas=t.gas)}static from(t){const e=new A(t.startDepth,t.endDepth,t._gas,t.duration);return e.tank=t.tank,e}static depthAt(t,e,s){return t+e*s}contentEquals(t){return this.speed===t.speed&&this._gas===t._gas}depthAt(t){return A.depthAt(this.startDepth,this.speed,t)}mergeFrom(t){this.duration+=t.duration,this.endDepth=t.endDepth}}class b{constructor(){this.segments=[],this._maxDepth=0}get startAscentIndex(){return this.deepestPart().length}get startAscentTime(){const t=this.deepestPart();return b.duration(t)}get length(){return this.segments.length}get items(){return this.segments.slice()}get maxDepth(){return this._maxDepth}get currentDepth(){return this.any()?this.last().endDepth:0}get duration(){return b.duration(this.segments)}static from(t){return b.fromCollection(t.segments)}static fromCollection(t){const e=new b;return t.forEach(s=>{const r=A.from(s);e.segments.push(r),e.updateMaxDepth(r)}),e}static duration(t){let e=0;for(const s of t)e+=s.duration;return e}static averageDepth(t){if(t.length<=0)return 0;let e=0,s=0;return t.forEach(r=>{if(r.duration>0){const n=r.averageDepth*r.duration+s*e;s+=r.duration,e=n/s}}),e}add(t,e,s,r){const n=new A(t,e,s,r);return this.segments.push(n),this.updateMaxDepth(n),n}addFlat(t,e,s){return this.add(t,t,e,s)}addChangeTo(t,e,s){return this.add(this.currentDepth,t,e,s)}mergeFlat(t=0){if(t<0)return this.items;const e=[];for(let s=this.segments.length-1;s>t;s--){const r=this.segments[s-1],n=this.segments[s];r.contentEquals(n)&&(r.mergeFrom(n),e.push(n))}return this.segments=this.segments.filter(s=>!e.includes(s)),this.items}remove(t){this.segments=this.segments.filter(e=>e!==t),this.fixStartDepths()}cutDown(t){this.segments=this.segments.slice(0,this.segments.length-t),this.fixStartDepths()}withAll(t){for(let e=0;e<this.segments.length;e++)t(this.segments[e])}any(){return 0!==this.segments.length}last(){return this.segments[this.segments.length-1]}copy(){return b.from(this)}fixStartDepths(){this.any()&&(this.segments[0].startDepth=0);for(let t=0;t<this.segments.length-1;t++){const s=this.segments[t+1];s.startDepth=this.segments[t].endDepth,this.updateMaxDepth(s)}}deepestPart(){for(let t=this.segments.length-1;t>=0;t--)if(this.segments[t].endDepth===this.maxDepth)return this.items.slice(0,t+1);return[]}updateMaxDepth(t){t.endDepth>this._maxDepth&&(this._maxDepth=t.endDepth)}}var L=(()=>{return(a=L||(L={}))[a.fresh=1]="fresh",a[a.brackish=2]="brackish",a[a.salt=3]="salt",L;var a})();let F=(()=>{class a{}return a.fresh=1e3,a.brackish=1020,a.salt=1030,a})(),$=(()=>{class a{}return a.standard=9.80665,a})(),V=(()=>{class a{static pascalToBar(e){return e/a.coefficient}static barToPascal(e){return e*a.coefficient}}return a.coefficient=1e5,a})(),et=(()=>{class a{static atAltitude(e){return V.barToPascal(this.standard)*Math.pow(288.15/(288.15+-.0065*e),.0289644*$.standard/-.05404308)}}return a.standard=1.01325,a})();class U{constructor(t){this.options=t}create(){switch(this.options.salinity){case L.salt:return H.forSaltWater(this.options.altitude);case L.brackish:return H.forBrackishWater(this.options.altitude);default:return H.forFreshWater(this.options.altitude)}}}class H{constructor(t,e){this.density=t,this._gravity=$.standard;const s=et.atAltitude(e);this._surfacePressure=V.pascalToBar(s)}get surfacePressure(){return this._surfacePressure}static forSaltWater(t=0){return new H(F.salt,t)}static forBrackishWater(t=0){return new H(F.brackish,t)}static forFreshWater(t=0){return new H(F.fresh,t)}static simple(){const t=new H(F.fresh,0);return t._surfacePressure=1,t._gravity=10,t}toBar(t){return V.pascalToBar(t*(this.density*this._gravity))+this._surfacePressure}fromBar(t){if(t<this._surfacePressure)throw new Error("Lower pressure than altitude isn`t convertible to depth.");const e=this.density*this._gravity;return V.barToPascal(t-this._surfacePressure)/e}}class st{constructor(t,e,s){this.depthConverter=t,this.options=e,this.tissues=s,this.lowestCeiling=0,this.lowestCeiling=this.depthConverter.surfacePressure+1}ceiling(){let t=this.tolerated();return t<this.depthConverter.surfacePressure&&(t=this.depthConverter.surfacePressure),this.depthConverter.fromBar(t)}toleratedTissues(t,e,s,r){const n=this.tissues.compartments;let i=0;for(let c=0;c<n.length;c++){const d=n[c];let S=i;(t/d.b+d.a-t)*s+t<(e/d.b+d.a-e)*r+e&&(S=(-d.a*d.b*(s*e-r*t)-(1-d.b)*(s-r)*e*t+d.b*(e-t)*d.pTotal)/(-d.a*d.b*(s-r)+(1-d.b)*(r*e-s*t)+d.b*(e-t))),S>=i&&(i=S)}return i}tolerated(){const t=this.options.gfLow,e=this.options.gfHigh,s=this.depthConverter.surfacePressure,r=this.tissues.ceiling(t);return r>this.lowestCeiling&&(this.lowestCeiling=r),this.toleratedTissues(s,this.lowestCeiling,e,t)}}let X=(()=>{class a{constructor(e){this.options=e,this.averageDepth=0}markAverageDepth(e){const s=e.deepestPart();this.averageDepth=b.averageDepth(s)}ascent(e){return e>a.sixMeters?e>this.averageDepth/2?this.options.ascentSpeed50perc:this.options.ascentSpeed50percTo6m:this.options.ascentSpeed6m}}return a.sixMeters=6,a})();var _=(()=>{return(a=_||(_={}))[a.never=1]="never",a[a.auto=2]="auto",a[a.always=3]="always",_;var a})();class u{static setMediumConservatism(t){t.gfLow=u.gfLow,t.gfHigh=u.gfHigh}static useRecreational(t){u.useGeneralRecommended(t),t.ascentSpeed50perc=u.ascentSpeed50perc,t.ascentSpeed50percTo6m=u.ascentSpeed50perc,t.ascentSpeed6m=u.ascentSpeed50perc,t.lastStopDepth=u.lastStopDepthRecre}static useRecommended(t){u.useGeneralRecommended(t),t.ascentSpeed50perc=u.ascentSpeed50perc,t.ascentSpeed50percTo6m=u.ascentSpeed50percTo6m,t.ascentSpeed6m=u.ascentSpeed6m,t.lastStopDepth=u.lastStopDepth}static useGeneralRecommended(t){t.safetyStop=u.safetyStopRecre,t.roundStopsToMinutes=u.roundStopsToMinutes,t.gasSwitchDuration=u.gasSwitchDuration,t.descentSpeed=u.descentSpeed,t.oxygenNarcotic=u.oxygenNarcotic,t.maxEND=u.maxEND}}u.altitude=0,u.saltWater=L.salt,u.roundStopsToMinutes=!1,u.gasSwitchDuration=2,u.problemSolvingDuration=1,u.lastStopDepth=3,u.lastStopDepthRecre=5,u.safetyStopRecre=_.auto,u.decoStopDistance=3,u.minimumAutoStopDepth=10,u.addSafetyStop=!0,u.maxEND=30,u.oxygenNarcotic=!0,u.ascentSpeed6m=3,u.ascentSpeed50percTo6m=6,u.ascentSpeed50perc=9,u.descentSpeed=18,u.gfLow=.4,u.gfHigh=.85,u.maxPpO2=1.4,u.maxDecoPpO2=1.6;class rt{constructor(t=u.gfLow,e=u.gfHigh,s=u.maxPpO2,r=u.maxDecoPpO2,n=u.saltWater){this.gfLow=t,this.gfHigh=e,this.maxPpO2=s,this.maxDecoPpO2=r,this.salinity=n,this.altitude=u.altitude,this.roundStopsToMinutes=u.roundStopsToMinutes,this.gasSwitchDuration=u.gasSwitchDuration,this.safetyStop=u.safetyStopRecre,this.lastStopDepth=u.lastStopDepth,this.decoStopDistance=u.decoStopDistance,this.minimumAutoStopDepth=u.minimumAutoStopDepth,this.maxEND=u.maxEND,this.oxygenNarcotic=!0,this.ascentSpeed6m=u.ascentSpeed6m,this.ascentSpeed50percTo6m=u.ascentSpeed50percTo6m,this.ascentSpeed50perc=u.ascentSpeed50perc,this.descentSpeed=u.descentSpeed,this.problemSolvingDuration=u.problemSolvingDuration,this.gfLow=t||u.gfLow,this.gfHigh=e||u.gfHigh,this.maxPpO2=s||u.maxPpO2,this.maxDecoPpO2=r||u.maxDecoPpO2,this.salinity=n||u.saltWater}loadFrom(t){this.gfLow=t.gfLow||this.gfLow,this.gfHigh=t.gfHigh||this.gfHigh,this.maxPpO2=t.maxPpO2||this.maxPpO2,this.maxDecoPpO2=t.maxDecoPpO2||this.maxDecoPpO2,this.oxygenNarcotic=!!t.oxygenNarcotic,this.salinity=t.salinity||this.salinity,this.altitude=t.altitude||0===t.altitude?t.altitude:this.altitude,this.roundStopsToMinutes=!!t.roundStopsToMinutes,this.gasSwitchDuration=t.gasSwitchDuration||this.gasSwitchDuration,this.problemSolvingDuration=t.problemSolvingDuration||this.problemSolvingDuration,this.lastStopDepth=t.lastStopDepth||this.lastStopDepth,this.decoStopDistance=t.decoStopDistance||this.decoStopDistance,this.minimumAutoStopDepth=t.minimumAutoStopDepth||this.minimumAutoStopDepth,this.safetyStop=t.safetyStop||this.safetyStop,this.maxEND=t.maxEND||this.maxEND,this.ascentSpeed6m=t.ascentSpeed6m||this.ascentSpeed6m,this.ascentSpeed50percTo6m=t.ascentSpeed50percTo6m||this.ascentSpeed50percTo6m,this.ascentSpeed50perc=t.ascentSpeed50perc||this.ascentSpeed50perc,this.descentSpeed=t.descentSpeed||this.descentSpeed}}class nt{constructor(t,e){this.depthConverter=t,this.options=e}toDecoStop(t){const e=this.depthConverter.fromBar(t);return g.roundDistance(e,this.options.decoStopDistance)}nextStop(t){if(t<=this.options.lastStopDepth)return 0;const e=g.floorDistance(t,this.options.decoStopDistance);if(e!==t)return e;const s=t-this.options.decoStopDistance;return s<=this.options.lastStopDepth?this.options.lastStopDepth:s}addSafetyStop(t,e){return(this.options.safetyStop===_.always||this.options.safetyStop===_.auto&&e>this.options.minimumAutoStopDepth)&&t===this.options.lastStopDepth}}let j=(()=>{class a{constructor(){}search(e){if(e.maxValue<e.initialValue)throw Error("Max value cant be smaller than initial value");if(e.estimationStep>e.maxValue-e.initialValue)throw Error("Step cant be larger than range");const s=this.findInitialLimit(e);return this.searchInsideInterval(e,s)}searchInsideInterval(e,s){for(;s.right-s.left>a.minimalStep;){let r=s.left+(s.right-s.left)/2;r=Math.round(r),e.doWork(r),e.meetsCondition()?s.left=r:s.right=r}return s.left}findInitialLimit(e){let s=e.initialValue;for(e.doWork(s);e.meetsCondition()&&s<=e.maxValue;)s+=e.estimationStep,e.doWork(s);let r=s-e.estimationStep;return r=r<e.initialValue?e.initialValue:r,{left:r,right:s>e.maxValue?e.maxValue:s}}}return a.minimalStep=1,a})();class J{constructor(t,e,s,r){this.gases=t,this.segments=e,this.options=s,this.depthConverter=r,this.ceilings=[],this.runTime=0,this.tissues=k.createFromSurfacePressure(r.surfacePressure),this.gradients=new st(r,s,this.tissues);const n=e.last();this.currentGas=n.gas,this.bestGasOptions={currentDepth:this.currentDepth,maxDecoPpO2:this.options.maxDecoPpO2,oxygenNarcotic:this.options.oxygenNarcotic,maxEndPressure:this.depthConverter.toBar(this.options.maxEND),currentGas:this.currentGas},this.speeds=new X(this.options),this.levels=new nt(r,s)}get ascentSpeed(){return this.speeds.ascent(this.currentDepth)}get currentDepth(){return this.segments.currentDepth}get ambientPressure(){return this.depthConverter.toBar(this.currentDepth)}get addSafetyStop(){return this.levels.addSafetyStop(this.currentDepth,this.segments.maxDepth)}get decoStopDuration(){return this.options.roundStopsToMinutes?f.oneMinute:f.oneSecond}get isAtSurface(){return 0===this.segments.last().endDepth}markAverageDepth(){this.speeds.markAverageDepth(this.segments)}addCeiling(){const t=this.ceiling(),e=new P(this.runTime,t);this.ceilings.push(e)}ceiling(){return this.gradients.ceiling()}bestDecoGas(){return this.bestGasOptions.currentDepth=this.currentDepth,this.bestGasOptions.currentGas=this.currentGas,this.gases.bestGas(this.levels,this.depthConverter,this.bestGasOptions)}createMemento(){return{runTime:this.runTime,tissues:k.copy(this.tissues.compartments),ceilings:this.ceilings.length,segments:this.segments.length,lowestCeiling:this.gradients.lowestCeiling}}restore(t){this.tissues.compartments=k.copy(t.tissues),this.gradients.lowestCeiling=t.lowestCeiling,this.runTime=t.runTime,this.ceilings=this.ceilings.slice(0,t.ceilings),this.segments.cutDown(this.segments.length-t.segments)}nextStop(t){return this.levels.nextStop(t)}shouldSwitchTo(t){return t&&!this.currentGas.compositionEquals(t)}addGasSwitchSegment(){return this.addStopSegment(this.options.gasSwitchDuration*f.oneMinute)}addDecoStopSegment(){return this.addStopSegment(0)}addSafetyStopSegment(){return this.addStopSegment(3*f.oneMinute)}addAscentSegment(t,e){return this.segments.add(this.currentDepth,t,this.currentGas,e)}addStopSegment(t){return this.segments.add(this.currentDepth,this.currentDepth,this.currentGas,t)}}class K{noDecoLimit(t,e,s){const r=new O;r.add(e);const n=new b,i=this.duration(t,s.descentSpeed);return n.add(0,t,e,i),this.noDecoLimitMultiLevel(n,r,s)}noDecoLimitMultiLevel(t,e,s){const r=new U(s).create(),n=new J(e,t,s,r);return this.swimNoDecoLimit(t,e,n,s)}calculateDecompression(t,e,s){const r=new U(t).create(),n=s.copy(),i=this.validate(n,e,t,r);if(i.length>0){const w=n.mergeFlat(s.length);return T.fromErrors(w,i)}const c=new J(e,n,t,r);this.swimPlan(c),c.markAverageDepth();let d=c.nextStop(c.currentDepth);for(;d>=0&&!c.isAtSurface;)this.tryGasSwitch(c),this.stayAtDecoStop(c,d),this.stayAtSafetyStop(c),this.ascentToNextStop(c,d),d=c.nextStop(d);const S=c.segments.mergeFlat(s.length);return T.fromProfile(S,c.ceilings)}tryGasSwitch(t){const e=t.bestDecoGas();if(t.shouldSwitchTo(e)){t.currentGas=e;const s=t.addGasSwitchSegment();this.swim(t,s)}}stayAtDecoStop(t,e){if(this.needsDecoStop(t,e)){const s=t.createMemento(),r={estimationStep:20*f.oneMinute,initialValue:0,maxValue:f.oneDay,doWork:d=>this.swimDecoStop(t,s,d),meetsCondition:()=>this.needsDecoStop(t,e)},i=(new j).search(r)+f.oneSecond,c=g.ceilDistance(i,t.decoStopDuration);this.swimDecoStop(t,s,c)}}swimDecoStop(t,e,s){t.restore(e);const r=t.addDecoStopSegment();r.duration=s,this.swim(t,r)}needsDecoStop(t,e){if(e>=t.ceiling())return!1;const s=t.createMemento();this.ascentToNextStop(t,e);const r=e<t.ceiling();return t.restore(s),r}stayAtSafetyStop(t){if(t.addSafetyStop){const e=t.addSafetyStopSegment();this.swim(t,e)}}ascentToNextStop(t,e){const r=this.duration(t.currentDepth-e,t.ascentSpeed),n=t.addAscentSegment(e,r);this.swim(t,n)}validate(t,e,s,r){const n=z.validate(t,e);if(n.length>0)return n;const i=M.validate(e,s,r.surfacePressure);return i.length>0?i:[]}duration(t,e){return t/f.toMinutes(e)}swimPlan(t){t.addCeiling(),t.segments.withAll(e=>{this.swim(t,e)})}swim(t,e){let s=e.startDepth;const r=f.oneSecond;for(let n=0;n<e.duration;n+=r){const i=A.depthAt(s,e.speed,r),c=new A(s,i,e.gas,r);this.swimPart(t,c),s=c.endDepth}}swimPart(t,e){const s=this.toLoadSegment(t.depthConverter,e);t.tissues.load(s,e.gas),t.runTime+=e.duration,t.addCeiling()}swimNoDecoLimit(t,e,s,r){if(this.validate(t,e,r,s.depthConverter).length>0)return 0;this.swimPlan(s);const i=this.currentNdl(s.ceilings);return i!==Number.POSITIVE_INFINITY?i:this.predictNoDecoLimit(t,s)}predictNoDecoLimit(t,e){const s=t.last(),r=s.endDepth,n=new A(r,r,s.gas,f.oneMinute),i=this.toLoadSegment(e.depthConverter,n);let c=1;for(;e.ceiling()<=0&&c>0;)c=e.tissues.load(i,s.gas),e.runTime+=f.oneMinute;return 0===c||0===r?Number.POSITIVE_INFINITY:this.floorNdl(e.runTime)}floorNdl(t){let e=f.toMinutes(t);return e=g.floor(e),e-1}currentNdl(t){for(let e=0;e<t.length;e+=f.oneMinute){const s=t[e];if(s.notAtSurface)return this.floorNdl(s.time)}return Number.POSITIVE_INFINITY}toLoadSegment(t,e){const s=t.toBar(e.speed)-t.surfacePressure;return{startPressure:t.toBar(e.startDepth),duration:e.duration,speed:s}}}class R{static haveReserve(t){for(let e=0;e<t.length;e++)if(!t[e].hasReserve)return!1;return!0}static resetConsumption(t){t.forEach(e=>{e.consumed=0,e.reserve=0})}static removeTank(t,e){const s=t.filter(r=>r!==e);return R.renumberIds(s),s}static renumberIds(t){for(let e=0;e<t.length;e++)t[e].id=e+1}}class Q{constructor(t,e,s){this.size=t,this.startPressure=e,this.id=0,this.consumed=0,this.reserve=0,this._gas=p.air.copy(),this.o2=s}get gas(){return this._gas}get o2(){const t=100*this.gas.fO2;return this.isInAirRange(t)?g.round(t):g.roundTwoDecimals(t)}get he(){return g.roundTwoDecimals(100*this.gas.fHe)}get volume(){return this.size*this.startPressure}get name(){return p.nameFor(this._gas.fO2,this._gas.fHe)}get endPressure(){const t=this.startPressure-this.consumed;return t>0?t:0}get percentsRemaining(){return this.endPressure/this.startPressure*100}get percentsReserve(){const t=this.reserve/this.startPressure*100;return t>100?100:t}get hasReserve(){return this.endPressure>=this.reserve}set o2(t){this.isInAirRange(t)?this.gas.fO2=p.o2InAir:this._gas.fO2=t/100}set he(t){this.gas.fHe=t/100}static createDefault(){return new Q(15,200,100*p.o2InAir)}assignStandardGas(t){const e=p.byName(t);e&&(this._gas.fO2=e.fO2,this._gas.fHe=e.fHe)}loadFrom(t){this.size=t.size,this.startPressure=t.startPressure,this.consumed=t.consumed,this.reserve=t.reserve,this.gas.fO2=t._gas.fO2,this.gas.fHe=t._gas.fHe}isInAirRange(t){return 20.9<=t&&t<=21&&0===this.gas.fHe}}class W{constructor(t,e,s,r){this.duration=t,this.startTime=0,this.endTime=0,this.averageDepth=0,this._startDepth=0,this._endDepth=0,this.endTime=g.roundTwoDecimals(t),this._endDepth=e,this._startDepth=s,this.averageDepth=r}get startDepth(){return this._startDepth}get endDepth(){return this._endDepth}static fromSegment(t){return new W(t.duration,t.endDepth,t.startDepth,t.averageDepth)}}let it=(()=>{class a{constructor(e){this.depthConverter=e}static calculateDecompression(e,s,r){const n=O.fromTanks(s),i=new K,c=e.copy();return i.calculateDecompression(r,n,c)}consumeFromTanks(e,s,r,n){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");const i=this.emergencyAscent(e,s,r);this.consumeFromTanks2(e,i,s,r,n)}consumeFromTanks2(e,s,r,n,i){if(e.length<2)throw new Error("Profile needs to contain at least 2 segments.");R.resetConsumption(n);const c=this.consumeByTanks(e,i.rmv);this.consumeByGases(e,n,i.rmv,c),this.updateReserve(s,n,i.stressRmv)}emergencyAscent(e,s,r){const i=b.fromCollection(e).deepestPart(),c=b.fromCollection(i),d=O.fromTanks(r),y=(new K).calculateDecompression(s,d,c).segments,N=y.slice(i.length,y.length);return this.addSolvingSegment(N,s.problemSolvingDuration),N}calculateMaxBottomTime(e,s,r,n){const i=this.createTestProfile(e),c=i.last(),d={estimationStep:40*f.oneMinute,initialValue:0,maxValue:f.oneDay,doWork:N=>{c.duration=N,this.consumeFromProfile(i,s,r,n)},meetsCondition:()=>R.haveReserve(s)},w=(new j).search(d);if(0===w)return 0;const y=f.toMinutes(e.duration+w);return g.floor(y)}consumeFromProfile(e,s,r,n){const i=a.calculateDecompression(e,s,n);this.consumeFromTanks(i.segments,n,s,r)}createTestProfile(e){const s=e.copy(),r=e.last();return s.addFlat(r.endDepth,r.gas,0),s}updateReserve(e,s,r){const n=this.toBeConsumed(e,r,i=>!0);for(let i=0;i<=s.length-1;i++){const c=s[i],d=c.gas.contentCode();let S=n.get(d)||0;S=this.addReserveToTank(c,S),n.set(d,S)}s[0].reserve<a.minimumRockBottom&&(s[0].reserve=a.minimumRockBottom)}addReserveToTank(e,s){const r=g.ceil(s/e.size),n=r+e.reserve>e.startPressure?e.startPressure-e.reserve:r;return e.reserve+=n,this.extractRemaining(s,n,e.size)}addSolvingSegment(e,s){if(0===e.length)return;const n=e[0].startDepth,i=new A(n,n,e[0].gas,s*f.oneMinute);e.unshift(i)}consumeByGases(e,s,r,n){const i=this.toBeConsumedYet(e,r,n,c=>!c.tank);for(let c=s.length-1;c>=0;c--){const d=s[c],S=d.gas.contentCode();let w=i.get(S)||0;w=this.consumeFromTank(d,w),i.set(S,w)}}consumeByTanks(e,s){const r=new Map,n=f.toMinutes(s);return e.forEach(i=>{if(i.tank){const c=i.tank,d=i.gas.contentCode(),S=W.fromSegment(i),w=this.consumedBySegment(S,n),y=this.consumeFromTank(c,w);let N=r.get(d)||0;N+=y,r.set(d,N)}}),r}consumeFromTank(e,s){const r=g.ceil(s/e.size),n=r>e.endPressure?e.endPressure:r;return e.consumed+=n,this.extractRemaining(s,n,e.size)}extractRemaining(e,s,r){return(e-=s*r)<0?0:e}toBeConsumed(e,s,r){return this.toBeConsumedYet(e,s,new Map,r)}toBeConsumedYet(e,s,r,n){const i=f.toMinutes(s);for(let c=0;c<e.length;c++){const d=e[c];if(n(d)){const w=d.gas.contentCode(),y=W.fromSegment(d),N=this.consumedBySegment(y,i);let tt=r.get(w)||0;tt+=N,r.set(w,tt)}}return r}consumedBySegment(e,s){const r=this.depthConverter.toBar(e.averageDepth);return e.duration*r*s}}return a.minimumRockBottom=30,a})();class at{constructor(t){this.depthConverter=t,this.minimumPpO2=.5}calculateForProfile(t){let e=0;return t.forEach(s=>{const n=this.calculate(s.gas.fO2,s.startDepth,s.endDepth,s.duration);e+=n}),e}calculate(t,e,s,r){const c=t*this.depthConverter.toBar((e+s)/2);if(c<=this.minimumPpO2)return 0;const d=this.exponentByPpO2(c);return r*Math.exp(d)}exponentByPpO2(t){return t<=1.5?1.93873*t-11.7853:9.80829*t-23.6349}}let ot=(()=>{class a{constructor(e=a.defaultSac,s=u.maxPpO2){this.rmv=e,this.maxPpO2=s,this.maxDecoPpO2=u.maxDecoPpO2}get stressRmv(){return 3*this.rmv}static gasSac(e,s){return e/s}gasSac(e){return a.gasSac(this.rmv,e.size)}loadFrom(e){this.rmv=e.rmv,this.maxPpO2=e.maxPpO2,this.maxDecoPpO2=e.maxDecoPpO2}}return a.defaultSac=20,a})(),ct=(()=>{class a{constructor(e){this.depthConverter=e,this.minPressure=.5}calculateForProfile(e){let s=0;return e.forEach(r=>{const i=this.calculate(r.duration,r.gas.fO2,r.startDepth,r.endDepth);s+=i}),s}calculate(e,s,r,n){let i=f.toMinutes(e),S=this.depthConverter.toBar(r)*s,w=this.depthConverter.toBar(n)*s;if(S<=this.minPressure&&w<=this.minPressure)return 0;S<=this.minPressure?(i=i*(w-this.minPressure)/(w-S),S=.501):w<=this.minPressure&&(i=i*(S-this.minPressure)/(S-w),w=.501);const y=S+w-1;return Math.pow(y,5/6)*(1-5*Math.pow(w-S,2)/216/Math.pow(y,2))*i}}return a.dailyLimit=300,a})();class ht{constructor(t,e){this.startDepth=t,this.endDepth=e}get minDepth(){return Math.min(this.startDepth,this.endDepth)}get maxDepth(){return Math.max(this.startDepth,this.endDepth)}get isDescent(){return this.startDepth<this.endDepth}get isFlat(){return this.startDepth===this.endDepth}get isAscent(){return this.startDepth>this.endDepth}}class ut{constructor(t,e,s,r){this.startAscentIndex=t,this.profile=e,this.depthConverter=s,this.options=r,this.events=new D,this.elapsed=0,this.index=0,this.fixedMnd=!0,this._mndBars=0,this.speeds=new X(r);const n=b.fromCollection(e);this.speeds.markAverageDepth(n),this._mndBars=s.toBar(r.maxEND)}get previous(){return this.index>0?this.profile[this.index-1]:null}get isBeforeDecoAscent(){return this.index<this.startAscentIndex}get maxPpo(){return this.isBeforeDecoAscent?this.options.maxPpO2:this.options.maxDecoPpO2}get current(){return this.profile[this.index]}get switchingGas(){return!!this.previous&&!this.current.gas.compositionEquals(this.previous.gas)}get switchingTank(){return!!this.previous&&!!this.previous.tank&&!!this.current.tank&&this.previous.tank!==this.current.tank}get maxMnd(){return this._mndBars}gasEnd(t){return this.current.gas.end(t,this.options.oxygenNarcotic)}}class q{static fromProfile(t,e,s,r){const n=new U(r).create(),i=new ut(t,e,n,r),c=new dt(i.events);for(i.index=0;i.index<e.length;i.index++){const d=this.toPressureSegment(i.current,n);this.addHighPpO2(i,d),this.addLowPpO2(i,d),this.addGasSwitch(i),this.addUserTankSwitch(i),this.addHighDescentSpeed(i),this.addHighAscentSpeed(i),this.addSwitchHighN2(i),this.addMndExceeded(i,d),c.assignSegment(i.current),q.addBrokenCeiling(c,s,i.current),i.elapsed+=i.current.duration}return i.events}static addHighAscentSpeed(t){const e=t.current;let s=f.toSeconds(e.speed);if(s=g.roundTwoDecimals(s),-s>t.speeds.ascent(e.startDepth)){const r=h.createHighAscentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addHighDescentSpeed(t){const e=t.current;if(f.toSeconds(e.speed)>t.options.descentSpeed){const r=h.createHighDescentSpeed(t.elapsed,e.startDepth);t.events.add(r)}}static addGasSwitch(t){if(t.switchingGas){const e=t.current,s=h.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static addUserTankSwitch(t){if(t.switchingTank){const e=t.current,s=h.createGasSwitch(t.elapsed,e.startDepth,e.gas);t.events.add(s)}}static toPressureSegment(t,e){const s=e.toBar(t.startDepth),r=e.toBar(t.endDepth);return new ht(s,r)}static addHighPpO2(t,e){if(e.isDescent||t.isBeforeDecoAscent&&t.switchingGas){const s=t.current.gas.mod(t.maxPpo);if(e.maxDepth>s){const r=t.depthConverter.fromBar(s),n=h.createHighPpO2(t.elapsed,r);t.events.add(n)}}}static addLowPpO2(t,e){const s=t.current.gas.ceiling(t.depthConverter.surfacePressure);if(e.minDepth<s&&t.switchingGas||e.startDepth>s&&s>e.endDepth&&e.isAscent||0===t.current.startDepth&&e.startDepth<s&&e.isDescent){const n=t.depthConverter.fromBar(s),i=h.createLowPpO2(t.elapsed,n);t.events.add(i)}}static addBrokenCeiling(t,e,s){for(;t.lastCeilingIndex<t.currentSegmentEndTime&&t.lastCeilingIndex<e.length-1;){const r=e[t.lastCeilingIndex];t.lastCeilingIndex++;const n=t.belowCeiling(r,s);if(!n&&t.fixedBrokenCeiling){const i=h.createBrokenCeiling(r.time,r.depth);t.events.add(i),t.fixedBrokenCeiling=!1;break}if(n&&!t.fixedBrokenCeiling&&(t.fixedBrokenCeiling=!0),r.time>t.currentSegmentEndTime)break}}static addSwitchHighN2(t){const e=t.current,s=t.previous;if(t.switchingGas&&s&&s.gas.fHe>0&&5*(e.gas.fN2-s.gas.fN2)>-(e.gas.fHe-s.gas.fHe)){const i=h.createSwitchToHigherN2(t.elapsed,e.startDepth,e.gas);t.events.add(i)}}static addMndExceeded(t,e){const s=t.current,r=t.gasEnd(e.startDepth);t.maxMnd<r&&t.fixedMnd&&this.addMndEvent(t,t.elapsed,s.startDepth);const n=t.gasEnd(e.endDepth);t.maxMnd<n&&t.fixedMnd&&this.addMndEvent(t,t.elapsed+s.duration,s.endDepth),t.fixedMnd=n<=t.maxMnd}static addMndEvent(t,e,s){const n=h.createMaxEndExceeded(e,s,t.current.gas);t.events.add(n),t.fixedMnd=!0}}class dt{constructor(t){this.events=t,this.lastCeilingIndex=0,this.currentSegmentStartTime=0,this.currentSegmentEndTime=0,this.fixedBrokenCeiling=!0}assignSegment(t){this.currentSegmentStartTime=this.currentSegmentEndTime,this.currentSegmentEndTime=this.currentSegmentStartTime+t.duration}belowCeiling(t,e){return e.depthAt(t.time-this.currentSegmentStartTime)>=t.depth}}}}]);